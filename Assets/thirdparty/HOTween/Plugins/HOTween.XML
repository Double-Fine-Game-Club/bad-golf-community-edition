<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HOTween</name>
    </assembly>
    <members>
        <member name="T:Holoville.HOTween.Plugins.PlugSetColor">
            <summary>
            Plugin for the tweening of the color of your choice.
            Used for changing material colors different from the default one (like _SpecColor or _Emission).
            Target for this tween must be of type <see cref="T:UnityEngine.Material"/>.
            </summary>
        </member>
        <member name="T:Holoville.HOTween.Plugins.Core.ABSTweenPlugin">
            <summary>
            ABSTRACT base class for all <see cref="T:Holoville.HOTween.Plugins.Core.ABSTweenPlugin"/> classes.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Plugins.Core.ABSTweenPlugin._startVal">
            <summary>
            Untyped start value.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Plugins.Core.ABSTweenPlugin._endVal">
            <summary>
            Untyped end value.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Plugins.Core.ABSTweenPlugin._duration">
            <summary>
            Stored so it can be set indipendently in case of speed-based tweens.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Plugins.Core.ABSTweenPlugin._propName">
            <summary>
            Name of the property being tweened. Stored during Init, used by overwrite manager and log messages.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Plugins.Core.ABSTweenPlugin.targetType">
            <summary>
            Stored to be used during recreation of plugin for partial tweens.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Plugins.Core.ABSTweenPlugin.ease">
            <summary>
            Ease type.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Plugins.Core.ABSTweenPlugin.isRelative">
            <summary>
            Indicates that the end value is relative instead than absolute.
            Default: <c>false</c>.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Plugins.Core.ABSTweenPlugin.ignoreAccessor">
            <summary>
            Some plugins (like PlugSetColor) may set this to <c>false</c> when instantiated,
            to prevent the creation of a useless valAccessor.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Plugins.Core.ABSTweenPlugin.tweenObj">
            <summary>
            Reference to the Tweener controlling this plugin.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.ABSTweenPlugin.#ctor(System.Object,System.Boolean)">
            <summary>
            Creates a new instance of this plugin with the given options.
            Used because easeType can't be null, and otherwise there's no way
            to understand if the ease was voluntarily set by the user or not.
            </summary>
            <param name="p_endVal">
            The <see cref="T:System.Object"/> value to tween to.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.ABSTweenPlugin.#ctor(System.Object,Holoville.HOTween.EaseType,System.Boolean)">
            <summary>
            Creates a new instance of this plugin with the given options.
            </summary>
            <param name="p_endVal">
            The <see cref="T:System.Object"/> value to tween to.
            </param>
            <param name="p_easeType">
            The <see cref="T:Holoville.HOTween.EaseType"/> to use.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.ABSTweenPlugin.#ctor(System.Object,UnityEngine.AnimationCurve,System.Boolean)">
            <summary>
            Creates a new instance of this plugin with the given options.
            </summary>
            <param name="p_endVal">
            The <see cref="T:System.Object"/> value to tween to.
            </param>
            <param name="p_easeAnimCurve">
            The <see cref="T:UnityEngine.AnimationCurve"/> to use for easing.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.ABSTweenPlugin.Init(Holoville.HOTween.Tweener,System.String,Holoville.HOTween.EaseType,System.Type,System.Reflection.PropertyInfo,System.Reflection.FieldInfo)">
            <summary>
            Initializes the plugin after its instantiation.
            Called by Tweener after a property and plugin have been validated, and the plugin has to be set and added.
            Virtual because some classes (like PlugVector3Path) override it to avoid isRelative being TRUE.
            </summary>
            <param name="p_tweenObj">
            The <see cref="T:Holoville.HOTween.Tweener"/> to refer to.
            </param>
            <param name="p_propertyName">
            The name of the property to control.
            </param>
            <param name="p_easeType">
            The <see cref="T:Holoville.HOTween.EaseType"/> to use.
            </param>
            <param name="p_targetType">
            Directly passed from TweenParms to speed up MemberAccessor creation.
            </param>
            <param name="p_propertyInfo">
            Directly passed from TweenParms to speed up MemberAccessor creation.
            </param>
            <param name="p_fieldInfo">
            Directly passed from TweenParms to speed up MemberAccessor creation.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.ABSTweenPlugin.Startup">
            <summary>
            Starts up the plugin, getting the actual start and change values.
            Called by Tweener right before starting the effective animations.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.ABSTweenPlugin.Startup(System.Boolean)">
            <summary>
            Starts up the plugin, getting the actual start and change values.
            Called by Tweener right before starting the effective animations.
            </summary>
            <param name="p_onlyCalcSpeedBasedDur">
            Set to <c>true</c> by <see cref="M:Holoville.HOTween.Plugins.Core.ABSTweenPlugin.ForceSetSpeedBasedDuration"/>,
            to calculate only the speed based duration and then reset any startup changes
            (so Startup can be called from scratch when truly starting up).
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.ABSTweenPlugin.ForceSetSpeedBasedDuration">
            <summary>
            If speed based duration was not already set (meaning Startup has not yet been called),
            calculates the duration and then resets the plugin so that Startup will restart from scratch.
            Used by <see cref="M:Holoville.HOTween.Tweener.ForceSetSpeedBasedDuration"/>.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.ABSTweenPlugin.ValidateTarget(System.Object)">
            <summary>
            Overridden by plugins that need a specific type of target, to check it and validate it.
            Returns <c>true</c> if the tween target is valid.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.ABSTweenPlugin.Update(System.Single)">
            <summary>
            Updates the tween.
            </summary>
            <param name="p_totElapsed">
            The total elapsed time since startup (loops excluded).
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.ABSTweenPlugin.DoUpdate(System.Single)">
            <summary>
            Updates the plugin.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.ABSTweenPlugin.Rewind">
            <summary>
            Rewinds the tween.
            Should be overriden by tweens that control only part of the property (like HOTPluginVector3X).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.ABSTweenPlugin.Complete">
            <summary>
            Completes the tween.
            Should be overriden by tweens that control only part of the property (like HOTPluginVector3X).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.ABSTweenPlugin.ReverseEase">
            <summary>
            Reverses the ease of this plugin.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.ABSTweenPlugin.SetEase(Holoville.HOTween.EaseType)">
            <summary>
            Sets the ease type (called during Init, but can also be called by Tweener to change easeType while playing).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.ABSTweenPlugin.GetSpeedBasedDuration(System.Single)">
            <summary>
            Returns the speed-based duration based on the given speed.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.ABSTweenPlugin.CloneBasic">
            <summary>
            Returns a clone of the basic plugin
            (as it was at construction, without anything that was set during Init).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.ABSTweenPlugin.SetChangeVal">
            <summary>
            Sets the typed changeVal based on the current startVal and endVal.
            Can only be called once, otherwise some typedEndVal (like HOTPluginColor) will be set incorrectly.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.ABSTweenPlugin.ForceSetIncremental(System.Int32)">
            <summary>
            Used by Tweeners to force SetIncremental
            (SetIncremental can't be made internal since
            it needs to be overridden outside of HOTweem for custom plugin).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.ABSTweenPlugin.SetIncremental(System.Int32)">
            <summary>
            Sets the correct values in case of Incremental loop type.
            Also called by Tweener.ApplySequenceIncrement (used by Sequences during Incremental loops).
            </summary>
            <param name="p_diffIncr">
            The difference from the previous loop increment.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.ABSTweenPlugin.SetValue(System.Object)">
            <summary>
            Sets the value of the controlled property.
            Some plugins (like PlugSetColor or PlugQuaterion) might override this to get values from different properties.
            </summary>
            <param name="p_value">
            The new value.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.ABSTweenPlugin.GetValue">
            <summary>
            Gets the current value of the controlled property.
            Some plugins (like PlugSetColor) might override this to set values on different properties.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Plugins.Core.ABSTweenPlugin.startVal">
            <summary>
            Gets the untyped start value,
            sets both the untyped and the typed start value.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Plugins.Core.ABSTweenPlugin.endVal">
            <summary>
            Gets the untyped end value,
            sets both the untyped and the typed end value.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Plugins.Core.ABSTweenPlugin.initialized">
            <summary>
            Used by TweenParms to understand if this plugin was initialized with
            another Tweener, and thus clone it.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Plugins.Core.ABSTweenPlugin.propName">
            <summary>
            Used by <see cref="T:Holoville.HOTween.Core.OverwriteManager"/> to get the property name.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Plugins.Core.ABSTweenPlugin.pluginId">
            <summary>
            Some plugins might override this to specify a different ID (like PlugVector3X).
            Used by <see cref="T:Holoville.HOTween.Core.OverwriteManager"/> to check if two plugins are the same (for overwrite purposes).
            Plugins with -1 ids always overwrite and are overwritten.
            Plugins with different ids are always overwritten by plugins with -1 ids,
            but overwrite only identical ids.
            </summary>
            <value>
            The plugin identifier.
            </value>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugSetColor.#ctor(UnityEngine.Color)">
            <summary>
            Creates a new instance of this plugin using the main ease type.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Color"/> value to tween to.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugSetColor.#ctor(UnityEngine.Color,Holoville.HOTween.EaseType)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Color"/> value to tween to.
            </param>
            <param name="p_easeType">
            The <see cref="T:Holoville.HOTween.EaseType"/> to use.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugSetColor.#ctor(UnityEngine.Color,System.Boolean)">
            <summary>
            Creates a new instance of this plugin using the main ease type.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Color"/> value to tween to.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugSetColor.#ctor(UnityEngine.Color,Holoville.HOTween.EaseType,System.Boolean)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Color"/> value to tween to.
            </param>
            <param name="p_easeType">
            The <see cref="T:Holoville.HOTween.EaseType"/> to use.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugSetColor.#ctor(UnityEngine.Color,UnityEngine.AnimationCurve,System.Boolean)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Color"/> value to tween to.
            </param>
            <param name="p_easeAnimCurve">
            The <see cref="T:UnityEngine.AnimationCurve"/> to use for easing.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugSetColor.Property(Holoville.HOTween.Plugins.PlugSetColor.ColorName)">
            <summary>
            Selects the color property to change.
            </summary>
            <param name="p_colorName">
            The propertyName/colorName to change (see Unity's <see cref="M:UnityEngine.Material.SetColor(System.String,UnityEngine.Color)"/> if you don't know how it works),
            set via the <see cref="T:Holoville.HOTween.Plugins.PlugSetColor.ColorName"/> enum.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugSetColor.Property(System.String)">
            <summary>
            Selects the color property to change.
            </summary>
            <param name="p_propertyName">
            The propertyName/colorName to change (see Unity's <see cref="M:UnityEngine.Material.SetColor(System.String,UnityEngine.Color)"/> if you don't know how it works).
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugSetColor.ValidateTarget(System.Object)">
            <summary>
            Overridden by plugins that need a specific type of target, to check it and validate it.
            Returns <c>true</c> if the tween target is valid.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugSetColor.DoUpdate(System.Single)">
            <summary>
            Updates the tween.
            </summary>
            <param name="p_totElapsed">
            The total elapsed time since startup.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugSetColor.GetSpeedBasedDuration(System.Single)">
            <summary>
            Returns the speed-based duration based on the given speed x second.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugSetColor.SetChangeVal">
            <summary>
            Sets the typed changeVal based on the current startVal and endVal.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugSetColor.SetIncremental(System.Int32)">
            <summary>
            Sets the correct values in case of Incremental loop type.
            </summary>
            <param name="p_diffIncr">
            The difference from the previous loop increment.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugSetColor.SetValue(System.Object)">
            <summary>
            Sets the value of the controlled property.
            Some plugins (like PlugSetColor) might override this to get values from different properties.
            </summary>
            <param name="p_value">
            The new value.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugSetColor.GetValue">
            <summary>
            Gets the current value of the controlled property.
            Some plugins (like PlugSetColor) might override this to set values on different properties.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Plugins.PlugSetColor.startVal">
            <summary>
            Gets the untyped start value,
            sets both the untyped and the typed start value.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Plugins.PlugSetColor.endVal">
            <summary>
            Gets the untyped end value,
            sets both the untyped and the typed end value.
            </summary>
        </member>
        <member name="T:Holoville.HOTween.Plugins.PlugSetColor.ColorName">
            <summary>
            Enumeration of color properties names.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Plugins.PlugSetColor.ColorName._Color">
            <summary>
            Main color of a material.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Plugins.PlugSetColor.ColorName._SpecColor">
            <summary>
            Specular color of a material (used in specular/glossy/vertexlit shaders).
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Plugins.PlugSetColor.ColorName._Emission">
            <summary>
            Emissive color of a material (used in vertexlit shaders).
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Plugins.PlugSetColor.ColorName._ReflectColor">
            <summary>
            Reflection color of a material (used in reflective shaders).
            </summary>
        </member>
        <member name="T:Holoville.HOTween.Plugins.Core.PlugVector4">
            <summary>
            Default plugin for the tweening of Vector4 objects.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugVector4.#ctor(UnityEngine.Vector4)">
            <summary>
            Creates a new instance of this plugin using the main ease type.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Vector4"/> value to tween to.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugVector4.#ctor(UnityEngine.Vector4,Holoville.HOTween.EaseType)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Vector4"/> value to tween to.
            </param>
            <param name="p_easeType">
            The <see cref="T:Holoville.HOTween.EaseType"/> to use.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugVector4.#ctor(UnityEngine.Vector4,System.Boolean)">
            <summary>
            Creates a new instance of this plugin using the main ease type.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Vector4"/> value to tween to.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugVector4.#ctor(UnityEngine.Vector4,Holoville.HOTween.EaseType,System.Boolean)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Vector4"/> value to tween to.
            </param>
            <param name="p_easeType">
            The <see cref="T:Holoville.HOTween.EaseType"/> to use.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugVector4.#ctor(UnityEngine.Vector4,UnityEngine.AnimationCurve,System.Boolean)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Vector4"/> value to tween to.
            </param>
            <param name="p_easeAnimCurve">
            The <see cref="T:UnityEngine.AnimationCurve"/> to use for easing.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugVector4.GetSpeedBasedDuration(System.Single)">
            <summary>
            Returns the speed-based duration based on the given speed x second.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugVector4.SetChangeVal">
            <summary>
            Sets the typed changeVal based on the current startVal and endVal.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugVector4.SetIncremental(System.Int32)">
            <summary>
            Sets the correct values in case of Incremental loop type.
            </summary>
            <param name="p_diffIncr">
            The difference from the previous loop increment.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugVector4.DoUpdate(System.Single)">
            <summary>
            Updates the tween.
            </summary>
            <param name="p_totElapsed">
            The total elapsed time since startup.
            </param>
        </member>
        <member name="P:Holoville.HOTween.Plugins.Core.PlugVector4.startVal">
            <summary>
            Gets the untyped start value,
            sets both the untyped and the typed start value.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Plugins.Core.PlugVector4.endVal">
            <summary>
            Gets the untyped end value,
            sets both the untyped and the typed end value.
            </summary>
        </member>
        <member name="T:Holoville.HOTween.Core.Easing.Strong">
            <summary>
            This class contains a C# port of the easing equations created by Robert Penner (http://robertpenner.com/easing).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.Easing.Strong.EaseIn(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Tween.
            </summary>
            <param name="time">
            Time.
            </param>
            <param name="startValue">
            Begin value.
            </param>
            <param name="changeValue">
            Change value.
            </param>
            <param name="duration">
            Duration.
            </param>
            <param name="unusedOvershootOrAmplitude">Unused: here to keep same delegate for all ease types.</param>
            <param name="unusedPeriod">Unused: here to keep same delegate for all ease types.</param>
            <returns>
            A <see cref="T:System.Single"/>
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Core.Easing.Strong.EaseOut(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Tween.
            </summary>
            <param name="time">
            Time.
            </param>
            <param name="startValue">
            Begin value.
            </param>
            <param name="changeValue">
            Change value.
            </param>
            <param name="duration">
            Duration.
            </param>
            <param name="unusedOvershootOrAmplitude">Unused: here to keep same delegate for all ease types.</param>
            <param name="unusedPeriod">Unused: here to keep same delegate for all ease types.</param>
            <returns>
            A <see cref="T:System.Single"/>
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Core.Easing.Strong.EaseInOut(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Tween.
            </summary>
            <param name="time">
            Time.
            </param>
            <param name="startValue">
            Begin value.
            </param>
            <param name="changeValue">
            Change value.
            </param>
            <param name="duration">
            Duration.
            </param>
            <param name="unusedOvershootOrAmplitude">Unused: here to keep same delegate for all ease types.</param>
            <param name="unusedPeriod">Unused: here to keep same delegate for all ease types.</param>
            <returns>
            A <see cref="T:System.Single"/>
            </returns>
        </member>
        <member name="T:Holoville.HOTween.Core.Easing.Sine">
            <summary>
            This class contains a C# port of the easing equations created by Robert Penner (http://robertpenner.com/easing).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.Easing.Sine.EaseIn(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Easing equation function for a sinusoidal (sin(t)) easing in: accelerating from zero velocity.
            </summary>
            <param name="time">
            Current time (in frames or seconds).
            </param>
            <param name="startValue">
            Starting value.
            </param>
            <param name="changeValue">
            Change needed in value.
            </param>
            <param name="duration">
            Expected easing duration (in frames or seconds).
            </param>
            <param name="unusedOvershootOrAmplitude">Unused: here to keep same delegate for all ease types.</param>
            <param name="unusedPeriod">Unused: here to keep same delegate for all ease types.</param>
            <returns>
            The eased value.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Core.Easing.Sine.EaseOut(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Easing equation function for a sinusoidal (sin(t)) easing out: decelerating from zero velocity.
            </summary>
            <param name="time">
            Current time (in frames or seconds).
            </param>
            <param name="startValue">
            Starting value.
            </param>
            <param name="changeValue">
            Change needed in value.
            </param>
            <param name="duration">
            Expected easing duration (in frames or seconds).
            </param>
            <param name="unusedOvershootOrAmplitude">Unused: here to keep same delegate for all ease types.</param>
            <param name="unusedPeriod">Unused: here to keep same delegate for all ease types.</param>
            <returns>
            The eased value.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Core.Easing.Sine.EaseInOut(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Easing equation function for a sinusoidal (sin(t)) easing in/out: acceleration until halfway, then deceleration.
            </summary>
            <param name="time">
            Current time (in frames or seconds).
            </param>
            <param name="startValue">
            Starting value.
            </param>
            <param name="changeValue">
            Change needed in value.
            </param>
            <param name="duration">
            Expected easing duration (in frames or seconds).
            </param>
            <param name="unusedOvershootOrAmplitude">Unused: here to keep same delegate for all ease types.</param>
            <param name="unusedPeriod">Unused: here to keep same delegate for all ease types.</param>
            <returns>
            The eased value.
            </returns>
        </member>
        <member name="T:Holoville.HOTween.Plugins.Core.PlugVector3">
            <summary>
            Default plugin for the tweening of Vector3 objects.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugVector3.#ctor(UnityEngine.Vector3)">
            <summary>
            Creates a new instance of this plugin using the main ease type.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Vector3"/> value to tween to.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugVector3.#ctor(UnityEngine.Vector3,Holoville.HOTween.EaseType)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Vector3"/> value to tween to.
            </param>
            <param name="p_easeType">
            The <see cref="T:Holoville.HOTween.EaseType"/> to use.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugVector3.#ctor(UnityEngine.Vector3,System.Boolean)">
            <summary>
            Creates a new instance of this plugin using the main ease type.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Vector3"/> value to tween to.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugVector3.#ctor(UnityEngine.Vector3,Holoville.HOTween.EaseType,System.Boolean)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Vector3"/> value to tween to.
            </param>
            <param name="p_easeType">
            The <see cref="T:Holoville.HOTween.EaseType"/> to use.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugVector3.#ctor(UnityEngine.Vector3,UnityEngine.AnimationCurve,System.Boolean)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Vector3"/> value to tween to.
            </param>
            <param name="p_easeAnimCurve">
            The <see cref="T:UnityEngine.AnimationCurve"/> to use for easing.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugVector3.GetSpeedBasedDuration(System.Single)">
            <summary>
            Returns the speed-based duration based on the given speed x second.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugVector3.SetChangeVal">
            <summary>
            Sets the typed changeVal based on the current startVal and endVal.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugVector3.SetIncremental(System.Int32)">
            <summary>
            Sets the correct values in case of Incremental loop type.
            </summary>
            <param name="p_diffIncr">
            The difference from the previous loop increment.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugVector3.DoUpdate(System.Single)">
            <summary>
            Updates the tween.
            </summary>
            <param name="p_totElapsed">
            The total elapsed time since startup.
            </param>
        </member>
        <member name="P:Holoville.HOTween.Plugins.Core.PlugVector3.startVal">
            <summary>
            Gets the untyped start value,
            sets both the untyped and the typed start value.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Plugins.Core.PlugVector3.endVal">
            <summary>
            Gets the untyped end value,
            sets both the untyped and the typed end value.
            </summary>
        </member>
        <member name="T:Holoville.HOTween.IHOTweenComponent">
            <summary>
            Public interface shared by <see cref="T:Holoville.HOTween.Tweener"/> and <see cref="T:Holoville.HOTween.Sequence"/>.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.IHOTweenComponent.Kill">
            <summary>
            Kills this Tweener/Sequence.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.IHOTweenComponent.Play">
            <summary>
            Resumes this Tweener/Sequence (tween delay included).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.IHOTweenComponent.PlayForward">
            <summary>
            Resumes this Tweener/Sequence (tween delay included) and plays it forward.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.IHOTweenComponent.PlayBackwards">
            <summary>
            Resumes this Tweener/Sequence and plays it backwards.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.IHOTweenComponent.Pause">
            <summary>
            Pauses this Tweener/Sequence.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.IHOTweenComponent.Rewind">
            <summary>
            Rewinds this Tweener/Sequence (loops and tween delay included), and pauses it.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.IHOTweenComponent.Restart">
            <summary>
            Restarts this Tweener/Sequence from the beginning (loops and tween delay included).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.IHOTweenComponent.Reverse(System.Boolean)">
            <summary>
            Reverses this Tweener/Sequence,
            animating it backwards from its current position.
            </summary>
            <param name="p_forcePlay">
            If TRUE, the tween will also start playing in case it was paused,
            otherwise it will maintain its current play/pause state (default).
            </param>
        </member>
        <member name="M:Holoville.HOTween.IHOTweenComponent.Complete">
            <summary>
            Completes this Tweener/Sequence.
            Where a loop was involved and not infinite, the Tweener/Sequence completes at the position where it would actually be after the set number of loops.
            If there were infinite loops, this method will have no effect.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.IHOTweenComponent.GoTo(System.Single)">
            <summary>
            Sends the Tweener/Sequence to the given time (taking also loops into account).
            If the time is bigger than the total Tweener/Sequence duration, it goes to the end.
            </summary>
            <param name="p_time">
            The time where the Tweener/Sequence should be sent.
            </param>
            <returns>
            Returns <c>true</c> if the Tweener/Sequence reached its end and was completed.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.IHOTweenComponent.GoToAndPlay(System.Single)">
            <summary>
            Sends the Tweener/Sequence to the given time (taking also loops into account) and plays it.
            If the time is bigger than the total Tweener/Sequence duration, it goes to the end.
            </summary>
            <param name="p_time">
            The time where the Tweener/Sequence should be sent.
            </param>
            <returns>
            Returns <c>true</c> if the Tweener/Sequence reached its end and was completed.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.IHOTweenComponent.WaitForCompletion">
            <summary>
            A coroutine that waits until the Tweener/Sequence is complete (delays and loops included).
            You can use it inside a coroutin as a yield. Ex:
            yield return StartCoroutine( myTweenComponent.WaitForCompletion() );
            </summary>
        </member>
        <member name="M:Holoville.HOTween.IHOTweenComponent.WaitForRewind">
            <summary>
            A coroutine that waits until the Tweener/Sequence is rewinded (loops included).
            You can use it inside a coroutine as a yield. Ex:
            yield return StartCoroutine( myTweenComponent.WaitForRewind() );
            </summary>
        </member>
        <member name="M:Holoville.HOTween.IHOTweenComponent.ApplyCallback(Holoville.HOTween.CallbackType,Holoville.HOTween.Core.TweenDelegate.TweenCallback)">
            <summary>
            Assigns the given callback to this Tweener/Sequence,
            overwriting any existing callbacks of the same type.
            </summary>
            <param name="p_callbackType">The type of callback to apply</param>
            <param name="p_callback">The function to call, who must return <c>void</c> and accept no parameters</param>
        </member>
        <member name="M:Holoville.HOTween.IHOTweenComponent.ApplyCallback(Holoville.HOTween.CallbackType,Holoville.HOTween.Core.TweenDelegate.TweenCallbackWParms,System.Object[])">
            <summary>
            Assigns the given callback to this Tweener/Sequence,
            overwriting any existing callbacks of the same type.
            </summary>
            <param name="p_callbackType">The type of callback to apply</param>
            <param name="p_callback">The function to call, who must return <c>void</c> and accept no parameters.
            It must return <c>void</c> and has to accept a single parameter of type <see cref="T:Holoville.HOTween.TweenEvent"/></param>
            <param name="p_callbackParms">Additional comma separated parameters to pass to the function</param>
        </member>
        <member name="M:Holoville.HOTween.IHOTweenComponent.IsTweening(System.Object)">
            <summary>
            Returns <c>true</c> if the given target is currently involved in this Tweener/Sequence (taking into account also nested tweens).
            Returns <c>false</c> both if the given target is not inside this Tweener/Sequence, than if the relative Tweener/Sequence is paused.
            To simply check if the target is attached to this Tweener/Sequence, use <c>IsLinkedTo( target )</c> instead.
            </summary>
            <param name="p_target">
            The target to check.
            </param>
            <returns>
            A value of <c>true</c> if the given target is currently involved in a running tween or sequence.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.IHOTweenComponent.IsLinkedTo(System.Object)">
            <summary>
            Returns <c>true</c> if the given target is linked to this Tweener/Sequence (running or not, taking into account also nested tweens).
            </summary>
            <param name="p_target">
            The target to check.
            </param>
            <returns>
            A value of <c>true</c> if the given target is linked to this Tweener/Sequence (running or not, taking into account also nested tweens).
            </returns>
        </member>
        <member name="P:Holoville.HOTween.IHOTweenComponent.id">
            <summary>
            Eventual ID of this tween
            (more than one tween can share the same ID, thus allowing for grouped operations).
            You can also use <c>intId</c> instead of <c>id</c> for faster operations.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.IHOTweenComponent.intId">
            <summary>
            Default is <c>-1</c>.
            Eventual int ID of this tween
            (more than one tween can share the same intId, thus allowing for grouped operations).
            The main difference from <c>id</c> is that while <c>id</c> is more legible, <c>intId</c> allows for faster operations.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.IHOTweenComponent.autoKillOnComplete">
            <summary>
            Default is <c>true</c>.
            If <c>false</c> doesn't remove this Tweener/Sequence from HOTween's list when it is completed
            (useful if you want to be able to control it independently with GoTo, instead than letting it run),
            and you will need to call an <c>HOTween.Kill</c> to remove this Tweener/Sequence.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.IHOTweenComponent.enabled">
            <summary>
            Default is <c>true</c>.
            If set to <c>false</c>, this Tweener/Sequence will not be updated,
            and any use of animation methods (Play/Pause/Rewind/etc) will be ignored
            (both if called directly via this instance, than if using HOTween.Play/Pause/Rewind/etc.).
            </summary>
        </member>
        <member name="P:Holoville.HOTween.IHOTweenComponent.timeScale">
            <summary>
            Time scale that will be used by this Tweener/Sequence.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.IHOTweenComponent.loops">
            <summary>
            Number of times the Tweener/Sequence will run (<c>-1</c> means the tween has infinite loops, <c>1</c> means the tween will run only once).
            </summary>
        </member>
        <member name="P:Holoville.HOTween.IHOTweenComponent.loopType">
            <summary>
            Type of loop for this Tweener/Sequence, in case <see cref="P:Holoville.HOTween.IHOTweenComponent.loops"/> is greater than 1 (or infinite).
            </summary>
        </member>
        <member name="P:Holoville.HOTween.IHOTweenComponent.position">
            <summary>
            Gets and sets the time position of the Tweener/Sequence (loops are included when not infinite, delay is not).
            </summary>
        </member>
        <member name="P:Holoville.HOTween.IHOTweenComponent.duration">
            <summary>
            Duration of this Tweener/Sequence, loops and tween delay excluded.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.IHOTweenComponent.fullDuration">
            <summary>
            Full duration of this Tweener/Sequence, loops included (when not infinite) but tween delay excluded.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.IHOTweenComponent.elapsed">
            <summary>
            Elapsed time within the current loop (tween delay excluded).
            Note that <c>elapsed</c> will be equal to <c>duration</c> only when all the loops are completed,
            otherwise each time a loop is completed, <c>completedLoops</c> is augmented by 1 and <c>elapsed</c> is reset to <c>0</c>.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.IHOTweenComponent.fullElapsed">
            <summary>
            Full elapsed time including loops (but without considering tween delay).
            </summary>
        </member>
        <member name="P:Holoville.HOTween.IHOTweenComponent.updateType">
            <summary>
            The update type for this Tweener/Sequence.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.IHOTweenComponent.completedLoops">
            <summary>
            Number of loops that have been executed.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.IHOTweenComponent.isEmpty">
            <summary>
            Returns a value of <c>true</c> if this Tweener/Sequence contains no tweens
            (if this is a Tweener, it means that no valid property to tween was set;
            if this is a Sequence, it means no valid <see cref="T:Holoville.HOTween.Tweener"/> was added).
            </summary>
        </member>
        <member name="P:Holoville.HOTween.IHOTweenComponent.isReversed">
            <summary>
            Returns a value of <c>true</c> if this Tweener/Sequence is set to go backwards (because of a call to <c>Reverse</c>.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.IHOTweenComponent.isLoopingBack">
            <summary>
            Returns a value of <c>true</c> when this Tweener/Sequence is in the "going backwards" part of a Yoyo loop.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.IHOTweenComponent.isPaused">
            <summary>
            Returns a value of <c>true</c> if this Tweener/Sequence is paused.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.IHOTweenComponent.hasStarted">
            <summary>
            Returns a value of <c>true</c> after this Tweener/Sequence was started the first time,
            or if a call to <c>GoTo</c> or <c>GoToAndPlay</c> was executed.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.IHOTweenComponent.isComplete">
            <summary>
            Returns a value of <c>true</c> when this Tweener/Sequence is complete.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.IHOTweenComponent.isSequenced">
            <summary>
            Returns a value of <c>true</c> if this Tweener/Sequence was added to a Sequence.
            </summary>
        </member>
        <member name="T:Holoville.HOTween.Core.Easing.Expo">
            <summary>
            This class contains a C# port of the easing equations created by Robert Penner (http://robertpenner.com/easing).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.Easing.Expo.EaseIn(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Easing equation function for an exponential (2^t) easing in: accelerating from zero velocity.
            </summary>
            <param name="time">
            Current time (in frames or seconds).
            </param>
            <param name="startValue">
            Starting value.
            </param>
            <param name="changeValue">
            Change needed in value.
            </param>
            <param name="duration">
            Expected easing duration (in frames or seconds).
            </param>
            <param name="unusedOvershootOrAmplitude">Unused: here to keep same delegate for all ease types.</param>
            <param name="unusedPeriod">Unused: here to keep same delegate for all ease types.</param>
            <returns>
            The eased value.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Core.Easing.Expo.EaseOut(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Easing equation function for an exponential (2^t) easing out: decelerating from zero velocity.
            </summary>
            <param name="time">
            Current time (in frames or seconds).
            </param>
            <param name="startValue">
            Starting value.
            </param>
            <param name="changeValue">
            Change needed in value.
            </param>
            <param name="duration">
            Expected easing duration (in frames or seconds).
            </param>
            <param name="unusedOvershootOrAmplitude">Unused: here to keep same delegate for all ease types.</param>
            <param name="unusedPeriod">Unused: here to keep same delegate for all ease types.</param>
            <returns>
            The eased value.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Core.Easing.Expo.EaseInOut(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Easing equation function for an exponential (2^t) easing in/out: acceleration until halfway, then deceleration.
            </summary>
            <param name="time">
            Current time (in frames or seconds).
            </param>
            <param name="startValue">
            Starting value.
            </param>
            <param name="changeValue">
            Change needed in value.
            </param>
            <param name="duration">
            Expected easing duration (in frames or seconds).
            </param>
            <param name="unusedOvershootOrAmplitude">Unused: here to keep same delegate for all ease types.</param>
            <param name="unusedPeriod">Unused: here to keep same delegate for all ease types.</param>
            <returns>
            The eased value.
            </returns>
        </member>
        <member name="T:Holoville.HOTween.Core.ABSTweenComponent">
            <summary>
            Base class for all HOTween members
            (<see cref="T:Holoville.HOTween.Tweener"/> and <see cref="T:Holoville.HOTween.Sequence"/>).
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponent.ignoreCallbacks">
            <summary>
            Always set to TRUE by Update(), if isStartupIteration is true,
            and reset to FALSE in the last line of Update().
            Can also be set to TRUE by Sequence.TweenStartupIteration,
            and then immediately reset to FALSE.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponent._steadyIgnoreCallbacks">
            <summary>
            Used by main Sequences to set an ignoreCallbacks value to all its items/subitems,
            which the items/subitmes themselves won't be able to reset.
            Necessary during TweenStartupIteration.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponent._completedLoops">
            <summary>
            Completed loops.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponent._duration">
            <summary>
            Duration.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponent._originalDuration">
            <summary>
            Memorized when a partial tween is applied.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponent._originalNonSpeedBasedDuration">
            <summary>
            Memorized when applying speedBased duration.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponent._fullDuration">
            <summary>
            Full duration.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponent._elapsed">
            <summary>
            Elapsed.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponent._fullElapsed">
            <summary>
            Full elapsed.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponent._destroyed">
            <summary>
            Destroyed.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponent._isEmpty">
            <summary>
            Is empty.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponent._isReversed">
            <summary>
            Running backwards.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponent._isLoopingBack">
            <summary>
            Yoyo looping back.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponent._hasStarted">
            <summary>
            Has started.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponent._isComplete">
            <summary>
            Is complete.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponent.prevFullElapsed">
            <summary>
            Used to determine if OnUpdate callbacks should be called.
            Refreshed at the end of each update.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponent.prevCompletedLoops">
            <summary>
            Previously completed loops.
            Refrehsed at the end of each update.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponent.manageBehaviours">
            <summary>
            True if there are behaviours to manage
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponent.manageGameObjects">
            <summary>
            True if there are gameObject to manage
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponent.managedBehavioursOn">
            <summary>
            Behaviours to activate
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponent.managedBehavioursOff">
            <summary>
            Behaviours to deactivate
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponent.managedGameObjectsOn">
            <summary>
            GameObjects to activate
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponent.managedGameObjectsOff">
            <summary>
            GameObejcts to deactivate
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponent.managedBehavioursOriginalState">
            <summary>
            True = enabled, False = disabled
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponent.managedGameObjectsOriginalState">
            <summary>
            True = active, False = inactive
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.Kill">
            <summary>
            Kills this Tweener/Sequence, removes it from HOTween, and cleans it.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.Kill(System.Boolean)">
            <summary>
            Kills this Tweener/Sequence and cleans it.
            </summary>
            <param name="p_autoRemoveFromHOTween">
            If <c>true</c> also calls <c>HOTween.Kill(this)</c> to remove it from HOTween.
            Set internally to <c>false</c> when I already know that HOTween is going to remove it.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.Play">
            <summary>
            Resumes this Tweener/Sequence (tween delay included).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.PlayForward">
            <summary>
            Resumes this Tweener/Sequence (tween delay included) and plays it forward.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.PlayBackwards">
            <summary>
            Resumes this Tweener/Sequence and plays it backwards.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.Pause">
            <summary>
            Pauses this Tweener/Sequence.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.Rewind">
            <summary>
            Rewinds this Tweener/Sequence (loops and tween delay included), and pauses it.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.Restart">
            <summary>
            Restarts this Tweener/Sequence from the beginning (loops and tween delay included).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.Reverse(System.Boolean)">
            <summary>
            Reverses this Tweener/Sequence,
            animating it backwards from its curren position.
            </summary>
            <param name="p_forcePlay">
            If TRUE, the tween will also start playing in case it was paused,
            otherwise it will maintain its current play/pause state (default).
            </param>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.Complete">
            <summary>
            Completes this Tweener/Sequence.
            Where a loop was involved, the Tweener/Sequence completes at the position where it would actually be after the set number of loops.
            If there were infinite loops, this method will have no effect.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.GoTo(System.Single)">
            <summary>
            Sends the Tweener/Sequence to the given time (taking also loops into account).
            If the time is bigger than the total Tweener/Sequence duration, it goes to the end.
            </summary>
            <param name="p_time">
            The time where the Tweener/Sequence should be sent.
            </param>
            <returns>
            Returns <c>true</c> if the Tweener/Sequence reached its end and was completed.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.GoTo(System.Single,System.Boolean)">
            <summary>
            Sends the Tweener/Sequence to the given time (taking also loops into account).
            If the time is bigger than the total Tweener/Sequence duration, it goes to the end.
            </summary>
            <param name="p_time">
            The time where the Tweener/Sequence should be sent.
            </param>
            <param name="p_forceUpdate">
            By default, if a Tweener/Sequence is already at the exact given time, it will not be refreshed.
            Setting this to <c>true</c> will force it to refresh
            (useful only if you want to be sure that any changes you made to the tweened property,
            outside of HOTween, are reset).
            </param>
            <returns>
            Returns <c>true</c> if the Tweener/Sequence reached its end and was completed.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.GoToAndPlay(System.Single)">
            <summary>
            Sends the Tweener/Sequence to the given time (taking also loops into account) and plays it.
            If the time is bigger than the total Tweener/Sequence duration, it goes to the end.
            </summary>
            <param name="p_time">
            The time where the Tweener/Sequence should be sent.
            </param>
            <returns>
            Returns <c>true</c> if the Tweener/Sequence reached its end and was completed.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.GoToAndPlay(System.Single,System.Boolean)">
            <summary>
            Sends the Tweener/Sequence to the given time (taking also loops into account) and plays it.
            If the time is bigger than the total Tweener/Sequence duration, it goes to the end.
            </summary>
            <param name="p_time">
            The time where the Tweener/Sequence should be sent.
            </param>
            <param name="p_forceUpdate">
            By default, if a Tweener/Sequence is already at the exact given time, it will not be refreshed.
            Setting this to <c>true</c> will force it to refresh
            (useful only if you want to be sure that any changes you made to the tweened property,
            outside of HOTween, are reset).
            </param>
            <returns>
            Returns <c>true</c> if the Tweener/Sequence reached its end and was completed.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.WaitForCompletion">
            <summary>
            A coroutine that waits until the Tweener/Sequence is complete (delays and loops included).
            You can use it inside a coroutine as a yield. Ex:
            yield return StartCoroutine( myTweenComponent.WaitForCompletion() );
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.WaitForRewind">
            <summary>
            A coroutine that waits until the Tweener/Sequence is rewinded (loops included).
            You can use it inside a coroutine as a yield. Ex:
            yield return StartCoroutine( myTweenComponent.WaitForRewind() );
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.Reset">
            <summary>
            Completely resets this tween, except its target (in case of Tweeners).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.ApplyCallback(Holoville.HOTween.CallbackType,Holoville.HOTween.Core.TweenDelegate.TweenCallback)">
            <summary>
            Assigns the given callback to this Tweener/Sequence,
            overwriting any existing callbacks of the same type.
            </summary>
            <param name="p_callbackType">The type of callback to apply</param>
            <param name="p_callback">The function to call, who must return <c>void</c> and accept no parameters</param>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.ApplyCallback(Holoville.HOTween.CallbackType,Holoville.HOTween.Core.TweenDelegate.TweenCallbackWParms,System.Object[])">
            <summary>
            Assigns the given callback to this Tweener/Sequence,
            overwriting any existing callbacks of the same type.
            </summary>
            <param name="p_callbackType">The type of callback to apply</param>
            <param name="p_callback">The function to call.
            It must return <c>void</c> and has to accept a single parameter of type <see cref="T:Holoville.HOTween.TweenEvent"/></param>
            <param name="p_callbackParms">Additional comma separated parameters to pass to the function</param>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.ApplyCallback(Holoville.HOTween.CallbackType,UnityEngine.GameObject,System.String,System.Object,UnityEngine.SendMessageOptions)">
            <summary>
            Assigns the given callback to this Tweener/Sequence,
            overwriting any existing callbacks of the same type.
            This overload will use sendMessage to call the method named p_methodName 
            on every MonoBehaviour in the p_sendMessageTarget GameObject.
            </summary>
            <param name="p_callbackType">The type of callback to apply</param>
            <param name="p_sendMessageTarget">GameObject to target for sendMessage</param>
            <param name="p_methodName">Name of the method to call</param>
            <param name="p_value">Eventual additional parameter</param>
            <param name="p_options">SendMessageOptions</param>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.ApplyCallback(System.Boolean,Holoville.HOTween.CallbackType,Holoville.HOTween.Core.TweenDelegate.TweenCallback,Holoville.HOTween.Core.TweenDelegate.TweenCallbackWParms,System.Object[])">
            <summary>
            Assigns the given callback to this Tweener/Sequence,
            overwriting any existing callbacks of the same type.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.IsTweening(System.Object)">
            <summary>
            Returns <c>true</c> if the given target is currently involved in a running tween or sequence.
            Returns <c>false</c> both if the given target is not inside a tween, than if the relative tween is paused.
            To simply check if the target is attached to a tween or sequence, use <c>IsLinkedTo( target )</c> instead.
            </summary>
            <param name="p_target">
            The target to check.
            </param>
            <returns>
            A value of <c>true</c> if the given target is currently involved in a running tween or sequence.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.IsTweening(System.String)">
            <summary>
            Returns <c>true</c> if the tween with the given string id is currently involved in a running tween or sequence.
            </summary>
            <param name="p_id">
            The id to check for.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.IsTweening(System.Int32)">
            <summary>
            Returns <c>true</c> if the tween with the given int id is currently involved in a running tween or sequence.
            </summary>
            <param name="p_id">
            The id to check for.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.IsLinkedTo(System.Object)">
            <summary>
            Returns <c>true</c> if the given target is linked to a tween or sequence (running or not).
            </summary>
            <param name="p_target">
            The target to check.
            </param>
            <returns>
            A value of <c>true</c> if the given target is linked to a tween or sequence (running or not).
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.GetTweenTargets">
            <summary>
            Returns a list of all the targets of this tween, or NULL if there are none.
            </summary>
            <returns>A list of all the targets of this tween, or NULL if there are none.</returns>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.GetTweensById(System.String)">
            <summary>
            Returns a list of the eventual existing tweens with the given Id within this ABSTweenComponent,
            nested tweens included (or an empty list if no tweens were found).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.GetTweensByIntId(System.Int32)">
            <summary>
            Returns a list of the eventual existing tweens with the given intId within this ABSTweenComponent,
            nested tweens included (or an empty list if no tweens were found).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.Complete(System.Boolean)">
            <summary>
            Used internally by HOTween, to avoid having the tween calling a kill while HOTween will already be killing it.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.Update(System.Single)">
            <summary>
            Updates the Tweener/Sequence by the given elapsed time,
            and returns a value of <c>true</c> if the Tweener/Sequence is complete.
            </summary>
            <param name="p_elapsed">
            The elapsed time since the last update.
            </param>
            <returns>
            A value of <c>true</c> if the tween is not reversed and is complete (or the tween target doesn't exist anymore), otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.Update(System.Single,System.Boolean)">
            <summary>
            Updates the Tweener/Sequence by the given elapsed time,
            and returns a value of <c>true</c> if the Tweener/Sequence is complete.
            </summary>
            <param name="p_elapsed">
            The elapsed time since the last update.
            </param>
            <param name="p_forceUpdate">
            If <c>true</c> forces the update even if the Tweener/Sequence is complete or paused,
            but ignores onUpdate, and sends onComplete and onStepComplete calls only if the Tweener/Sequence wasn't complete before this call.
            </param>
            <returns>
            A value of <c>true</c> if the tween is not reversed and complete (or the tween target doesn't exist anymore), otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.Update(System.Single,System.Boolean,System.Boolean)">
            <summary>
            Updates the Tweener/Sequence by the given elapsed time,
            and returns a value of <c>true</c> if the Tweener/Sequence is complete.
            </summary>
            <param name="p_elapsed">
            The elapsed time since the last update.
            </param>
            <param name="p_forceUpdate">
            If <c>true</c> forces the update even if the Tweener/Sequence is complete or paused,
            but ignores onUpdate, and sends onComplete and onStepComplete calls only if the Tweener/Sequence wasn't complete before this call.
            </param>
            <param name="p_isStartupIteration">
            If <c>true</c> means the update is due to a startup iteration (managed by Sequence Startup),
            and all callbacks will be ignored.
            </param>
            <returns>
            A value of <c>true</c> if the tween is not reversed and complete (or the tween target doesn't exist anymore), otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.Update(System.Single,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Updates the Tweener/Sequence by the given elapsed time,
            and returns a value of <c>true</c> if the Tweener/Sequence is complete.
            </summary>
            <param name="p_elapsed">
            The elapsed time since the last update.
            </param>
            <param name="p_forceUpdate">
            If <c>true</c> forces the update even if the Tweener/Sequence is complete or paused,
            but ignores onUpdate, and sends onComplete and onStepComplete calls only if the Tweener/Sequence wasn't complete before this call.
            </param>
            <param name="p_isStartupIteration">
            If <c>true</c> means the update is due to a startup iteration (managed by Sequence Startup),
            and all callbacks will be ignored.
            </param>
            <param name="p_ignoreCallbacks">
            If <c>true</c> doesn't call any callback method.
            </param>
            <returns>
            A value of <c>true</c> if the tween is not reversed and complete (or the tween target doesn't exist anymore), otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.SetIncremental(System.Int32)">
            <summary>
            Applies the correct Incremental Sequence loop value.
            Called by Sequences when they need to change the increment value of nested Sequences/Tweeners.
            </summary>
            <param name="p_diffIncr">
            The difference from the previous main Sequence loop increment.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.GoTo(System.Single,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Sends the Tweener/Sequence to the given time (taking also loops into account) and plays it.
            If the time is bigger than the total Tweener/Sequence duration, it goes to the end.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.Startup">
            <summary>
            Startup this tween
            (might or might not call OnStart, depending if the tween is in a Sequence or not).
            Can be executed only once per tween.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.OnStart">
            <summary>
            Manages on first start behaviour.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.OnUpdate">
            <summary>
            Manages on update behaviour.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.OnPluginUpdated(Holoville.HOTween.Plugins.Core.ABSTweenPlugin)">
            <summary>
            Manages on plugin results behaviour.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.OnPause">
            <summary>
            Manages on pause behaviour.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.OnPlay">
            <summary>
            Manages on resume behaviour (also called when the tween starts).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.OnRewinded">
            <summary>
            Manages on rewinded behaviour.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.OnStepComplete">
            <summary>
            Manages step on complete behaviour.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.OnComplete">
            <summary>
            Manages on complete behaviour.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.OnCompleteDispatch">
            <summary>
            Called by HOTween if this tween was placed inside its onCompletes list during this.OnComplete().
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.SetFullDuration">
            <summary>
            Sets the current <c>fullDuration</c>, based on the current <c>duration</c> and <c>loops</c> values.
            Remember to call this method each time you change the duration or loops of a tween.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.SetElapsed">
            <summary>
            Sets the current <c>elapsed</c> time, based on the current <c>fullElapsed</c> and <c>completedLoops</c> values.
            Remember to call this method each time you set fullElapsed (after changing the eventual loops count where needed).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.SetLoops">
            <summary>
            Sets <c>completedLoops</c> and <c>isLoopingBack</c>, based on the current <c>fullElapsed</c> value.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.ManageObjects(System.Boolean)">
            <summary>
            Manages the components/gameObjects that should be activated/deactivated.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponent.FillPluginsList(System.Collections.Generic.List{Holoville.HOTween.Plugins.Core.ABSTweenPlugin})">
            <summary>
            Fills the given list with all the plugins inside this sequence tween,
            while also looking for them recursively through inner sequences.
            Used by <c>HOTween.GetPlugins</c>.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Core.ABSTweenComponent.id">
            <summary>
            Eventual string ID of this Tweener/Sequence
            (more than one Tweener/Sequence can share the same ID, thus allowing for grouped operations).
            You can also use <c>intId</c> instead of <c>id</c> for faster operations.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Core.ABSTweenComponent.intId">
            <summary>
            Eventual int ID of this Tweener/Sequence
            (more than one Tweener/Sequence can share the same intId, thus allowing for grouped operations).
            The main difference from <c>id</c> is that while <c>id</c> is more legible, <c>intId</c> allows for faster operations.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Core.ABSTweenComponent.autoKillOnComplete">
            <summary>
            Default is <c>true</c>, which means this Tweener/Sequence will be killed and removed from HOTween as soon as it's completed.
            If <c>false</c> doesn't remove this Tweener/Sequence from HOTween when it is completed,
            and you will need to call an <c>HOTween.Kill</c> to remove this Tweener/Sequence.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Core.ABSTweenComponent.enabled">
            <summary>
            Default is <c>true</c>.
            If set to <c>false</c>, this Tweener/Sequence will not be updated,
            and any use of animation methods (Play/Pause/Rewind/etc) will be ignored
            (both if called directly via this instance, than if using HOTween.Play/Pause/Rewind/etc.).
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Core.ABSTweenComponent.timeScale">
            <summary>
            Time scale that will be used by this Tweener/Sequence.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Core.ABSTweenComponent.loops">
            <summary>
            Number of times the Tweener/Sequence will run (<c>-1</c> means the tween has infinite loops).
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Core.ABSTweenComponent.loopType">
            <summary>
            Type of loop for this Tweener/Sequence, in case <see cref="P:Holoville.HOTween.Core.ABSTweenComponent.loops"/> is greater than 1 (or infinite).
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Core.ABSTweenComponent.position">
            <summary>
            Gets and sets the time position of the Tweener/Sequence (loops are included when not infinite, delay is not).
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Core.ABSTweenComponent.duration">
            <summary>
            Duration of this Tweener/Sequence, loops and tween delay excluded.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Core.ABSTweenComponent.fullDuration">
            <summary>
            Full duration of this Tweener/Sequence, loops included (when not infinite) but tween delay excluded.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Core.ABSTweenComponent.elapsed">
            <summary>
            Elapsed time within the current loop (tween delay excluded).
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Core.ABSTweenComponent.fullElapsed">
            <summary>
            Full elapsed time including loops (but without considering tween delay).
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Core.ABSTweenComponent.updateType">
            <summary>
            The update type for this Tweener/Sequence.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Core.ABSTweenComponent.completedLoops">
            <summary>
            Number of loops that have been executed.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Core.ABSTweenComponent.destroyed">
            <summary>
            Returns a value of <c>true</c> if this Tweener/Sequence was destroyed
            (either because it was manually destroyed, because it was completed, or because its target was destroyed).
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Core.ABSTweenComponent.isEmpty">
            <summary>
            Returns a value of <c>true</c> if this Tweener/Sequence contains no tweens
            (if this is a tween, it means that no valid property to tween was set;
            if this is a sequence, it means no valid <see cref="T:Holoville.HOTween.Tweener"/> was yet added).
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Core.ABSTweenComponent.isReversed">
            <summary>
            Returns a value of <c>true</c> if this Tweener/Sequence is set to go backwards (because of a call to <c>Reverse</c>.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Core.ABSTweenComponent.isLoopingBack">
            <summary>
            Returns a value of <c>true</c> when this Tweener/Sequence is in the "going backwards" part of a Yoyo loop.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Core.ABSTweenComponent.isPaused">
            <summary>
            Returns a value of <c>true</c> if this Tweener/Sequence is paused.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Core.ABSTweenComponent.hasStarted">
            <summary>
            Returns a value of <c>true</c> after this Tweener/Sequence was started the first time,
            or if a call to <c>GoTo</c> or <c>GoToAndPlay</c> was executed.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Core.ABSTweenComponent.isComplete">
            <summary>
            Returns a value of <c>true</c> when this Tweener/Sequence is complete.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Core.ABSTweenComponent.isSequenced">
            <summary>
            Returns a value of <c>true</c> if this Tweener/Sequence was added to a Sequence.
            </summary>
        </member>
        <member name="T:Holoville.HOTween.Plugins.Core.PlugVector2">
            <summary>
            Default plugin for the tweening of Vector2 objects.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugVector2.#ctor(UnityEngine.Vector2)">
            <summary>
            Creates a new instance of this plugin using the main ease type.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Vector2"/> value to tween to.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugVector2.#ctor(UnityEngine.Vector2,Holoville.HOTween.EaseType)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Vector2"/> value to tween to.
            </param>
            <param name="p_easeType">
            The <see cref="T:Holoville.HOTween.EaseType"/> to use.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugVector2.#ctor(UnityEngine.Vector2,System.Boolean)">
            <summary>
            Creates a new instance of this plugin using the main ease type.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Vector2"/> value to tween to.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugVector2.#ctor(UnityEngine.Vector2,Holoville.HOTween.EaseType,System.Boolean)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Vector2"/> value to tween to.
            </param>
            <param name="p_easeType">
            The <see cref="T:Holoville.HOTween.EaseType"/> to use.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugVector2.#ctor(UnityEngine.Vector2,UnityEngine.AnimationCurve,System.Boolean)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Vector2"/> value to tween to.
            </param>
            <param name="p_easeAnimCurve">
            The <see cref="T:UnityEngine.AnimationCurve"/> to use for easing.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugVector2.GetSpeedBasedDuration(System.Single)">
            <summary>
            Returns the speed-based duration based on the given speed x second.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugVector2.SetChangeVal">
            <summary>
            Sets the typed changeVal based on the current startVal and endVal.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugVector2.SetIncremental(System.Int32)">
            <summary>
            Sets the correct values in case of Incremental loop type.
            </summary>
            <param name="p_diffIncr">
            The difference from the previous loop increment.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugVector2.DoUpdate(System.Single)">
            <summary>
            Updates the tween.
            </summary>
            <param name="p_totElapsed">
            The total elapsed time since startup.
            </param>
        </member>
        <member name="P:Holoville.HOTween.Plugins.Core.PlugVector2.startVal">
            <summary>
            Gets the untyped start value,
            sets both the untyped and the typed start value.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Plugins.Core.PlugVector2.endVal">
            <summary>
            Gets the untyped end value,
            sets both the untyped and the typed end value.
            </summary>
        </member>
        <member name="T:Holoville.HOTween.TweenType">
            <summary>
            Tween type
            </summary>
        </member>
        <member name="F:Holoville.HOTween.TweenType.To">
            <summary>
            Tween to value
            </summary>
        </member>
        <member name="F:Holoville.HOTween.TweenType.From">
            <summary>
            Tween from value
            </summary>
        </member>
        <member name="T:Holoville.HOTween.Sequence">
            <summary>
            Sequence component. Manager for sequence of Tweeners or other nested Sequences.
            <para>Author: Daniele Giardini (http://www.holoville.com)</para>
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Sequence.#ctor">
            <summary>
            Creates a new Sequence without any parameter.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Sequence.#ctor(Holoville.HOTween.SequenceParms)">
            <summary>
            Creates a new Sequence.
            </summary>
            <param name="p_parms">
            A <see cref="T:Holoville.HOTween.SequenceParms"/> representing the Sequence parameters.
            You can pass an existing one, or create a new one inline via method chaining,
            like <c>new SequenceParms().Id("sequence1").Loops(2).OnComplete(myFunction)</c>
            </param>
        </member>
        <member name="M:Holoville.HOTween.Sequence.AppendCallback(Holoville.HOTween.Core.TweenDelegate.TweenCallback)">
            <summary>Appends the given callback to this Sequence.</summary>
            <param name="p_callback">The function to call, who must return <c>void</c> and accept no parameters</param>
        </member>
        <member name="M:Holoville.HOTween.Sequence.AppendCallback(Holoville.HOTween.Core.TweenDelegate.TweenCallbackWParms,System.Object[])">
            <summary>Appends the given callback to this Sequence.</summary>
            <param name="p_callback">The function to call.
            It must return <c>void</c> and has to accept a single parameter of type <see cref="T:Holoville.HOTween.TweenEvent"/></param>
            <param name="p_callbackParms">Additional comma separated parameters to pass to the function</param>
        </member>
        <member name="M:Holoville.HOTween.Sequence.AppendCallback(UnityEngine.GameObject,System.String,System.Object,UnityEngine.SendMessageOptions)">
            <summary>Appends the given SendMessage callback to this Sequence.</summary>
            <param name="p_sendMessageTarget">GameObject to target for sendMessage</param>
            <param name="p_methodName">Name of the method to call</param>
            <param name="p_value">Eventual additional parameter</param>
            <param name="p_options">SendMessageOptions</param>
        </member>
        <member name="M:Holoville.HOTween.Sequence.InsertCallback(System.Single,Holoville.HOTween.Core.TweenDelegate.TweenCallback)">
            <summary>Inserts the given callback at the given time position.</summary>
            <param name="p_time">Time position where this callback will be placed
            (if longer than the whole sequence duration, the callback will never be called)</param>
            <param name="p_callback">The function to call, who must return <c>void</c> and accept no parameters</param>
        </member>
        <member name="M:Holoville.HOTween.Sequence.InsertCallback(System.Single,Holoville.HOTween.Core.TweenDelegate.TweenCallbackWParms,System.Object[])">
            <summary>Inserts the given callback at the given time position.</summary>
            <param name="p_time">Time position where this callback will be placed
            (if longer than the whole sequence duration, the callback will never be called)</param>
            <param name="p_callback">The function to call.
            It must return <c>void</c> and has to accept a single parameter of type <see cref="T:Holoville.HOTween.TweenEvent"/></param>
            <param name="p_callbackParms">Additional comma separated parameters to pass to the function</param>
        </member>
        <member name="M:Holoville.HOTween.Sequence.InsertCallback(System.Single,UnityEngine.GameObject,System.String,System.Object,UnityEngine.SendMessageOptions)">
            <summary>Inserts the given SendMessage callback at the given time position.</summary>
            <param name="p_time">Time position where this callback will be placed
            (if longer than the whole sequence duration, the callback will never be called)</param>
            <param name="p_sendMessageTarget">GameObject to target for sendMessage</param>
            <param name="p_methodName">Name of the method to call</param>
            <param name="p_value">Eventual additional parameter</param>
            <param name="p_options">SendMessageOptions</param>
        </member>
        <member name="M:Holoville.HOTween.Sequence.AppendInterval(System.Single)">
            <summary>
            Appends an interval to the right of the sequence,
            and returns the new Sequence total time length (loops excluded).
            </summary>
            <param name="p_duration">
            The duration of the interval.
            </param>
            <returns>
            The new Sequence total time length (loops excluded).
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Sequence.Append(Holoville.HOTween.IHOTweenComponent)">
            <summary>
            Adds the given <see cref="T:Holoville.HOTween.IHOTweenComponent"/> to the right of the sequence,
            and returns the new Sequence total time length (loops excluded).
            </summary>
            <param name="p_twMember">
            The <see cref="T:Holoville.HOTween.IHOTweenComponent"/> to append.
            </param>
            <returns>
            The new Sequence total time length (loops excluded).
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Sequence.PrependInterval(System.Single)">
            <summary>
            Prepends an interval to the left of the sequence,
            and returns the new Sequence total time length (loops excluded).
            </summary>
            <param name="p_duration">
            The duration of the interval.
            </param>
            <returns>
            The new Sequence total time length (loops excluded).
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Sequence.Prepend(Holoville.HOTween.IHOTweenComponent)">
            <summary>
            Adds the given <see cref="T:Holoville.HOTween.IHOTweenComponent"/> to the left of the sequence,
            moving all the existing sequence elements to the right,
            and returns the new Sequence total time length (loops excluded).
            </summary>
            <param name="p_twMember">
            The <see cref="T:Holoville.HOTween.IHOTweenComponent"/> to prepend.
            </param>
            <returns>
            The new Sequence total time length (loops excluded).
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Sequence.Insert(System.Single,Holoville.HOTween.IHOTweenComponent)">
            <summary>
            Inserts the given <see cref="T:Holoville.HOTween.IHOTweenComponent"/> at the given time,
            and returns the new Sequence total time length (loops excluded).
            </summary>
            <param name="p_time">
            The time at which the element must be placed.
            </param>
            <param name="p_twMember">
            The <see cref="T:Holoville.HOTween.IHOTweenComponent"/> to insert.
            </param>
            <returns>
            The new Sequence total time length (loops excluded).
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Sequence.Clear(Holoville.HOTween.SequenceParms)">
            <summary>
            Clears this sequence and resets its parameters, so it can be re-used.
            You can check if a Sequence is clean by querying its isEmpty property.
            </summary>
            <param name="p_parms">
            New parameters for the Sequence
            (if NULL, note that the dafult ones will be used, and not the previous ones)
            </param>
        </member>
        <member name="M:Holoville.HOTween.Sequence.Kill(System.Boolean)">
            <summary>
            Kills this Sequence and cleans it.
            </summary>
            <param name="p_autoRemoveFromHOTween">
            If <c>true</c> also calls <c>HOTween.Kill(this)</c> to remove it from HOTween.
            Set internally to <c>false</c> when I already know that HOTween is going to remove it.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Sequence.Rewind">
            <summary>
            Rewinds this Sequence (loops included), and pauses it.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Sequence.Restart">
            <summary>
            Restarts this Sequence from the beginning (loops included).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Sequence.IsTweening(System.Object)">
            <summary>
            Returns <c>true</c> if the given target is currently involved in a running tween of this Sequence (taking into account also nested tweens).
            Returns <c>false</c> both if the given target is not inside any of this Sequence tweens, than if the relative tween is paused.
            To simply check if the target is attached to a tween of this Sequence, use <c>IsLinkedTo( target )</c> instead.
            </summary>
            <param name="p_target">
            The target to check.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Sequence.IsTweening(System.String)">
            <summary>
            Returns <c>true</c> if the tween with the given string id is currently involved in a running tween or sequence.
            </summary>
            <param name="p_id">
            The id to check for.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Sequence.IsTweening(System.Int32)">
            <summary>
            Returns <c>true</c> if the tween with the given int id is currently involved in a running tween or sequence.
            </summary>
            <param name="p_id">
            The id to check for.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Sequence.IsLinkedTo(System.Object)">
            <summary>
            Returns <c>true</c> if the given target is linked to a tween of this Sequence (running or not, taking into account also nested tweens).
            </summary>
            <param name="p_target">
            The target to check.
            </param>
            <returns>
            A value of <c>true</c> if the given target is linked to a tween of this Sequence (running or not, taking into account also nested tweens).
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Sequence.GetTweenTargets">
            <summary>
            Returns a list of all the targets of this Sequence, or NULL if there are none.
            </summary>
            <returns>A list of all the targets of this Sequence, or NULL if there are none.</returns>
        </member>
        <member name="M:Holoville.HOTween.Sequence.GetTweenersByTarget(System.Object)">
            <summary>
            Returns a list of the eventual nested <see cref="T:Holoville.HOTween.Tweener"/> objects whose target is the given one,
            or an empty list if none was found.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Sequence.GetTweensById(System.String)">
            <summary>
            Returns a list of the eventual existing tweens with the given Id within this Sequence,
            nested tweens included (or an empty list if no tweens were found).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Sequence.GetTweensByIntId(System.Int32)">
            <summary>
            Returns a list of the eventual existing tweens with the given Id within this Sequence,
            nested tweens included (or an empty list if no tweens were found).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Sequence.Remove(Holoville.HOTween.Core.ABSTweenComponent)">
            <summary>
            Removes the given tween from this Sequence,
            and eventually kills the Sequence if all items have been removed.
            Used by <see cref="T:Holoville.HOTween.Core.OverwriteManager"/> to remove overwritten tweens.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Sequence.Complete(System.Boolean)">
            <summary>
            Completes this Sequence.
            Where a loop was involved, the Sequence completes at the position where it would actually be after the set number of loops.
            If there were infinite loops, this method will have no effect.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Sequence.Update(System.Single,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Updates the Sequence by the given elapsed time,
            and returns a value of <c>true</c> if the Sequence is complete.
            </summary>
            <param name="p_shortElapsed">
            The elapsed time since the last update.
            </param>
            <param name="p_forceUpdate">
            If <c>true</c> forces the update even if the Sequence is complete or paused,
            but ignores onUpdate, and sends onComplete and onStepComplete calls only if the Sequence wasn't complete before this call.
            </param>
            <param name="p_isStartupIteration">
            If <c>true</c> means the update is due to a startup iteration (managed by Sequence Startup),
            and all callbacks will be ignored.
            </param>
            <param name="p_ignoreCallbacks">
            If <c>true</c> doesn't call any callback method.
            </param>
            <returns>
            A value of <c>true</c> if the Sequence is not reversed and is complete (or all the Sequence tween targets don't exist anymore), otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Sequence.SetIncremental(System.Int32)">
            <summary>
            Sets the correct values in case of Incremental loop type.
            Also called by Tweener.ApplySequenceIncrement (used by Sequences during Incremental loops).
            </summary>
            <param name="p_diffIncr">
            The difference from the previous loop increment.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Sequence.GoTo(System.Single,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Sends the sequence to the given time (taking also loops into account) and eventually plays it.
            If the time is bigger than the total sequence duration, it goes to the end.
            </summary>
            <returns>
            Returns <c>true</c> if the sequence reached its end and was completed.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Sequence.TweenStartupIteration">
            <summary>
            Iterates through all the elements in order, to startup the plugins correctly.
            Called at OnStart and during Append/Insert/Prepend for speedBased tweens (to calculate correct duration).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Sequence.CheckSpeedBasedTween(Holoville.HOTween.IHOTweenComponent)">
            <summary>
            If the given <see cref="T:Holoville.HOTween.IHOTweenComponent"/> is a speedBased <see cref="T:Holoville.HOTween.Tweener"/>,
            forces it to calculate the correct duration.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Sequence.Startup">
            <summary>
            Startup this tween
            (might or might not call OnStart, depending if the tween is in a Sequence or not).
            Can be executed only once per tween.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Sequence.FillPluginsList(System.Collections.Generic.List{Holoville.HOTween.Plugins.Core.ABSTweenPlugin})">
            <summary>
            Fills the given list with all the plugins inside this sequence tween,
            while also looking for them recursively through inner sequences.
            Used by <c>HOTween.GetPlugins</c>.
            </summary>
        </member>
        <member name="T:Holoville.HOTween.Sequence.HOTSeqItem">
            <summary>
            Single sequencer item.
            Tween value can be null (in case this is simply used as a spacer).
            </summary>
        </member>
        <member name="T:Holoville.HOTween.Plugins.Core.PlugFloat">
            <summary>
            Default plugin for the tweening of number values.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugFloat.#ctor(System.Single)">
            <summary>
            Creates a new instance of this plugin using the main ease type.
            </summary>
            <param name="p_endVal">
            The <see cref="T:System.Single"/> value to tween to.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugFloat.#ctor(System.Single,Holoville.HOTween.EaseType)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:System.Single"/> value to tween to.
            </param>
            <param name="p_easeType">
            The <see cref="T:Holoville.HOTween.EaseType"/> to use.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugFloat.#ctor(System.Single,System.Boolean)">
            <summary>
            Creates a new instance of this plugin using the main ease type.
            </summary>
            <param name="p_endVal">
            The <see cref="T:System.Single"/> value to tween to.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugFloat.#ctor(System.Single,Holoville.HOTween.EaseType,System.Boolean)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:System.Single"/> value to tween to.
            </param>
            <param name="p_easeType">
            The <see cref="T:Holoville.HOTween.EaseType"/> to use.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugFloat.#ctor(System.Single,UnityEngine.AnimationCurve,System.Boolean)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:System.Single"/> value to tween to.
            </param>
            <param name="p_easeAnimCurve">
            The <see cref="T:UnityEngine.AnimationCurve"/> to use for easing.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugFloat.GetSpeedBasedDuration(System.Single)">
            <summary>
            Returns the speed-based duration based on the given speed x second.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugFloat.SetChangeVal">
            <summary>
            Sets the typed changeVal based on the current startVal and endVal.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugFloat.SetIncremental(System.Int32)">
            <summary>
            Sets the correct values in case of Incremental loop type.
            </summary>
            <param name="p_diffIncr">
            The difference from the previous loop increment.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugFloat.DoUpdate(System.Single)">
            <summary>
            Updates the tween.
            </summary>
            <param name="p_totElapsed">
            The total elapsed time since startup.
            </param>
        </member>
        <member name="P:Holoville.HOTween.Plugins.Core.PlugFloat.startVal">
            <summary>
            Gets the untyped start value,
            sets both the untyped and the typed start value.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Plugins.Core.PlugFloat.endVal">
            <summary>
            Gets the untyped end value,
            sets both the untyped and the typed end value.
            </summary>
        </member>
        <member name="T:Holoville.HOTween.EaseType">
            <summary>
            Enumeration of ease types.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.EaseType.Linear">
            <summary>
            Linear.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.EaseType.EaseInSine">
            <summary>
            Ease in sine.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.EaseType.EaseOutSine">
            <summary>
            Ease out sine.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.EaseType.EaseInOutSine">
            <summary>
            Ease in out sine.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.EaseType.EaseInQuad">
            <summary>
            Ease in quad.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.EaseType.EaseOutQuad">
            <summary>
            Ease out quad.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.EaseType.EaseInOutQuad">
            <summary>
            Ease in out quad.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.EaseType.EaseInCubic">
            <summary>
            Ease in cubic.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.EaseType.EaseOutCubic">
            <summary>
            Ease out cubic.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.EaseType.EaseInOutCubic">
            <summary>
            Ease in out cubic.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.EaseType.EaseInQuart">
            <summary>
            Ease in quart.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.EaseType.EaseOutQuart">
            <summary>
            Ease out quart.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.EaseType.EaseInOutQuart">
            <summary>
            Ease in out quart.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.EaseType.EaseInQuint">
            <summary>
            Ease in quint.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.EaseType.EaseOutQuint">
            <summary>
            Ease out quint.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.EaseType.EaseInOutQuint">
            <summary>
            Ease in out quint.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.EaseType.EaseInExpo">
            <summary>
            Ease in expo.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.EaseType.EaseOutExpo">
            <summary>
            Ease out expo.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.EaseType.EaseInOutExpo">
            <summary>
            Ease in out expo.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.EaseType.EaseInCirc">
            <summary>
            Ease in circ.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.EaseType.EaseOutCirc">
            <summary>
            Ease out circ.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.EaseType.EaseInOutCirc">
            <summary>
            Ease in out circ.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.EaseType.EaseInElastic">
            <summary>
            Ease in elastic.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.EaseType.EaseOutElastic">
            <summary>
            Ease out elastic.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.EaseType.EaseInOutElastic">
            <summary>
            Ease in out elastic.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.EaseType.EaseInBack">
            <summary>
            Ease in back.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.EaseType.EaseOutBack">
            <summary>
            Ease out back.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.EaseType.EaseInOutBack">
            <summary>
            Ease in out back.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.EaseType.EaseInBounce">
            <summary>
            Ease in bounce.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.EaseType.EaseOutBounce">
            <summary>
            Ease out bounce.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.EaseType.EaseInOutBounce">
            <summary>
            Ease in out bounce.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.EaseType.AnimationCurve">
            <summary>
            Don't assign this! It's assigned internally when setting the ease to an AnimationCurve
            </summary>
        </member>
        <member name="F:Holoville.HOTween.EaseType.EaseInStrong">
            <summary>
            Ease in strong.
            OBSOLETE: use EaseInQuint instead.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.EaseType.EaseOutStrong">
            <summary>
            OBSOLETE: use EaseOutQuint instead.
            Ease out strong.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.EaseType.EaseInOutStrong">
            <summary>
            OBSOLETE: use EaseInOutQuint instead.
            Ease in out strong.
            </summary>
        </member>
        <member name="T:Holoville.HOTween.Core.EaseInfo">
            <summary>
            Enumeration of ease types.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.EaseInfo.ease">
            <summary>
            Ease function.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.EaseInfo.inverseEase">
            <summary>
            Inverse ease function.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.EaseInfo.#ctor(Holoville.HOTween.Core.TweenDelegate.EaseFunc,Holoville.HOTween.Core.TweenDelegate.EaseFunc)">
            <summary>
            Creates a new instance.
            </summary>
            <param name="p_ease">
            The ease function.
            </param>
            <param name="p_inverseEase">
            Inverse ease function.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Core.EaseInfo.GetEaseInfo(Holoville.HOTween.EaseType)">
            <summary>
            Returns an <see cref="T:Holoville.HOTween.Core.EaseInfo"/> instance based on the given <see cref="T:Holoville.HOTween.EaseType"/>.
            </summary>
            <param name="p_easeType">
            An <see cref="T:Holoville.HOTween.EaseType"/>.
            </param>
        </member>
        <member name="T:Holoville.HOTween.Plugins.PlugVector3Z">
            <summary>
            Plugin for the tweening of only the Z value of Vector3 objects.
            </summary>
        </member>
        <member name="T:Holoville.HOTween.Plugins.PlugVector3X">
            <summary>
            Plugin for the tweening of only the X value of Vector3 objects.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Plugins.PlugVector3X.typedStartVal">
            <summary>
            Start val.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Plugins.PlugVector3X.typedEndVal">
            <summary>
            End val.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Plugins.PlugVector3X.changeVal">
            <summary>
            Change val.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3X.#ctor(System.Single)">
            <summary>
            Creates a new instance of this plugin using the main ease type.
            </summary>
            <param name="p_endVal">
            The value to tween to.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3X.#ctor(System.Single,Holoville.HOTween.EaseType)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Vector3"/> value to tween to.
            </param>
            <param name="p_easeType">
            The <see cref="T:Holoville.HOTween.EaseType"/> to use.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3X.#ctor(System.Single,System.Boolean)">
            <summary>
            Creates a new instance of this plugin using the main ease type.
            </summary>
            <param name="p_endVal">
            The value to tween to.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3X.#ctor(System.Single,Holoville.HOTween.EaseType,System.Boolean)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The value to tween to.
            </param>
            <param name="p_easeType">
            The <see cref="T:Holoville.HOTween.EaseType"/> to use.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3X.#ctor(System.Single,UnityEngine.AnimationCurve,System.Boolean)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:System.Single"/> value to tween to.
            </param>
            <param name="p_easeAnimCurve">
            The <see cref="T:UnityEngine.AnimationCurve"/> to use for easing.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3X.GetSpeedBasedDuration(System.Single)">
            <summary>
            Returns the speed-based duration based on the given speed x second.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3X.Rewind">
            <summary>
            Rewinds the tween.
            Should be overriden by tweens that control only part of the property (like HOTPluginVector3X).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3X.Complete">
            <summary>
            Completes the tween.
            Should be overriden by tweens that control only part of the property (like HOTPluginVector3X).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3X.SetChangeVal">
            <summary>
            Sets the typed changeVal based on the current startVal and endVal.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3X.SetIncremental(System.Int32)">
            <summary>
            Sets the correct values in case of Incremental loop type.
            </summary>
            <param name="p_diffIncr">
            The difference from the previous loop increment.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3X.DoUpdate(System.Single)">
            <summary>
            Updates the tween.
            </summary>
            <param name="p_totElapsed">
            The total elapsed time since startup.
            </param>
        </member>
        <member name="P:Holoville.HOTween.Plugins.PlugVector3X.startVal">
            <summary>
            Gets the untyped start value,
            sets both the untyped and the typed start value.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Plugins.PlugVector3X.endVal">
            <summary>
            Gets the untyped end value,
            sets both the untyped and the typed end value.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3Z.#ctor(System.Single)">
            <summary>
            Creates a new instance of this plugin using the main ease type.
            </summary>
            <param name="p_endVal">
            The value to tween to.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3Z.#ctor(System.Single,Holoville.HOTween.EaseType)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Vector3"/> value to tween to.
            </param>
            <param name="p_easeType">
            The <see cref="T:Holoville.HOTween.EaseType"/> to use.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3Z.#ctor(System.Single,System.Boolean)">
            <summary>
            Creates a new instance of this plugin using the main ease type.
            </summary>
            <param name="p_endVal">
            The value to tween to.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3Z.#ctor(System.Single,Holoville.HOTween.EaseType,System.Boolean)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The value to tween to.
            </param>
            <param name="p_easeType">
            The <see cref="T:Holoville.HOTween.EaseType"/> to use.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3Z.#ctor(System.Single,UnityEngine.AnimationCurve,System.Boolean)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Vector3"/> value to tween to.
            </param>
            <param name="p_easeAnimCurve">
            The <see cref="T:UnityEngine.AnimationCurve"/> to use for easing.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3Z.Rewind">
            <summary>
            Rewinds the tween.
            Should be overriden by tweens that control only part of the property (like HOTPluginVector3X).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3Z.Complete">
            <summary>
            Completes the tween.
            Should be overriden by tweens that control only part of the property (like HOTPluginVector3X).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3Z.DoUpdate(System.Single)">
            <summary>
            Updates the tween.
            </summary>
            <param name="p_totElapsed">
            The total elapsed time since startup.
            </param>
        </member>
        <member name="P:Holoville.HOTween.Plugins.PlugVector3Z.startVal">
            <summary>
            Gets the untyped start value,
            sets both the untyped and the typed start value.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Plugins.PlugVector3Z.endVal">
            <summary>
            Gets the untyped end value,
            sets both the untyped and the typed end value.
            </summary>
        </member>
        <member name="T:Holoville.HOTween.Core.Utils">
            <summary>
            Various utils used by HOTween.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.Utils.MatrixToQuaternion(UnityEngine.Matrix4x4)">
            <summary>
            Converts the given Matrix4x4 to a Quaternion and returns it.
            </summary>
            <param name="m">
            The matrix to convert.
            </param>
            <returns>
            The resulting <see cref="T:UnityEngine.Quaternion"/>.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Core.Utils.SimpleClassName(System.Type)">
            <summary>
            Returns a string representing the given Type without the packages
            (like Single instead than System.Single).
            </summary>
        </member>
        <member name="T:Holoville.HOTween.Core.TweenInfo">
            <summary>
            Used by <see cref="M:Holoville.HOTween.HOTween.GetTweenInfos"/> and HOTweenInspector,
            to store info about tweens that can be displayed.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.TweenInfo.tween">
            <summary>
            Tween.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.TweenInfo.isSequence">
            <summary>
            Is sequence.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.TweenInfo.targets">
            <summary>
            Targets.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.TweenInfo.#ctor(Holoville.HOTween.Core.ABSTweenComponent)">
            <summary>
            Creates a new TweenInfo object.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Core.TweenInfo.isPaused">
            <summary>
            Is paused.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Core.TweenInfo.isComplete">
            <summary>
            Is complete.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Core.TweenInfo.isEnabled">
            <summary>
            Is enabled.
            </summary>
        </member>
        <member name="T:FastDynamicMemberAccessor.MemberAccessorException">
            <summary>
            PropertyAccessorException class.
            </summary>
        </member>
        <member name="T:FastDynamicMemberAccessor.IMemberAccessor">
            <summary>
            The IMemberAccessor interface defines a member
            accessor.
            </summary>
        </member>
        <member name="M:FastDynamicMemberAccessor.IMemberAccessor.Get(System.Object)">
            <summary>
            Gets the value stored in the member for
            the specified target.
            </summary>
            <param name="target">Object to retrieve
            the member from.</param>
            <returns>Member value.</returns>
        </member>
        <member name="M:FastDynamicMemberAccessor.IMemberAccessor.Set(System.Object,System.Object)">
            <summary>
            Sets the value for the member of
            the specified target.
            </summary>
            <param name="target">Object to set the
            member on.</param>
            <param name="value">Member value.</param>
        </member>
        <member name="M:FastDynamicMemberAccessor.MemberAccessor.#ctor(System.Reflection.MemberInfo)">
            <summary>
            Creates a new member accessor.
            </summary>
            <param name="member">Member</param>
        </member>
        <member name="M:FastDynamicMemberAccessor.MemberAccessor.Make(System.Reflection.PropertyInfo,System.Reflection.FieldInfo)">
            <summary>
            Added by Daniele Giardini for HOTween,
            because if a Make is called we already know that a PropertyInfo or FieldInfo exist,
            and we can directly pass them as parameters.
            </summary>
        </member>
        <member name="M:FastDynamicMemberAccessor.MemberAccessor.#cctor">
             <summary>
             Thanks to Ben Ratzlaff for this snippet of code
             http://www.codeproject.com/cs/miscctrl/CustomPropGrid.asp
            
             "Initialize a private hashtable with type-opCode pairs
             so i dont have to write a long if/else statement when outputting msil"
             </summary>
        </member>
        <member name="M:FastDynamicMemberAccessor.MemberAccessor.Get(System.Object)">
            <summary>
            Gets the member value from the specified target.
            </summary>
            <param name="target">Target object.</param>
            <returns>Member value.</returns>
        </member>
        <member name="M:FastDynamicMemberAccessor.MemberAccessor.Set(System.Object,System.Object)">
            <summary>
            Sets the member for the specified target.
            </summary>
            <param name="target">Target object.</param>
            <param name="value">Value to set.</param>
        </member>
        <member name="M:FastDynamicMemberAccessor.MemberAccessor.EnsureInit">
            <summary>
            This method generates creates a new assembly containing
            the Type that will provide dynamic access.
            </summary>
        </member>
        <member name="M:FastDynamicMemberAccessor.MemberAccessor.EmitAssembly">
            <summary>
            Create an assembly that will provide the get and set methods.
            </summary>
        </member>
        <member name="P:FastDynamicMemberAccessor.MemberAccessor.CanRead">
            <summary>
            Whether or not the Member supports read access.
            </summary>
        </member>
        <member name="P:FastDynamicMemberAccessor.MemberAccessor.CanWrite">
            <summary>
            Whether or not the Member supports write access.
            </summary>
        </member>
        <member name="P:FastDynamicMemberAccessor.MemberAccessor.TargetType">
            <summary>
            The Type of object this member accessor was
            created for.
            </summary>
        </member>
        <member name="P:FastDynamicMemberAccessor.MemberAccessor.MemberType">
            <summary>
            The Type of the Member being accessed.
            </summary>
        </member>
        <member name="T:Holoville.HOTween.Core.Easing.EaseCurve">
            <summary>
            Used to interpret AnimationCurves as eases.
            </summary>
        </member>
        <member name="T:Holoville.HOTween.Plugins.PlugVector3Y">
            <summary>
            Plugin for the tweening of only the Y value of Vector3 objects.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3Y.#ctor(System.Single)">
            <summary>
            Creates a new instance of this plugin using the main ease type.
            </summary>
            <param name="p_endVal">
            The value to tween to.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3Y.#ctor(System.Single,Holoville.HOTween.EaseType)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Vector3"/> value to tween to.
            </param>
            <param name="p_easeType">
            The <see cref="T:Holoville.HOTween.EaseType"/> to use.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3Y.#ctor(System.Single,System.Boolean)">
            <summary>
            Creates a new instance of this plugin using the main ease type.
            </summary>
            <param name="p_endVal">
            The value to tween to.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3Y.#ctor(System.Single,Holoville.HOTween.EaseType,System.Boolean)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The value to tween to.
            </param>
            <param name="p_easeType">
            The <see cref="T:Holoville.HOTween.EaseType"/> to use.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3Y.#ctor(System.Single,UnityEngine.AnimationCurve,System.Boolean)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:System.Single"/> value to tween to.
            </param>
            <param name="p_easeAnimCurve">
            The <see cref="T:UnityEngine.AnimationCurve"/> to use for easing.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3Y.Rewind">
            <summary>
            Rewinds the tween.
            Should be overriden by tweens that control only part of the property (like HOTPluginVector3X).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3Y.Complete">
            <summary>
            Completes the tween.
            Should be overriden by tweens that control only part of the property (like HOTPluginVector3X).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3Y.DoUpdate(System.Single)">
            <summary>
            Updates the tween.
            </summary>
            <param name="p_totElapsed">
            The total elapsed time since startup.
            </param>
        </member>
        <member name="P:Holoville.HOTween.Plugins.PlugVector3Y.startVal">
            <summary>
            Gets the untyped start value,
            sets both the untyped and the typed start value.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Plugins.PlugVector3Y.endVal">
            <summary>
            Gets the untyped end value,
            sets both the untyped and the typed end value.
            </summary>
        </member>
        <member name="T:Holoville.HOTween.Core.Easing.Quart">
            <summary>
            This class contains a C# port of the easing equations created by Robert Penner (http://robertpenner.com/easing).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.Easing.Quart.EaseIn(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Easing equation function for a quartic (t^4) easing in: accelerating from zero velocity.
            </summary>
            <param name="time">
            Current time (in frames or seconds).
            </param>
            <param name="startValue">
            Starting value.
            </param>
            <param name="changeValue">
            Change needed in value.
            </param>
            <param name="duration">
            Expected easing duration (in frames or seconds).
            </param>
            <param name="unusedOvershootOrAmplitude">Unused: here to keep same delegate for all ease types.</param>
            <param name="unusedPeriod">Unused: here to keep same delegate for all ease types.</param>
            <returns>
            The eased value.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Core.Easing.Quart.EaseOut(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Easing equation function for a quartic (t^4) easing out: decelerating from zero velocity.
            </summary>
            <param name="time">
            Current time (in frames or seconds).
            </param>
            <param name="startValue">
            Starting value.
            </param>
            <param name="changeValue">
            Change needed in value.
            </param>
            <param name="duration">
            Expected easing duration (in frames or seconds).
            </param>
            <param name="unusedOvershootOrAmplitude">Unused: here to keep same delegate for all ease types.</param>
            <param name="unusedPeriod">Unused: here to keep same delegate for all ease types.</param>
            <returns>
            The eased value.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Core.Easing.Quart.EaseInOut(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Easing equation function for a quartic (t^4) easing in/out: acceleration until halfway, then deceleration.
            </summary>
            <param name="time">
            Current time (in frames or seconds).
            </param>
            <param name="startValue">
            Starting value.
            </param>
            <param name="changeValue">
            Change needed in value.
            </param>
            <param name="duration">
            Expected easing duration (in frames or seconds).
            </param>
            <param name="unusedOvershootOrAmplitude">Unused: here to keep same delegate for all ease types.</param>
            <param name="unusedPeriod">Unused: here to keep same delegate for all ease types.</param>
            <returns>
            The eased value.
            </returns>
        </member>
        <member name="T:Holoville.HOTween.Core.Easing.Bounce">
            <summary>
            This class contains a C# port of the easing equations created by Robert Penner (http://robertpenner.com/easing).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.Easing.Bounce.EaseIn(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Easing equation function for a bounce (exponentially decaying parabolic bounce) easing in: accelerating from zero velocity.
            </summary>
            <param name="time">
            Current time (in frames or seconds).
            </param>
            <param name="startValue">
            Starting value.
            </param>
            <param name="changeValue">
            Change needed in value.
            </param>
            <param name="duration">
            Expected easing duration (in frames or seconds).
            </param>
            <param name="unusedOvershootOrAmplitude">Unused: here to keep same delegate for all ease types.</param>
            <param name="unusedPeriod">Unused: here to keep same delegate for all ease types.</param>
            <returns>
            The eased value.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Core.Easing.Bounce.EaseOut(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Easing equation function for a bounce (exponentially decaying parabolic bounce) easing out: decelerating from zero velocity.
            </summary>
            <param name="time">
            Current time (in frames or seconds).
            </param>
            <param name="startValue">
            Starting value.
            </param>
            <param name="changeValue">
            Change needed in value.
            </param>
            <param name="duration">
            Expected easing duration (in frames or seconds).
            </param>
            <param name="unusedOvershootOrAmplitude">Unused: here to keep same delegate for all ease types.</param>
            <param name="unusedPeriod">Unused: here to keep same delegate for all ease types.</param>
            <returns>
            The eased value.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Core.Easing.Bounce.EaseInOut(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Easing equation function for a bounce (exponentially decaying parabolic bounce) easing in/out: acceleration until halfway, then deceleration.
            </summary>
            <param name="time">
            Current time (in frames or seconds).
            </param>
            <param name="startValue">
            Starting value.
            </param>
            <param name="changeValue">
            Change needed in value.
            </param>
            <param name="duration">
            Expected easing duration (in frames or seconds).
            </param>
            <param name="unusedOvershootOrAmplitude">Unused: here to keep same delegate for all ease types.</param>
            <param name="unusedPeriod">Unused: here to keep same delegate for all ease types.</param>
            <returns>
            The eased value.
            </returns>
        </member>
        <member name="T:Holoville.HOTween.Plugins.Core.PlugColor">
            <summary>
            Default plugin for the tweening of Color objects.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugColor.#ctor(UnityEngine.Color)">
            <summary>
            Creates a new instance of this plugin using the main ease type.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Color"/> value to tween to.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugColor.#ctor(UnityEngine.Color,Holoville.HOTween.EaseType)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Color"/> value to tween to.
            </param>
            <param name="p_easeType">
            The <see cref="T:Holoville.HOTween.EaseType"/> to use.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugColor.#ctor(UnityEngine.Color,System.Boolean)">
            <summary>
            Creates a new instance of this plugin using the main ease type.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Color"/> value to tween to.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugColor.#ctor(UnityEngine.Color,Holoville.HOTween.EaseType,System.Boolean)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Color"/> value to tween to.
            </param>
            <param name="p_easeType">
            The <see cref="T:Holoville.HOTween.EaseType"/> to use.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugColor.#ctor(UnityEngine.Color,UnityEngine.AnimationCurve,System.Boolean)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Color"/> value to tween to.
            </param>
            <param name="p_easeAnimCurve">
            The <see cref="T:UnityEngine.AnimationCurve"/> to use for easing.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugColor.GetSpeedBasedDuration(System.Single)">
            <summary>
            Returns the speed-based duration based on the given speed x second.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugColor.SetChangeVal">
            <summary>
            Sets the typed changeVal based on the current startVal and endVal.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugColor.SetIncremental(System.Int32)">
            <summary>
            Sets the correct values in case of Incremental loop type.
            </summary>
            <param name="p_diffIncr">
            The difference from the previous loop increment.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugColor.DoUpdate(System.Single)">
            <summary>
            Updates the tween.
            </summary>
            <param name="p_totElapsed">
            The total elapsed time since startup.
            </param>
        </member>
        <member name="P:Holoville.HOTween.Plugins.Core.PlugColor.startVal">
            <summary>
            Gets the untyped start value,
            sets both the untyped and the typed start value.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Plugins.Core.PlugColor.endVal">
            <summary>
            Gets the untyped end value,
            sets both the untyped and the typed end value.
            </summary>
        </member>
        <member name="T:Holoville.HOTween.Core.Easing.Elastic">
            <summary>
            This class contains a C# port of the easing equations created by Robert Penner (http://robertpenner.com/easing).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.Easing.Elastic.EaseIn(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Easing equation function for an elastic (exponentially decaying sine wave) easing in: accelerating from zero velocity.
            </summary>
            <param name="time">
            Current time (in frames or seconds).
            </param>
            <param name="startValue">
            Starting value.
            </param>
            <param name="changeValue">
            Change needed in value.
            </param>
            <param name="duration">
            Expected easing duration (in frames or seconds).
            </param>
            <returns>
            The eased value.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Core.Easing.Elastic.EaseIn(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Easing equation function for an elastic (exponentially decaying sine wave) easing in: accelerating from zero velocity.
            </summary>
            <param name="time">
            Current time (in frames or seconds).
            </param>
            <param name="startValue">
            Starting value.
            </param>
            <param name="changeValue">
            Change needed in value.
            </param>
            <param name="duration">
            Expected easing duration (in frames or seconds).
            </param>
            <param name="amplitude">
            Amplitude.
            </param>
            <param name="period">
            Period.
            </param>
            <returns>
            The eased value.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Core.Easing.Elastic.EaseOut(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Easing equation function for an elastic (exponentially decaying sine wave) easing out: decelerating from zero velocity.
            </summary>
            <param name="time">
            Current time (in frames or seconds).
            </param>
            <param name="startValue">
            Starting value.
            </param>
            <param name="changeValue">
            Change needed in value.
            </param>
            <param name="duration">
            Expected easing duration (in frames or seconds).
            </param>
            <returns>
            The eased value.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Core.Easing.Elastic.EaseOut(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Easing equation function for an elastic (exponentially decaying sine wave) easing out: decelerating from zero velocity.
            </summary>
            <param name="time">
            Current time (in frames or seconds).
            </param>
            <param name="startValue">
            Starting value.
            </param>
            <param name="changeValue">
            Change needed in value.
            </param>
            <param name="duration">
            Expected easing duration (in frames or seconds).
            </param>
            <param name="amplitude">
            Amplitude.
            </param>
            <param name="period">
            Period.
            </param>
            <returns>
            The eased value.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Core.Easing.Elastic.EaseInOut(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Easing equation function for an elastic (exponentially decaying sine wave) easing in/out: acceleration until halfway, then deceleration.
            </summary>
            <param name="time">
            Current time (in frames or seconds).
            </param>
            <param name="startValue">
            Starting value.
            </param>
            <param name="changeValue">
            Change needed in value.
            </param>
            <param name="duration">
            Expected easing duration (in frames or seconds).
            </param>
            <returns>
            The eased value.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Core.Easing.Elastic.EaseInOut(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Easing equation function for an elastic (exponentially decaying sine wave) easing in/out: acceleration until halfway, then deceleration.
            </summary>
            <param name="time">
            Current time (in frames or seconds).
            </param>
            <param name="startValue">
            Starting value.
            </param>
            <param name="changeValue">
            Change needed in value.
            </param>
            <param name="duration">
            Expected easing duration (in frames or seconds).
            </param>
            <param name="amplitude">
            Amplitude.
            </param>
            <param name="period">
            Period.
            </param>
            <returns>
            The eased value.
            </returns>
        </member>
        <member name="T:Holoville.HOTween.WarningLevel">
            <summary>
            Enumeration of the levels of warning that should be used to output messages in case of auto-resolved errors.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.WarningLevel.None">
            <summary>
            No messages will be logged.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.WarningLevel.Important">
            <summary>
            Only important messages will be logged
            (this will exclude warnings when a tween is overwritten).
            </summary>
        </member>
        <member name="F:Holoville.HOTween.WarningLevel.Verbose">
            <summary>
            All messages will be logged.
            </summary>
        </member>
        <member name="T:Holoville.HOTween.UpdateType">
            <summary>
            Enumeration of types of update that can be applied to a tween.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.UpdateType.Update">
            <summary>
            Normal update.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.UpdateType.LateUpdate">
            <summary>
            Late update.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.UpdateType.FixedUpdate">
            <summary>
            Fixed update (useful for rigidBodies).
            </summary>
        </member>
        <member name="F:Holoville.HOTween.UpdateType.TimeScaleIndependentUpdate">
            <summary>
            Timescale independent update.
            Contrary to the other types, this one is not subject to changes in Time.timeScale,
            thus it's the best way for tweens that happen inside GUI methods
            (so that even if the game is paused, the GUI will still have animated tweens).
            </summary>
        </member>
        <member name="T:Holoville.HOTween.TweenEvent">
            <summary>
            This object is passed as the only parameter of all HOTween's callbacks.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.TweenEvent.tween">
            <summary>
            A reference to the IHOTweenComponent that invoked the callback method.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.TweenEvent.parms">
            <summary>
            An array of eventual parameters that were passed to the callback.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.TweenEvent.plugin">
            <summary>
            The plugin (if any) that triggered the callback.
            </summary>
        </member>
        <member name="T:Holoville.HOTween.Plugins.PlugString">
            <summary>
            Plugin for the tweening of strings.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugString.#ctor(System.String)">
            <summary>
            Creates a new instance of this plugin using the main ease type,
            substituting any existing string with the given one over time.
            </summary>
            <param name="p_endVal">
            The <see cref="T:System.String"/> value to tween to.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugString.#ctor(System.String,Holoville.HOTween.EaseType)">
            <summary>
            Creates a new instance of this plugin,
            substituting any existing string with the given one over time.
            </summary>
            <param name="p_endVal">
            The <see cref="T:System.String"/> value to tween to.
            </param>
            <param name="p_easeType">
            The <see cref="T:Holoville.HOTween.EaseType"/> to use.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugString.#ctor(System.String,System.Boolean)">
            <summary>
            Creates a new instance of this plugin using the main ease type.
            </summary>
            <param name="p_endVal">
            The <see cref="T:System.String"/> value to tween to.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given value will be added to any existing string,
            if <c>false</c> the existing string will be completely overwritten.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugString.#ctor(System.String,Holoville.HOTween.EaseType,System.Boolean)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:System.String"/> value to tween to.
            </param>
            <param name="p_easeType">
            The <see cref="T:Holoville.HOTween.EaseType"/> to use.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given value will be added to any existing string,
            if <c>false</c> the existing string will be completely overwritten.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugString.#ctor(System.String,UnityEngine.AnimationCurve,System.Boolean)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:System.String"/> value to tween to.
            </param>
            <param name="p_easeAnimCurve">
            The <see cref="T:UnityEngine.AnimationCurve"/> to use for easing.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugString.GetSpeedBasedDuration(System.Single)">
            <summary>
            Returns the speed-based duration based on the given speed x second.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugString.SetChangeVal">
            <summary>
            Sets the typed changeVal based on the current startVal and endVal.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugString.SetIncremental(System.Int32)">
            <summary>
            Sets the correct values in case of Incremental loop type.
            </summary>
            <param name="p_diffIncr">
            The difference from the previous loop increment.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugString.DoUpdate(System.Single)">
            <summary>
            Updates the tween.
            </summary>
            <param name="p_totElapsed">
            The total elapsed time since startup.
            </param>
        </member>
        <member name="P:Holoville.HOTween.Plugins.PlugString.startVal">
            <summary>
            Gets the untyped start value,
            sets both the untyped and the typed start value.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Plugins.PlugString.endVal">
            <summary>
            Gets the untyped end value,
            sets both the untyped and the typed end value.
            </summary>
        </member>
        <member name="T:Holoville.HOTween.Core.TweenException">
            <summary>
            HOTweenException class.
            A new <c>HOTweenException</c> is thrown each time HOTween encounters an error.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.TweenException.#ctor(System.String)">
            <summary>
            Creates a new HOTweenException with the given message.
            </summary>
            <param name="p_message">
            The exception message.
            </param>
        </member>
        <member name="T:FastDynamicMemberAccessor.PropertyAccessor">
            <summary>
            The PropertyAccessor class provides fast dynamic access
            to a property of a specified target class.
            </summary>
        </member>
        <member name="M:FastDynamicMemberAccessor.PropertyAccessor.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Creates a new property accessor.
            </summary>
        </member>
        <member name="P:FastDynamicMemberAccessor.PropertyAccessor.MemberType">
            <summary>
            The Type of the Property being accessed.
            </summary>
        </member>
        <member name="P:FastDynamicMemberAccessor.PropertyAccessor.CanRead">
            <summary>
            Whether or not the Property supports read access.
            </summary>
        </member>
        <member name="P:FastDynamicMemberAccessor.PropertyAccessor.CanWrite">
            <summary>
            Whether or not the Property supports write access.
            </summary>
        </member>
        <member name="T:Holoville.HOTween.Tweener">
            <summary>
            Tween component, created by HOTween for each separate tween.
            <para>Author: Daniele Giardini (http://www.holoville.com)</para>
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Tweener.#ctor(System.Object,System.Single,Holoville.HOTween.TweenParms)">
            <summary>
            Called by HOTween each time a new tween is generated via <c>To</c> or similar methods.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Tweener.Kill(System.Boolean)">
            <summary>
            Kills this Tweener and cleans it.
            </summary>
            <param name="p_autoRemoveFromHOTween">
            If <c>true</c> also calls <c>HOTween.Kill(this)</c> to remove it from HOTween.
            Set internally to <c>false</c> when I already know that HOTween is going to remove it.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Tweener.Play(System.Boolean)">
            <summary>
            Resumes this Tweener.
            </summary>
            <param name="p_skipDelay">
            If <c>true</c> skips any initial delay.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Tweener.PlayForward(System.Boolean)">
            <summary>
            Resumes this Tweener and plays it forward.
            </summary>
            <param name="p_skipDelay">
            If <c>true</c> skips any initial delay.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Tweener.Rewind">
            <summary>
            Rewinds this Tweener (loops and tween delay included), and pauses it.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Tweener.Rewind(System.Boolean)">
            <summary>
            Rewinds this Tweener (loops included), and pauses it.
            </summary>
            <param name="p_skipDelay">
            If <c>true</c> skips any initial delay.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Tweener.Restart">
            <summary>
            Restarts this Tweener from the beginning (loops and tween delay included).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Tweener.Restart(System.Boolean)">
            <summary>
            Restarts this Tweener from the beginning (loops and tween delay included).
            </summary>
            <param name="p_skipDelay">
            If <c>true</c> skips any initial delay.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Tweener.Complete(System.Boolean)">
            <summary>
            Completes this Tweener.
            Where a loop was involved, the Tweener completes at the position where it would actually be after the set number of loops.
            If there were infinite loops, this method will have no effect.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Tweener.ResetAndChangeParms(Holoville.HOTween.TweenType,System.Single,Holoville.HOTween.TweenParms)">
            <summary>
            Completely resets the Tweener except its target,
            and applies a new <see cref="T:Holoville.HOTween.TweenType"/>, duration, and <see cref="T:Holoville.HOTween.TweenParms"/>.
            </summary>
            <param name="p_tweenType">New tween type (to/from)</param>
            <param name="p_newDuration">New duration</param>
            <param name="p_newParms">New parameters</param>
        </member>
        <member name="M:Holoville.HOTween.Tweener.Reset">
            <summary>
            Completely resets this Tweener, except its target
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Tweener.ApplyCallback(System.Boolean,Holoville.HOTween.CallbackType,Holoville.HOTween.Core.TweenDelegate.TweenCallback,Holoville.HOTween.Core.TweenDelegate.TweenCallbackWParms,System.Object[])">
            <summary>
            Assigns the given callback to this Tweener/Sequence,
            overwriting any existing callbacks of the same type.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Tweener.IsTweening(System.Object)">
            <summary>
            Returns <c>true</c> if the given target and this Tweener target are the same, and the Tweener is running.
            Returns <c>false</c> both if the given target is not the same as this Tweener's, than if this Tweener is paused.
            This method is here to uniform <see cref="T:Holoville.HOTween.Tweener"/> with <see cref="T:Holoville.HOTween.Sequence"/>.
            </summary>
            <param name="p_target">
            The target to check.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Tweener.IsTweening(System.String)">
            <summary>
            Returns <c>true</c> if the tween with the given string id is currently involved in a running tween or sequence.
            This method is here to uniform <see cref="T:Holoville.HOTween.Tweener"/> with <see cref="T:Holoville.HOTween.Sequence"/>.
            </summary>
            <param name="p_id">
            The id to check for.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Tweener.IsTweening(System.Int32)">
            <summary>
            Returns <c>true</c> if the tween with the given int id is currently involved in a running tween or sequence.
            This method is here to uniform <see cref="T:Holoville.HOTween.Tweener"/> with <see cref="T:Holoville.HOTween.Sequence"/>.
            </summary>
            <param name="p_id">
            The id to check for.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Tweener.IsLinkedTo(System.Object)">
            <summary>
            Returns <c>true</c> if the given target and this Tweener target are the same.
            This method is here to uniform <see cref="T:Holoville.HOTween.Tweener"/> with <see cref="T:Holoville.HOTween.Sequence"/>.
            </summary>
            <param name="p_target">
            The target to check.
            </param>
            <returns>
            A value of <c>true</c> if the given target and this Tweener target are the same.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Tweener.GetTweenTargets">
            <summary>
            Returns a list containing the target of this tween.
            </summary>
            <returns>A list containing the target of this tween.</returns>
        </member>
        <member name="M:Holoville.HOTween.Tweener.GetTweensById(System.String)">
            <summary>
            Returns a list containing this tween if the id is the same as the given one 
            (or and empty list if no tweens were found).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Tweener.GetTweensByIntId(System.Int32)">
            <summary>
            Returns a list containing this tween if the id is the same as the given one 
            (or and empty list if no tweens were found).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Tweener.GetPointOnPath(System.Single)">
            <summary>
            If this Tweener contains a <see cref="T:Holoville.HOTween.Plugins.PlugVector3Path"/> tween,
            returns a point on the path at the given percentage (0 to 1).
            Returns a <c>zero Vector</c> if there's no path tween associated with this tween.
            Note that, if the tween wasn't started, the OnStart callback will be called
            the first time you call this method, because the tween needs to be initialized.
            </summary>
            <param name="t">The percentage (0 to 1) at which to get the point</param>
        </member>
        <member name="M:Holoville.HOTween.Tweener.UsePartialPath(System.Int32,System.Int32)">
            <summary>
            If this Tweener contains a <see cref="T:Holoville.HOTween.Plugins.PlugVector3Path"/> tween,
            defines a portion of that path to use and re-adapt to (easing included),
            also re-adapting the duration to the correct partial,
            and rewinds/restarts the tween in its partial form (depending if it was paused or not).
            </summary>
            <param name="p_waypointId0">
            Id of the new starting waypoint on the current path.
            If you want to be sure you're targeting the first point in the path, pass -1
            (this is because the first waypoint of the path might be different from the first waypoint you passed,
            in case the target Transform was not already on the starting position, and thus needed to reach it).
            </param>
            <param name="p_waypointId1">Id of the new ending waypoint on the current path</param>
        </member>
        <member name="M:Holoville.HOTween.Tweener.UsePartialPath(System.Int32,System.Int32,System.Single)">
            <summary>
            If this Tweener contains a <see cref="T:Holoville.HOTween.Plugins.PlugVector3Path"/> tween,
            defines a portion of that path to use and re-adapt to (easing included),
            and rewinds/restarts the tween in its partial form (depending if it was paused or not).
            </summary>
            <param name="p_waypointId0">
            Id of the new starting waypoint on the current path.
            If you want to be sure you're targeting the first point in the path, pass -1
            (this is because the first waypoint of the path might be different from the first waypoint you passed,
            in case the target Transform was not already on the starting position, and thus needed to reach it).
            </param>
            <param name="p_waypointId1">Id of the new ending waypoint on the current path</param>
            <param name="p_newDuration">
            Tween duration of the partial path (if -1 auto-calculates the correct partial based on the original duration)
            </param>
        </member>
        <member name="M:Holoville.HOTween.Tweener.UsePartialPath(System.Int32,System.Int32,Holoville.HOTween.EaseType)">
            <summary>
            If this Tweener contains a <see cref="T:Holoville.HOTween.Plugins.PlugVector3Path"/> tween,
            defines a portion of that path to use and re-adapt to (easing included),
            and rewinds/restarts the tween in its partial form (depending if it was paused or not).
            </summary>
            <param name="p_waypointId0">
            Id of the new starting waypoint on the current path.
            If you want to be sure you're targeting the first point in the path, pass -1
            (this is because the first waypoint of the path might be different from the first waypoint you passed,
            in case the target Transform was not already on the starting position, and thus needed to reach it).
            </param>
            <param name="p_waypointId1">Id of the new ending waypoint on the current path</param>
            <param name="p_newEaseType">New EaseType to apply</param>
        </member>
        <member name="M:Holoville.HOTween.Tweener.UsePartialPath(System.Int32,System.Int32,System.Single,Holoville.HOTween.EaseType)">
            <summary>
            If this Tweener contains a <see cref="T:Holoville.HOTween.Plugins.PlugVector3Path"/> tween,
            defines a portion of that path to use and re-adapt to,
            and rewinds/restarts the tween in its partial form (depending if it was paused or not).
            </summary>
            <param name="p_waypointId0">
            Id of the new starting waypoint on the current path.
            If you want to be sure you're targeting the first point in the path, pass -1
            (this is because the first waypoint of the path might be different from the first waypoint you passed,
            in case the target Transform was not already on the starting position, and thus needed to reach it).
            </param>
            <param name="p_waypointId1">
            Id of the new ending waypoint on the current path 
            (-1 in case you want to target the ending waypoint of a closed path)
            </param>
            <param name="p_newDuration">
            Tween duration of the partial path (if -1 auto-calculates the correct partial based on the original duration)
            </param>
            <param name="p_newEaseType">New EaseType to apply</param>
        </member>
        <member name="M:Holoville.HOTween.Tweener.ResetPath">
            <summary>
            If this Tweener contains a <see cref="T:Holoville.HOTween.Plugins.PlugVector3Path"/> tween
            that had been partialized, returns it to its original size, easing, and duration,
            and rewinds/restarts the tween in its partial form (depending if it was paused or not).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Tweener.GetPlugVector3PathPlugin">
            <summary>
            If this Tweener contains a <see cref="T:Holoville.HOTween.Plugins.PlugVector3Path"/>, returns it.
            Otherwise returns null.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Holoville.HOTween.Tweener.Update(System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Updates the Tweener by the given elapsed time,
            and returns a value of <c>true</c> if the Tweener is complete.
            </summary>
            <param name="p_shortElapsed">
            The elapsed time since the last update.
            </param>
            <param name="p_forceUpdate">
            If <c>true</c> forces the update even if the Tweener is complete or paused,
            but ignores onUpdate, and sends onComplete and onStepComplete calls only if the Tweener wasn't complete before this call.
            </param>
            <param name="p_isStartupIteration">
            If <c>true</c> means the update is due to a startup iteration (managed by Sequence Startup or HOTween.From),
            and all callbacks will be ignored.
            </param>
            <param name="p_ignoreCallbacks">
            If <c>true</c> doesn't call any callback method.
            </param>
            <param name="p_ignoreDelay">
            If <c>true</c> uses p_shortElapsed fully ignoring the delay
            (useful when setting the initial FROM state).
            </param>
            <returns>
            A value of <c>true</c> if the Tweener is not reversed and is complete (or the tween target doesn't exist anymore), otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Tweener.SetIncremental(System.Int32)">
            <summary>
            Sets the correct values in case of Incremental loop type.
            Also called by Tweener.ApplySequenceIncrement (used by Sequences during Incremental loops).
            </summary>
            <param name="p_diffIncr">
            The difference from the previous loop increment.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Tweener.ForceSetSpeedBasedDuration">
            <summary>
            If speed based duration was not already set (meaning OnStart has not yet been called),
            calculates the duration and then resets the tween so that OnStart can be called from scratch.
            Used by Sequences when Appending/Prepending/Inserting speed based tweens.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Tweener.GoTo(System.Single,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Sends the tween to the given time (taking also loops into account) and eventually plays it.
            If the time is bigger than the total tween duration, it goes to the end.
            </summary>
            <returns>
            Returns <c>true</c> if the tween reached its end and was completed.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Tweener.Startup">
            <summary>
            Startup this tween
            (might or might not call OnStart, depending if the tween is in a Sequence or not).
            Can be executed only once per tween.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Tweener.Startup(System.Boolean)">
            <summary>
            Startup this tween
            (might or might not call OnStart, depending if the tween is in a Sequence or not).
            Can be executed only once per tween.
            </summary>
            <param name="p_force">If TRUE forces startup even if it had already been executed</param>
        </member>
        <member name="M:Holoville.HOTween.Tweener.OnStart">
            <summary>
            Manages on first start behaviour.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Tweener.FillPluginsList(System.Collections.Generic.List{Holoville.HOTween.Plugins.Core.ABSTweenPlugin})">
            <summary>
            Fills the given list with all the plugins inside this tween.
            Used by <c>HOTween.GetPlugins</c>.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Tweener.ConvertWaypointIdToPathId(Holoville.HOTween.Plugins.PlugVector3Path,System.Int32,System.Boolean)">
            <summary>
            Returns the correct id of the given waypoint, converted to path id.
            </summary>
            <param name="p_plugVector3Path">Vector3 path plugin to use</param>
            <param name="p_waypointId">Waypoint to convert</param>
            <param name="p_isStartingWp">If TRUE indicates that the given waypoint is the starting one,
            otherwise it's the ending one</param>
            <returns></returns>
        </member>
        <member name="P:Holoville.HOTween.Tweener.isFrom">
            <summary>
            Indicates whether this is a FROM or a TO tween.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Tweener.easeType">
            <summary>
            Ease type of this tweener
            (consider that the plugins you have set might have different ease types).
            Setting it will change the ease of all the plugins used by this tweener.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Tweener.easeAnimationCurve">
            <summary>
            Ease type of this tweener
            (consider that the plugins you have set might have different ease types).
            Setting it will change the ease of all the plugins used by this tweener.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Tweener.easeOvershootOrAmplitude">
            <summary>
            Eventual overshoot to use with Back easeTypes.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Tweener.easePeriod">
            <summary>
            Eventual period to use with Elastic easeTypes.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Tweener.target">
            <summary>
            Target of this tween.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Tweener.pixelPerfect">
            <summary>
            <c>true</c> if this tween is animated via integers values only.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Tweener.speedBased">
            <summary>
            <c>true</c> if this tween is animated by speed instead than by duration.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Tweener.delay">
            <summary>
            The delay that was set for this tween.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Tweener.elapsedDelay">
            <summary>
            The currently elapsed delay time.
            </summary>
        </member>
        <member name="T:Holoville.HOTween.Plugins.Core.PlugRect">
            <summary>
            Default plugin for the tweening of Rect objects.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugRect.#ctor(UnityEngine.Rect)">
            <summary>
            Creates a new instance of this plugin using the main ease type.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Rect"/> value to tween to.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugRect.#ctor(UnityEngine.Rect,Holoville.HOTween.EaseType)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Rect"/> value to tween to.
            </param>
            <param name="p_easeType">
            The <see cref="T:Holoville.HOTween.EaseType"/> to use.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugRect.#ctor(UnityEngine.Rect,System.Boolean)">
            <summary>
            Creates a new instance of this plugin using the main ease type.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Rect"/> value to tween to.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugRect.#ctor(UnityEngine.Rect,Holoville.HOTween.EaseType,System.Boolean)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Rect"/> value to tween to.
            </param>
            <param name="p_easeType">
            The <see cref="T:Holoville.HOTween.EaseType"/> to use.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugRect.#ctor(UnityEngine.Rect,UnityEngine.AnimationCurve,System.Boolean)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Rect"/> value to tween to.
            </param>
            <param name="p_easeAnimCurve">
            The <see cref="T:UnityEngine.AnimationCurve"/> to use for easing.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugRect.GetSpeedBasedDuration(System.Single)">
            <summary>
            Returns the speed-based duration based on the given speed x second.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugRect.SetChangeVal">
            <summary>
            Sets the typed changeVal based on the current startVal and endVal.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugRect.SetIncremental(System.Int32)">
            <summary>
            Sets the correct values in case of Incremental loop type.
            </summary>
            <param name="p_diffIncr">
            The difference from the previous loop increment.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugRect.DoUpdate(System.Single)">
            <summary>
            Updates the tween.
            </summary>
            <param name="p_totElapsed">
            The total elapsed time since startup.
            </param>
        </member>
        <member name="P:Holoville.HOTween.Plugins.Core.PlugRect.startVal">
            <summary>
            Gets the untyped start value,
            sets both the untyped and the typed start value.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Plugins.Core.PlugRect.endVal">
            <summary>
            Gets the untyped end value,
            sets both the untyped and the typed end value.
            </summary>
        </member>
        <member name="T:Holoville.HOTween.PathType">
            <summary>
            Type of path (used with <see cref="T:Holoville.HOTween.Plugins.PlugVector3Path"/>)
            </summary>
        </member>
        <member name="F:Holoville.HOTween.PathType.Linear">
            <summary>
            Straight path
            </summary>
        </member>
        <member name="F:Holoville.HOTween.PathType.Curved">
            <summary>
            Curved (Catmull-Rom) path
            </summary>
        </member>
        <member name="T:Holoville.HOTween.HOTween">
            <summary>
            Main tween manager.
            Controls all tween types (<see cref="T:Holoville.HOTween.Tweener"/> and <see cref="T:Holoville.HOTween.Sequence"/>),
            and is used to directly create Tweeners (to create Sequences, directly create a new <see cref="T:Holoville.HOTween.Sequence"/> instead).
            <para>Author: Daniele Giardini (http://www.holoville.com)</para>
            </summary>
        </member>
        <member name="F:Holoville.HOTween.HOTween.VERSION">
            <summary>
            HOTween version.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.HOTween.AUTHOR">
            <summary>
            HOTween author - me! :P
            </summary>
        </member>
        <member name="F:Holoville.HOTween.HOTween.defUpdateType">
            <summary>
            Default <see cref="T:Holoville.HOTween.UpdateType"/> that will be used by any new Tweener/Sequence that doesn't implement a specific ease
            (default = <c>EaseType.easeOutQuad</c>)
            </summary>
        </member>
        <member name="F:Holoville.HOTween.HOTween.defTimeScale">
            <summary>
            Default time scale that will be used by any new Tweener/Sequence that doesn't implement a specific timeScale
            (default = <c>1</c>).
            </summary>
        </member>
        <member name="F:Holoville.HOTween.HOTween.defEaseType">
            <summary>
            Default <see cref="T:Holoville.HOTween.EaseType"/> that will be used by any new Tweener/Sequence that doesn't implement a specific ease
            (default = <c>EaseType.easeOutQuad</c>).
            </summary>
        </member>
        <member name="F:Holoville.HOTween.HOTween.defEaseOvershootOrAmplitude">
            <summary>
            Default overshoot to use with Back easeTypes.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.HOTween.defEasePeriod">
            <summary>
            Default period to use with Elastic easeTypes.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.HOTween.defLoopType">
            <summary>
            Default <see cref="T:Holoville.HOTween.LoopType"/> that will be used by any Tweener/Sequence that doesn't implement a specific loopType
            (default = <c>LoopType.Restart</c>).
            </summary>
        </member>
        <member name="F:Holoville.HOTween.HOTween.showPathGizmos">
            <summary>
            If <c>true</c>, shows the eventual paths in use by <see cref="T:Holoville.HOTween.Plugins.PlugVector3Path"/>
            while playing inside Unity's Editor (and if the Editor's Gizmos button is on).
            </summary>
        </member>
        <member name="F:Holoville.HOTween.HOTween.warningLevel">
            <summary>
            Level of message output in case an error is encountered.
            Warnings are logged when HOTween encounters an error, and automatically resolves it without throwing any exception
            (like if you try to tween an unexisting property, in which case the tween simply won't be generated,
            and an eventual warning will appear in the output window).
            </summary>
        </member>
        <member name="F:Holoville.HOTween.HOTween.isIOS">
            <summary>
            <c>true</c> if the current player is iOS (iPhone).
            Used so simple Reflection instead than unsupported MemberAccessorCacher will be applyed
            (iOS doesn't support <c>Reflection.Emit</c>).
            </summary>
        </member>
        <member name="F:Holoville.HOTween.HOTween.isEditor">
            <summary>
            <c>true</c> if the current player is running in the Editor.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.HOTween.onCompletes">
            <summary>
            Filled by tweens that are completed, so that their onCompleteDispatch method can be called AFTER HOTween has eventually removed them
            (otherwise a Kill + To on the same target won't work).
            This field is emptied as soon as all onCompletes are called.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.HOTween.overwriteManager">
            <summary>
            Reference to overwrite manager (if in use).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Init">
            <summary>
            Initializes <see cref="T:Holoville.HOTween.HOTween"/> and sets it as non-permanent
            (meaning HOTween instance will be destroyed when all tweens are killed,
            and re-created when needed).
            Call this method once when your application starts up,
            to avoid auto-initialization when the first tween is started or created,
            and to set options.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Init(System.Boolean)">
            <summary>
            Initializes <see cref="T:Holoville.HOTween.HOTween"/>.
            Call this method once when your application starts up,
            to avoid auto-initialization when the first tween is started or created,
            and to set options.
            </summary>
            <param name="p_permanentInstance">
            If set to <c>true</c>, doesn't destroy HOTween manager when no tween is present,
            otherwise the manager is destroyed when all tweens have been killed,
            and re-created when needed.
            </param>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Init(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes <see cref="T:Holoville.HOTween.HOTween"/>.
            Call this method once when your application starts up,
            to avoid auto-initialization when the first tween is started or created,
            and to set options.
            </summary>
            <param name="p_permanentInstance">
            If set to <c>true</c>, doesn't destroy HOTween manager when no tween is present,
            otherwise the manager is destroyed when all tweens have been killed,
            and re-created when needed.
            </param>
            <param name="p_renameInstanceToCountTweens">
            If <c>true</c>, renames HOTween's instance to show
            the current number of running tweens (only while in the Editor).
            </param>
            <param name="p_allowOverwriteManager">
            If <c>true</c>, allows HOTween's instance to enable or disable
            the OverwriteManager to improve performance if it is never needed.
            </param>
        </member>
        <member name="M:Holoville.HOTween.HOTween.AddSequence(Holoville.HOTween.Sequence)">
            <summary>
            Called internally each time a new <see cref="T:Holoville.HOTween.Sequence"/> is created.
            Adds the given Sequence to the tween list.
            </summary>
            <param name="p_sequence">
            The <see cref="T:Holoville.HOTween.Sequence"/> to add.
            </param>
        </member>
        <member name="M:Holoville.HOTween.HOTween.To(System.Object,System.Single,System.String,System.Object)">
            <summary>
            Creates a new absolute tween with default values, and returns the <see cref="T:Holoville.HOTween.Tweener"/> representing it,
            or <c>null</c> if the tween was invalid (no valid property to tween was given).
            </summary>
            <param name="p_target">
            The tweening target (must be the object containing the properties or fields to tween).
            </param>
            <param name="p_duration">
            The duration in seconds of the tween.
            </param>
            <param name="p_propName">
            The name of the property or field to tween.
            </param>
            <param name="p_endVal">
            The end value the property should reach with the tween.
            </param>
            <returns>
            The newly created <see cref="T:Holoville.HOTween.Tweener"/>,
            or <c>null</c> if the parameters were invalid.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.To(System.Object,System.Single,System.String,System.Object,System.Boolean)">
            <summary>
            Creates a new tween with default values, and returns the <see cref="T:Holoville.HOTween.Tweener"/> representing it,
            or <c>null</c> if the tween was invalid (no valid property to tween was given).
            </summary>
            <param name="p_target">
            The tweening target (must be the object containing the properties or fields to tween).
            </param>
            <param name="p_duration">
            The duration in seconds of the tween.
            </param>
            <param name="p_propName">
            The name of the property or field to tween.
            </param>
            <param name="p_endVal">
            The end value the property should reach with the tween.
            </param>
            <param name="p_isRelative">
            If <c>true</c> treats the end value as relative (tween BY instead than tween TO), otherwise as absolute.
            </param>
            <returns>
            The newly created <see cref="T:Holoville.HOTween.Tweener"/>,
            or <c>null</c> if the parameters were invalid.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.To(System.Object,System.Single,Holoville.HOTween.TweenParms)">
            <summary>
            Creates a new tween and returns the <see cref="T:Holoville.HOTween.Tweener"/> representing it,
            or <c>null</c> if the tween was invalid (no valid property to tween was given).
            </summary>
            <param name="p_target">
            The tweening target (must be the object containing the properties or fields to tween).
            </param>
            <param name="p_duration">
            The duration in seconds of the tween.
            </param>
            <param name="p_parms">
            A <see cref="T:Holoville.HOTween.TweenParms"/> representing the tween parameters.
            You can pass an existing one, or create a new one inline via method chaining,
            like <c>new TweenParms().Prop("x",10).Loops(2).OnComplete(myFunction)</c>
            </param>
            <returns>
            The newly created <see cref="T:Holoville.HOTween.Tweener"/>,
            or <c>null</c> if the parameters were invalid.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.From(System.Object,System.Single,System.String,System.Object)">
            <summary>
            Creates a new absolute FROM tween with default values, and returns the <see cref="T:Holoville.HOTween.Tweener"/> representing it,
            or <c>null</c> if the tween was invalid (no valid property to tween was given).
            </summary>
            <param name="p_target">
            The tweening target (must be the object containing the properties or fields to tween).
            </param>
            <param name="p_duration">
            The duration in seconds of the tween.
            </param>
            <param name="p_propName">
            The name of the property or field to tween.
            </param>
            <param name="p_fromVal">
            The end value the property should reach with the tween.
            </param>
            <returns>
            The newly created <see cref="T:Holoville.HOTween.Tweener"/>,
            or <c>null</c> if the parameters were invalid.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.From(System.Object,System.Single,System.String,System.Object,System.Boolean)">
            <summary>
            Creates a new FROM tween with default values, and returns the <see cref="T:Holoville.HOTween.Tweener"/> representing it,
            or <c>null</c> if the tween was invalid (no valid property to tween was given).
            </summary>
            <param name="p_target">
            The tweening target (must be the object containing the properties or fields to tween).
            </param>
            <param name="p_duration">
            The duration in seconds of the tween.
            </param>
            <param name="p_propName">
            The name of the property or field to tween.
            </param>
            <param name="p_fromVal">
            The end value the property should reach with the tween.
            </param>
            <param name="p_isRelative">
            If <c>true</c> treats the end value as relative (tween BY instead than tween TO), otherwise as absolute.
            </param>
            <returns>
            The newly created <see cref="T:Holoville.HOTween.Tweener"/>,
            or <c>null</c> if the parameters were invalid.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.From(System.Object,System.Single,Holoville.HOTween.TweenParms)">
            <summary>
            Creates a new FROM tween and returns the <see cref="T:Holoville.HOTween.Tweener"/> representing it,
            or <c>null</c> if the tween was invalid (no valid property to tween was given).
            </summary>
            <param name="p_target">
            The tweening target (must be the object containing the properties or fields to tween).
            </param>
            <param name="p_duration">
            The duration in seconds of the tween.
            </param>
            <param name="p_parms">
            A <see cref="T:Holoville.HOTween.TweenParms"/> representing the tween parameters.
            You can pass an existing one, or create a new one inline via method chaining,
            like <c>new TweenParms().Prop("x",10).Loops(2).OnComplete(myFunction)</c>
            </param>
            <returns>
            The newly created <see cref="T:Holoville.HOTween.Tweener"/>,
            or <c>null</c> if the parameters were invalid.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Punch(System.Object,System.Single,System.String,System.Object,System.Single,System.Single)">
            <summary>
            Creates a new absolute PUNCH tween, and returns the <see cref="T:Holoville.HOTween.Tweener"/> representing it,
            or <c>null</c> if the tween was invalid (no valid property to tween was given).
            </summary>
            <param name="p_target">
            The tweening target (must be the object containing the properties or fields to tween).
            </param>
            <param name="p_duration">The duration in seconds of the tween.</param>
            <param name="p_propName">The name of the property or field to tween.</param>
            <param name="p_fromVal">The end value the property should reach with the tween.</param>
            <param name="p_punchAmplitude">Default: 0.5f - amplitude of the punch effect</param>
            <param name="p_punchPeriod">Default: 0.1f - oscillation period of punch effect</param>
            <returns>
            The newly created <see cref="T:Holoville.HOTween.Tweener"/>,
            or <c>null</c> if the parameters were invalid.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Punch(System.Object,System.Single,System.String,System.Object,System.Boolean,System.Single,System.Single)">
            <summary>
            Creates a new PUNCH tween, and returns the <see cref="T:Holoville.HOTween.Tweener"/> representing it,
            or <c>null</c> if the tween was invalid (no valid property to tween was given).
            </summary>
            <param name="p_target">
            The tweening target (must be the object containing the properties or fields to tween).
            </param>
            <param name="p_duration">The duration in seconds of the tween.</param>
            <param name="p_propName">The name of the property or field to tween.</param>
            <param name="p_fromVal">The end value the property should reach with the tween.</param>
            <param name="p_isRelative">
            If <c>true</c> treats the end value as relative (tween BY instead than tween TO), otherwise as absolute.
            </param>
            <param name="p_punchAmplitude">Default: 0.5f - amplitude of the punch effect</param>
            <param name="p_punchPeriod">Default: 0.1f - oscillation period of punch effect</param>
            <returns>
            The newly created <see cref="T:Holoville.HOTween.Tweener"/>,
            or <c>null</c> if the parameters were invalid.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Punch(System.Object,System.Single,Holoville.HOTween.TweenParms,System.Single,System.Single)">
            <summary>
            Creates a new PUNCH tween and returns the <see cref="T:Holoville.HOTween.Tweener"/> representing it,
            or <c>null</c> if the tween was invalid (no valid property to tween was given).
            Any ease type passed won't be considered, since punch uses its own one.
            </summary>
            <param name="p_target">
            The tweening target (must be the object containing the properties or fields to tween).
            </param>
            <param name="p_duration">The duration in seconds of the tween.</param>
            <param name="p_parms">
            A <see cref="T:Holoville.HOTween.TweenParms"/> representing the tween parameters.
            You can pass an existing one, or create a new one inline via method chaining,
            like <c>new TweenParms().Prop("x",10).Loops(2).OnComplete(myFunction)</c>
            </param>
            <param name="p_punchAmplitude">Default: 0.5f - amplitude of the punch effect</param>
            <param name="p_punchPeriod">Default: 0.1f - oscillation period of punch effect</param>
            <returns>
            The newly created <see cref="T:Holoville.HOTween.Tweener"/>,
            or <c>null</c> if the parameters were invalid.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Shake(System.Object,System.Single,System.String,System.Object,System.Single,System.Single)">
            <summary>
            Creates a new absolute SHAKE tween, and returns the <see cref="T:Holoville.HOTween.Tweener"/> representing it,
            or <c>null</c> if the tween was invalid (no valid property to tween was given).
            </summary>
            <param name="p_target">
            The tweening target (must be the object containing the properties or fields to tween).
            </param>
            <param name="p_duration">The duration in seconds of the tween.</param>
            <param name="p_propName">The name of the property or field to tween.</param>
            <param name="p_fromVal">The amount of shaking to apply.</param>
            <param name="p_shakeAmplitude">Default: 0.1f - amplitude of the shake effect</param>
            <param name="p_shakePeriod">Default: 0.12f - oscillation period of shake effect</param>
            <returns>
            The newly created <see cref="T:Holoville.HOTween.Tweener"/>,
            or <c>null</c> if the parameters were invalid.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Shake(System.Object,System.Single,System.String,System.Object,System.Boolean,System.Single,System.Single)">
            <summary>
            Creates a new SHAKE tween, and returns the <see cref="T:Holoville.HOTween.Tweener"/> representing it,
            or <c>null</c> if the tween was invalid (no valid property to tween was given).
            </summary>
            <param name="p_target">
            The tweening target (must be the object containing the properties or fields to tween).
            </param>
            <param name="p_duration">The duration in seconds of the tween.</param>
            <param name="p_propName">The name of the property or field to tween.</param>
            <param name="p_fromVal">The amount of shaking to apply.</param>
            <param name="p_isRelative">
            If <c>true</c> treats the end value as relative (tween BY instead than tween TO), otherwise as absolute.
            </param>
            <param name="p_shakeAmplitude">Default: 0.1f - amplitude of the shake effect</param>
            <param name="p_shakePeriod">Default: 0.12f - oscillation period of shake effect</param>
            <returns>
            The newly created <see cref="T:Holoville.HOTween.Tweener"/>,
            or <c>null</c> if the parameters were invalid.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Shake(System.Object,System.Single,Holoville.HOTween.TweenParms,System.Single,System.Single)">
            <summary>
            Creates a new SHAKE tween and returns the <see cref="T:Holoville.HOTween.Tweener"/> representing it,
            or <c>null</c> if the tween was invalid (no valid property to tween was given).
            Any ease type passed won't be considered, since shake uses its own one.
            </summary>
            <param name="p_target">
            The tweening target (must be the object containing the properties or fields to tween).
            </param>
            <param name="p_duration">The duration in seconds of the tween.</param>
            <param name="p_parms">
            A <see cref="T:Holoville.HOTween.TweenParms"/> representing the tween parameters.
            You can pass an existing one, or create a new one inline via method chaining,
            like <c>new TweenParms().Prop("x",10).Loops(2).OnComplete(myFunction)</c>
            </param>
            <param name="p_shakeAmplitude">Default: 0.1f - amplitude of the shake effect</param>
            <param name="p_shakePeriod">Default: 0.12f - oscillation period of shake effect</param>
            <returns>
            The newly created <see cref="T:Holoville.HOTween.Tweener"/>,
            or <c>null</c> if the parameters were invalid.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Update">
            <summary>
            Updates normal tweens.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.HOTween.LateUpdate">
            <summary>
            Updates lateUpdate tweens.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.HOTween.FixedUpdate">
            <summary>
            Updates fixedUpdate tweens.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.HOTween.TimeScaleIndependentUpdate">
            <summary>
            Updates timeScaleIndependent tweens.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.HOTween.EnableOverwriteManager(System.Boolean)">
            <summary>
            Enables the overwrite manager (disabled by default).
            </summary>
            <param name="logWarnings">If TRUE, the overwriteManager will log a warning each time a tween is overwritten</param>
        </member>
        <member name="M:Holoville.HOTween.HOTween.DisableOverwriteManager">
            <summary>
            Disables the overwrite manager (disabled by default).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Pause(System.Object)">
            <summary>
            Pauses all the tweens for the given target, and returns the total number of paused Tweeners.
            </summary>
            <param name="p_target">
            The target whose tweens to pause.
            </param>
            <returns>
            The total number of paused Tweeners.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Pause(System.String)">
            <summary>
            Pauses all the Tweeners/Sequences with the given ID, and returns the total number of paused Tweeners/Sequences.
            </summary>
            <param name="p_id">
            The ID of the Tweeners/Sequences to pause.
            </param>
            <returns>
            The total number of paused Tweeners/Sequences.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Pause(System.Int32)">
            <summary>
            Pauses all the Tweeners/Sequences with the given intId, and returns the total number of paused Tweeners/Sequences.
            </summary>
            <param name="p_intId">
            The intId of the Tweeners/Sequences to pause.
            </param>
            <returns>
            The total number of paused Tweeners/Sequences.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Pause(Holoville.HOTween.Tweener)">
            <summary>
            Pauses the given Tweener, and returns the total number of paused ones (1 if the Tweener existed, otherwise 0).
            </summary>
            <param name="p_tweener">
            The Tweener to pause.
            </param>
            <returns>
            The total number of paused Tweener (1 if the Tweener existed, otherwise 0).
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Pause(Holoville.HOTween.Sequence)">
            <summary>
            Pauses the given Sequence, and returns the total number of paused ones (1 if the Sequence existed, otherwise 0).
            </summary>
            <param name="p_sequence">
            The Sequence to pause.
            </param>
            <returns>
            The total number of paused Sequence (1 if the sequence existed, otherwise 0).
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Pause">
            <summary>
            Pauses all Tweeners/Sequences, and returns the total number of paused Tweeners/Sequences.
            </summary>
            <returns>
            The total number of paused Tweeners/Sequences.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Play(System.Object)">
            <summary>
            Resumes all the tweens (delays included) for the given target, and returns the total number of resumed Tweeners.
            </summary>
            <param name="p_target">
            The target whose tweens to resume.
            </param>
            <returns>
            The total number of resumed Tweeners.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Play(System.Object,System.Boolean)">
            <summary>
            Resumes all the tweens for the given target, and returns the total number of resumed Tweeners.
            </summary>
            <param name="p_target">
            The target whose tweens to resume.
            </param>
            <param name="p_skipDelay">
            If <c>true</c> skips any initial delay.
            </param>
            <returns>
            The total number of resumed Tweeners.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Play(System.String)">
            <summary>
            Resumes all the Tweeners (delays included) and Sequences with the given ID, and returns the total number of resumed Tweeners/Sequences.
            </summary>
            <param name="p_id">
            The ID of the Tweeners/Sequences to resume.
            </param>
            <returns>
            The total number of resumed Tweeners/Sequences.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Play(System.String,System.Boolean)">
            <summary>
            Resumes all the Tweeners/Sequences with the given ID, and returns the total number of resumed Tweeners/Sequences.
            </summary>
            <param name="p_id">
            The ID of the Tweeners/Sequences to resume.
            </param>
            <param name="p_skipDelay">
            If <c>true</c> skips any initial tween delay.
            </param>
            <returns>
            The total number of resumed Tweeners/Sequences.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Play(System.Int32)">
            <summary>
            Resumes all the Tweeners (delays included) and Sequences with the given intId, and returns the total number of resumed Tweeners/Sequences.
            </summary>
            <param name="p_intId">
            The intId of the Tweeners/Sequences to resume.
            </param>
            <returns>
            The total number of resumed Tweeners/Sequences.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Play(System.Int32,System.Boolean)">
            <summary>
            Resumes all the Tweeners/Sequences with the given intId, and returns the total number of resumed Tweeners/Sequences.
            </summary>
            <param name="p_intId">
            The intId of the Tweeners/Sequences to resume.
            </param>
            <param name="p_skipDelay">
            If <c>true</c> skips any initial tween delay.
            </param>
            <returns>
            The total number of resumed Tweeners/Sequences.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Play(Holoville.HOTween.Tweener)">
            <summary>
            Resumes the given Tweener (delays included), and returns the total number of resumed ones (1 if the Tweener existed, otherwise 0).
            </summary>
            <param name="p_tweener">
            The Tweener to resume.
            </param>
            <returns>
            The total number of resumed Tweeners (1 if the Tweener existed, otherwise 0).
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Play(Holoville.HOTween.Tweener,System.Boolean)">
            <summary>
            Resumes the given Tweener, and returns the total number of resumed ones (1 if the Tweener existed, otherwise 0).
            </summary>
            <param name="p_tweener">
            The Tweener to resume.
            </param>
            <param name="p_skipDelay">
            If <c>true</c> skips any initial delay.
            </param>
            <returns>
            The total number of resumed Tweeners (1 if the Tweener existed, otherwise 0).
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Play(Holoville.HOTween.Sequence)">
            <summary>
            Resumes the given Sequence, and returns the total number of resumed ones (1 if the Sequence existed, otherwise 0).
            </summary>
            <param name="p_sequence">
            The Sequence to resume.
            </param>
            <returns>
            The total number of resumed Sequences (1 if the Sequence existed, otherwise 0).
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Play">
            <summary>
            Resumes all Tweeners (delays included) and Sequences, and returns the total number of resumed Tweeners/Sequences.
            </summary>
            <returns>
            The total number of resumed Tweeners/Sequences.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Play(System.Boolean)">
            <summary>
            Resumes all Tweeners/Sequences, and returns the total number of resumed Tweeners/Sequences.
            </summary>
            <param name="p_skipDelay">
            If <c>true</c> skips any initial tween delay.
            </param>
            <returns>
            The total number of resumed Tweeners/Sequences.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.PlayForward(System.Object)">
            <summary>
            Resumes all the tweens (delays included) for the given target,
            sets the tweens so that they move forward and not backwards,
            and returns the total number of resumed Tweeners.
            </summary>
            <param name="p_target">
            The target whose tweens to resume.
            </param>
            <returns>
            The total number of resumed Tweeners.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.PlayForward(System.Object,System.Boolean)">
            <summary>
            Resumes all the tweens for the given target,
            sets the tweens so that they move forward and not backwards,
            and returns the total number of resumed Tweeners.
            </summary>
            <param name="p_target">
            The target whose tweens to resume.
            </param>
            <param name="p_skipDelay">
            If <c>true</c> skips any initial delay.
            </param>
            <returns>
            The total number of resumed Tweeners.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.PlayForward(System.String)">
            <summary>
            Resumes all the Tweeners (delays included) and Sequences with the given ID,
            sets the tweens so that they move forward and not backwards,
            and returns the total number of resumed Tweeners/Sequences.
            </summary>
            <param name="p_id">
            The ID of the Tweeners/Sequences to resume.
            </param>
            <returns>
            The total number of resumed Tweeners/Sequences.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.PlayForward(System.String,System.Boolean)">
            <summary>
            Resumes all the Tweeners/Sequences with the given ID,
            sets the tweens so that they move forward and not backwards,
            and returns the total number of resumed Tweeners/Sequences.
            </summary>
            <param name="p_id">
            The ID of the Tweeners/Sequences to resume.
            </param>
            <param name="p_skipDelay">
            If <c>true</c> skips any initial tween delay.
            </param>
            <returns>
            The total number of resumed Tweeners/Sequences.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.PlayForward(System.Int32)">
            <summary>
            Resumes all the Tweeners (delays included) and Sequences with the given intId,
            sets the tweens so that they move forward and not backwards,
            and returns the total number of resumed Tweeners/Sequences.
            </summary>
            <param name="p_intId">
            The intId of the Tweeners/Sequences to resume.
            </param>
            <returns>
            The total number of resumed Tweeners/Sequences.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.PlayForward(System.Int32,System.Boolean)">
            <summary>
            Resumes all the Tweeners/Sequences with the given intId,
            sets the tweens so that they move forward and not backwards,
            and returns the total number of resumed Tweeners/Sequences.
            </summary>
            <param name="p_intId">
            The intId of the Tweeners/Sequences to resume.
            </param>
            <param name="p_skipDelay">
            If <c>true</c> skips any initial tween delay.
            </param>
            <returns>
            The total number of resumed Tweeners/Sequences.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.PlayForward(Holoville.HOTween.Tweener)">
            <summary>
            Resumes the given Tweener (delays included),
            sets it so that it moves forward and not backwards,
            and returns the total number of resumed ones (1 if the Tweener existed, otherwise 0).
            </summary>
            <param name="p_tweener">
            The Tweener to resume.
            </param>
            <returns>
            The total number of resumed Tweeners (1 if the Tweener existed, otherwise 0).
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.PlayForward(Holoville.HOTween.Tweener,System.Boolean)">
            <summary>
            Resumes the given Tweener,
            sets it so that it moves forward and not backwards,
            and returns the total number of resumed ones (1 if the Tweener existed, otherwise 0).
            </summary>
            <param name="p_tweener">
            The Tweener to resume.
            </param>
            <param name="p_skipDelay">
            If <c>true</c> skips any initial delay.
            </param>
            <returns>
            The total number of resumed Tweeners (1 if the Tweener existed, otherwise 0).
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.PlayForward(Holoville.HOTween.Sequence)">
            <summary>
            Resumes the given Sequence,
            sets it so that it moves forward and not backwards,
            and returns the total number of resumed ones (1 if the Sequence existed, otherwise 0).
            </summary>
            <param name="p_sequence">
            The Sequence to resume.
            </param>
            <returns>
            The total number of resumed Sequences (1 if the Sequence existed, otherwise 0).
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.PlayForward">
            <summary>
            Resumes all Tweeners (delays included) and Sequences,
            sets the tweens so that they move forward and not backwards,
            and returns the total number of resumed Tweeners/Sequences.
            </summary>
            <returns>
            The total number of resumed Tweeners/Sequences.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.PlayForward(System.Boolean)">
            <summary>
            Resumes all Tweeners/Sequences,
            sets the tweens so that they move forward and not backwards,
            and returns the total number of resumed Tweeners/Sequences.
            </summary>
            <param name="p_skipDelay">
            If <c>true</c> skips any initial tween delay.
            </param>
            <returns>
            The total number of resumed Tweeners/Sequences.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.PlayBackwards(System.Object)">
            <summary>
            Resumes all the tweens for the given target,
            sets the tweens so that they move backwards instead than forward,
            and returns the total number of resumed Tweeners.
            </summary>
            <param name="p_target">
            The target whose tweens to resume.
            </param>
            <returns>
            The total number of resumed Tweeners.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.PlayBackwards(System.String)">
            <summary>
            Resumes all the Tweeners/Sequences with the given ID,
            sets the tweens so that they move backwards instead than forward,
            and returns the total number of resumed Tweeners/Sequences.
            </summary>
            <param name="p_id">
            The ID of the Tweeners/Sequences to resume.
            </param>
            <returns>
            The total number of resumed Tweeners/Sequences.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.PlayBackwards(System.Int32)">
            <summary>
            Resumes all the Tweeners/Sequences with the given intId,
            sets the tweens so that they move backwards instead than forward,
            and returns the total number of resumed Tweeners/Sequences.
            </summary>
            <param name="p_intId">
            The intId of the Tweeners/Sequences to resume.
            </param>
            <returns>
            The total number of resumed Tweeners/Sequences.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.PlayBackwards(Holoville.HOTween.Tweener)">
            <summary>
            Resumes the given Tweener,
            sets it so that it moves backwards instead than forward,
            and returns the total number of resumed ones (1 if the Tweener existed, otherwise 0).
            </summary>
            <param name="p_tweener">
            The Tweener to resume.
            </param>
            <returns>
            The total number of resumed Tweeners (1 if the Tweener existed, otherwise 0).
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.PlayBackwards(Holoville.HOTween.Sequence)">
            <summary>
            Resumes the given Sequence,
            sets it so that it moves backwards instead than forward,
            and returns the total number of resumed ones (1 if the Sequence existed, otherwise 0).
            </summary>
            <param name="p_sequence">
            The Sequence to resume.
            </param>
            <returns>
            The total number of resumed Sequences (1 if the Sequence existed, otherwise 0).
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.PlayBackwards">
            <summary>
            Resumes all Tweeners/Sequences,
            sets the tweens so that they move backwards instead than forward,
            and returns the total number of resumed Tweeners/Sequences.
            </summary>
            <returns>
            The total number of resumed Tweeners/Sequences.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Rewind(System.Object)">
            <summary>
            Rewinds all the tweens (delays included) for the given target, and returns the total number of rewinded Tweeners.
            </summary>
            <param name="p_target">
            The target whose tweens to rewind.
            </param>
            <returns>
            The total number of rewinded Tweeners.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Rewind(System.Object,System.Boolean)">
            <summary>
            Rewinds all the tweens for the given target, and returns the total number of rewinded Tweeners.
            </summary>
            <param name="p_target">
            The target whose tweens to rewind.
            </param>
            <param name="p_skipDelay">
            If <c>true</c> skips any initial delay.
            </param>
            <returns>
            The total number of rewinded Tweeners.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Rewind(System.String)">
            <summary>
            Rewinds all the Tweeners (delays included) and Sequences with the given ID, and returns the total number of rewinded Tweeners/Sequences.
            </summary>
            <param name="p_id">
            The ID of the Tweeners/Sequences to rewind.
            </param>
            <returns>
            The total number of rewinded Tweeners/Sequences.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Rewind(System.String,System.Boolean)">
            <summary>
            Rewinds all the Tweeners/Sequences with the given ID, and returns the total number of rewinded Tweeners/Sequences.
            </summary>
            <param name="p_id">
            The ID of the Tweeners/Sequences to rewind.
            </param>
            <param name="p_skipDelay">
            If <c>true</c> skips any initial tween delay.
            </param>
            <returns>
            The total number of rewinded Tweeners/Sequences.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Rewind(System.Int32)">
            <summary>
            Rewinds all the Tweeners (delays included) and Sequences with the given intId, and returns the total number of rewinded Tweeners/Sequences.
            </summary>
            <param name="p_intId">
            The intId of the Tweeners/Sequences to rewind.
            </param>
            <returns>
            The total number of rewinded Tweeners/Sequences.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Rewind(System.Int32,System.Boolean)">
            <summary>
            Rewinds all the Tweeners/Sequences with the given intId, and returns the total number of rewinded Tweeners/Sequences.
            </summary>
            <param name="p_intId">
            The intId of the Tweeners/Sequences to rewind.
            </param>
            <param name="p_skipDelay">
            If <c>true</c> skips any initial tween delay.
            </param>
            <returns>
            The total number of rewinded Tweeners/Sequences.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Rewind(Holoville.HOTween.Tweener)">
            <summary>
            Rewinds the given Tweener (delays included), and returns the total number of rewinded ones (1 if the Tweener existed, otherwise 0).
            </summary>
            <param name="p_tweener">
            The Tweener to rewind.
            </param>
            <returns>
            The total number of rewinded Tweeners (1 if the Tweener existed, otherwise 0).
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Rewind(Holoville.HOTween.Tweener,System.Boolean)">
            <summary>
            Rewinds the given Tweener, and returns the total number of rewinded ones (1 if the Tweener existed, otherwise 0).
            </summary>
            <param name="p_tweener">
            The Tweener to rewind.
            </param>
            <param name="p_skipDelay">
            If <c>true</c> skips any initial delay.
            </param>
            <returns>
            The total number of rewinded Tweeners (1 if the Tweener existed, otherwise 0).
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Rewind(Holoville.HOTween.Sequence)">
            <summary>
            Rewinds the given Sequence, and returns the total number of rewinded ones (1 if the Sequence existed, otherwise 0).
            </summary>
            <param name="p_sequence">
            The Sequence to rewind.
            </param>
            <returns>
            The total number of rewinded Sequences (1 if the Sequence existed, otherwise 0).
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Rewind">
            <summary>
            Rewinds all Tweeners (delay included) and Sequences, and returns the total number of rewinded Tweeners/Sequences.
            </summary>
            <returns>
            The total number of rewinded Tweeners/Sequences.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Rewind(System.Boolean)">
            <summary>
            Rewinds all Tweeners/Sequences, and returns the total number of rewinded Tweeners/Sequences.
            </summary>
            <param name="p_skipDelay">
            If <c>true</c> skips any initial tween delay.
            </param>
            <returns>
            The total number of rewinded Tweeners/Sequences.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Restart(System.Object)">
            <summary>
            Restarts all the tweens (delays included) for the given target, and returns the total number of restarted Tweeners.
            </summary>
            <param name="p_target">
            The target whose tweens to restart.
            </param>
            <returns>
            The total number of restarted Tweeners.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Restart(System.Object,System.Boolean)">
            <summary>
            Restarts all the tweens for the given target, and returns the total number of restarted Tweeners.
            </summary>
            <param name="p_target">
            The target whose tweens to restart.
            </param>
            <param name="p_skipDelay">
            If <c>true</c> skips any initial delay.
            </param>
            <returns>
            The total number of restarted Tweeners.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Restart(System.String)">
            <summary>
            Restarts all the Tweeners (delays included) and Sequences with the given ID, and returns the total number of restarted Tweeners/Sequences.
            </summary>
            <param name="p_id">
            The ID of the Tweeners/Sequences to restart.
            </param>
            <returns>
            The total number of restarted Tweeners/Sequences.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Restart(System.String,System.Boolean)">
            <summary>
            Restarts all the Tweeners/Sequences with the given ID, and returns the total number of restarted Tweeners/Sequences.
            </summary>
            <param name="p_id">
            The ID of the Tweeners/Sequences to restart.
            </param>
            <param name="p_skipDelay">
            If <c>true</c> skips any initial tween delay.
            </param>
            <returns>
            The total number of restarted Tweeners/Sequences.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Restart(System.Int32)">
            <summary>
            Restarts all the Tweeners (delays included) and Sequences with the given intId, and returns the total number of restarted Tweeners/Sequences.
            </summary>
            <param name="p_intId">
            The intId of the Tweeners/Sequences to restart.
            </param>
            <returns>
            The total number of restarted Tweeners/Sequences.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Restart(System.Int32,System.Boolean)">
            <summary>
            Restarts all the Tweeners/Sequences with the given intId, and returns the total number of restarted Tweeners/Sequences.
            </summary>
            <param name="p_intId">
            The intId of the Tweeners/Sequences to restart.
            </param>
            <param name="p_skipDelay">
            If <c>true</c> skips any initial tween delay.
            </param>
            <returns>
            The total number of restarted Tweeners/Sequences.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Restart(Holoville.HOTween.Tweener)">
            <summary>
            Restarts the given Tweener (delays included), and returns the total number of restarted ones (1 if the Tweener existed, otherwise 0).
            </summary>
            <param name="p_tweener">
            The Tweener to restart.
            </param>
            <returns>
            The total number of restarted Tweeners (1 if the Tweener existed, otherwise 0).
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Restart(Holoville.HOTween.Tweener,System.Boolean)">
            <summary>
            Restarts the given Tweener, and returns the total number of restarted ones (1 if the Tweener existed, otherwise 0).
            </summary>
            <param name="p_tweener">
            The Tweener to restart.
            </param>
            <param name="p_skipDelay">
            If <c>true</c> skips any initial delay.
            </param>
            <returns>
            The total number of restarted Tweeners (1 if the Tweener existed, otherwise 0).
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Restart(Holoville.HOTween.Sequence)">
            <summary>
            Restarts the given Sequence, and returns the total number of restarted ones (1 if the Sequence existed, otherwise 0).
            </summary>
            <param name="p_sequence">
            The Sequence to restart.
            </param>
            <returns>
            The total number of restarted Sequences (1 if the Sequence existed, otherwise 0).
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Restart">
            <summary>
            Restarts all Tweeners (delay included) and Sequences, and returns the total number of restarted Tweeners/Sequences.
            </summary>
            <returns>
            The total number of restarted Tweeners/Sequences.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Restart(System.Boolean)">
            <summary>
            Restarts all Tweeners/Sequences and returns the total number of restarted Tweeners/Sequences.
            </summary>
            <param name="p_skipDelay">
            If <c>true</c> skips any initial tween delay.
            </param>
            <returns>
            The total number of restarted Tweeners/Sequences.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Reverse(System.Object,System.Boolean)">
            <summary>
            Reverses all the tweens for the given target,
            animating them from their current value back to the starting one,
            and returns the total number of reversed Tweeners.
            </summary>
            <param name="p_target">
            The target whose tweens to reverse.
            </param>
            <param name="p_forcePlay">
            If TRUE, the tween will also start playing in case it was paused,
            otherwise it will maintain its current play/pause state (default).
            </param>
            <returns>
            The total number of reversed Tweeners.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Reverse(System.String,System.Boolean)">
            <summary>
            Reverses all the Tweeners/Sequences with the given ID,
            animating them from their current value back to the starting one,
            and returns the total number of reversed Tweeners/Sequences.
            </summary>
            <param name="p_id">
            The ID of the Tweeners/Sequences to reverse.
            </param>
            <param name="p_forcePlay">
            If TRUE, the tween will also start playing in case it was paused,
            otherwise it will maintain its current play/pause state (default).
            </param>
            <returns>
            The total number of reversed Tweeners/Sequences.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Reverse(System.Int32,System.Boolean)">
            <summary>
            Reverses all the Tweeners/Sequences with the given intId,
            animating them from their current value back to the starting one,
            and returns the total number of reversed Tweeners/Sequences.
            </summary>
            <param name="p_intId">
            The intId of the Tweeners/Sequences to reverse.
            </param>
            <param name="p_forcePlay">
            If TRUE, the tween will also start playing in case it was paused,
            otherwise it will maintain its current play/pause state (default).
            </param>
            <returns>
            The total number of reversed Tweeners/Sequences.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Reverse(Holoville.HOTween.Tweener,System.Boolean)">
            <summary>
            Reverses the given Tweener,
            animating it from its current value back to the starting one,
            and returns the total number of reversed Tweeners (1 if the Tweener existed, otherwise 0).
            </summary>
            <param name="p_tweener">
            The Tweener to reverse.
            </param>
            <param name="p_forcePlay">
            If TRUE, the tween will also start playing in case it was paused,
            otherwise it will maintain its current play/pause state (default).
            </param>
            <returns>
            The total number of reversed Tweeners (1 if the Tweener existed, otherwise 0).
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Reverse(Holoville.HOTween.Sequence,System.Boolean)">
            <summary>
            Reverses the given Sequence, and returns the total number of reversed ones (1 if the Sequence existed, otherwise 0).
            </summary>
            <param name="p_sequence">
            The Sequence to reverse.
            </param>
            <param name="p_forcePlay">
            If TRUE, the tween will also start playing in case it was paused,
            otherwise it will maintain its current play/pause state (default).
            </param>
            <returns>
            The total number of reversed Sequences (1 if the Sequence existed, otherwise 0).
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Reverse(System.Boolean)">
            <summary>
            Reverses all Tweeners/Sequences,
            animating them from their current value back to the starting one,
            and returns the total number of reversed Tweeners/Sequences.
            </summary>
            <param name="p_forcePlay">
            If TRUE, the tween will also start playing in case it was paused,
            otherwise it will maintain its current play/pause state (default).
            </param>
            <returns>
            The total number of reversed Tweeners/Sequences.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Complete(System.Object)">
            <summary>
            Completes all the tweens for the given target, and returns the total number of completed Tweeners.
            Where a loop was involved and not infinite, the relative tween completes at the position where it would actually be after the set number of loops.
            If there were infinite loops, this method will have no effect.
            </summary>
            <param name="p_target">
            The target whose tweens to complete.
            </param>
            <returns>
            The total number of completed Tweeners.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Complete(System.String)">
            <summary>
            Completes all the Tweeners/Sequences with the given ID, and returns the total number of completed Tweeners/Sequences.
            Where a loop was involved and not infinite, the relative Tweener/Sequence completes at the position where it would actually be after the set number of loops.
            If there were infinite loops, this method will have no effect.
            </summary>
            <param name="p_id">
            The ID of the Tweeners/Sequences to complete.
            </param>
            <returns>
            The total number of completed Tweeners/Sequences.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Complete(System.Int32)">
            <summary>
            Completes all the Tweeners/Sequences with the given intId, and returns the total number of completed Tweeners/Sequences.
            Where a loop was involved and not infinite, the relative Tweener/Sequence completes at the position where it would actually be after the set number of loops.
            If there were infinite loops, this method will have no effect.
            </summary>
            <param name="p_intId">
            The intId of the Tweeners/Sequences to complete.
            </param>
            <returns>
            The total number of completed Tweeners/Sequences.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Complete(Holoville.HOTween.Tweener)">
            <summary>
            Completes the given Tweener, and returns the total number of completed ones (1 if the Tweener existed, otherwise 0).
            Where a loop was involved and not infinite, the relative Tweener completes at the position where it would actually be after the set number of loops.
            If there were infinite loops, this method will have no effect.
            </summary>
            <param name="p_tweener">
            The Tweener to complete.
            </param>
            <returns>
            The total number of completed Tweeners (1 if the Tweener existed, otherwise 0).
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Complete(Holoville.HOTween.Sequence)">
            <summary>
            Completes the given Sequence, and returns the total number of completed ones (1 if the Sequence existed, otherwise 0).
            Where a loop was involved and not infinite, the relative Sequence completes at the position where it would actually be after the set number of loops.
            If there were infinite loops, this method will have no effect.
            </summary>
            <param name="p_sequence">
            The Sequence to complete.
            </param>
            <returns>
            The total number of completed Sequences (1 if the Sequence existed, otherwise 0).
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Complete">
            <summary>
            Completes all Tweeners/Sequences, and returns the total number of completed Tweeners/Sequences.
            Where a loop was involved and not infinite, the relative Tweener/Sequence completes at the position where it would actually be after the set number of loops.
            If there were infinite loops, this method will have no effect.
            </summary>
            <returns>
            The total number of completed Tweeners/Sequences.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Kill(System.Object)">
            <summary>
            Kills all the tweens for the given target (unless they're were created inside a <see cref="T:Holoville.HOTween.Sequence"/>),
            and returns the total number of killed Tweeners.
            </summary>
            <param name="p_target">
            The target whose Tweeners to kill.
            </param>
            <returns>
            The total number of killed Tweeners.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Kill(System.String)">
            <summary>
            Kills all the Tweeners/Sequences with the given ID, and returns the total number of killed Tweeners/Sequences.
            </summary>
            <param name="p_id">
            The ID of the Tweeners/Sequences to kill.
            </param>
            <returns>
            The total number of killed Tweeners/Sequences.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Kill(System.Int32)">
            <summary>
            Kills all the Tweeners/Sequences with the given intId, and returns the total number of killed Tweeners/Sequences.
            </summary>
            <param name="p_intId">
            The intId of the Tweeners/Sequences to kill.
            </param>
            <returns>
            The total number of killed Tweeners/Sequences.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Kill(Holoville.HOTween.Tweener)">
            <summary>
            Kills the given Tweener, and returns the total number of killed ones (1 if the Tweener existed, otherwise 0).
            </summary>
            <param name="p_tweener">
            The Tweener to kill.
            </param>
            <returns>
            The total number of killed Tweeners (1 if the Tweener existed, otherwise 0).
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Kill(Holoville.HOTween.Sequence)">
            <summary>
            Kills the given Sequence, and returns the total number of killed ones (1 if the Sequence existed, otherwise 0).
            </summary>
            <param name="p_sequence">
            The Sequence to kill.
            </param>
            <returns>
            The total number of killed Sequences (1 if the Sequence existed, otherwise 0).
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.Kill">
            <summary>
            Kills all Tweeners/Sequences, and returns the total number of killed Tweeners/Sequences.
            </summary>
            <returns>
            The total number of killed Tweeners/Sequences.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.RemoveFromTweens(Holoville.HOTween.IHOTweenComponent)">
            <summary>
            Used by Sequences to remove added tweens from main tweens list.
            </summary>
            <param name="p_tween"></param>
        </member>
        <member name="M:Holoville.HOTween.HOTween.GetTweensById(System.String,System.Boolean)">
            <summary>
            Returns a list of the eventual existing tweens with the given Id,
            (empty if no Tweener/Sequence was found).
            </summary>
            <param name="p_id">Id to look for</param>
            <param name="p_includeNestedTweens">If TRUE also searches inside nested tweens</param>
            <returns></returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.GetTweensByIntId(System.Int32,System.Boolean)">
            <summary>
            Returns a list of the eventual existing tweens with the given intId,
            (empty if no Tweener/Sequence was found).
            </summary>
            <param name="p_intId">IntId to look for</param>
            <param name="p_includeNestedTweens">If TRUE also searches inside nested tweens</param>
            <returns></returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.GetTweenersByTarget(System.Object,System.Boolean)">
            <summary>
            Returns a list with all the existing <see cref="T:Holoville.HOTween.Tweener"/> objects whose target is the given one,
            or an empty list if none was found.
            </summary>
            <param name="p_target">Target to look for</param>
            <param name="p_includeNestedTweens">If TRUE also searches inside nested Tweeners</param>
            <returns></returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.IsTweening(System.Object)">
            <summary>
            Returns <c>true</c> if the given target is currently involved in any running Tweener or Sequence (taking into account also nested tweens).
            Returns <c>false</c> both if the given target is not inside a Tweener, than if the relative Tweener is paused.
            To simply check if the target is attached to a Tweener or Sequence use <see cref="M:Holoville.HOTween.HOTween.IsLinkedTo(System.Object)"/> instead.
            </summary>
            <param name="p_target">
            The target to check.
            </param>
            <returns>
            A value of <c>true</c> if the given target is currently involved in any running Tweener or Sequence (taking into account also nested tweens).
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.IsTweening(System.String)">
            <summary>
            Returns <c>true</c> if the given id is involved in any running Tweener or Sequence (taking into account also nested tweens).
            </summary>
            <param name="p_id">
            The target to check.
            </param>
        </member>
        <member name="M:Holoville.HOTween.HOTween.IsTweening(System.Int32)">
            <summary>
            Returns <c>true</c> if the given id is involved in any running Tweener or Sequence (taking into account also nested tweens).
            </summary>
            <param name="p_id">
            The target to check.
            </param>
        </member>
        <member name="M:Holoville.HOTween.HOTween.IsLinkedTo(System.Object)">
            <summary>
            Returns <c>true</c> if the given target is linked to any Tweener or Sequence (running or not, taking into account also nested tweens).
            </summary>
            <param name="p_target">
            The target to check.
            </param>
            <returns>
            A value of <c>true</c> if the given target is linked to any Tweener or Sequence (running or not, taking into account also nested tweens).
            </returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.GetTweenInfos">
            <summary>
            Returns a <see cref="T:Holoville.HOTween.Core.TweenInfo"/> list of the current tweens (paused and delayed included),
            or null if there are no tweens.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Holoville.HOTween.HOTween.DoSendMessage(Holoville.HOTween.TweenEvent)">
            <summary>
            Used by callbacks that are wired to sendMessage.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.HOTween.DoFilteredIteration(System.Object,Holoville.HOTween.Core.TweenDelegate.FilterFunc,System.Boolean)">
            <summary>
            Filter filters for:
            - ID if <see cref="T:System.String"/>
            - Tweener if <see cref="T:Holoville.HOTween.Tweener"/>
            - Sequence if <see cref="T:Holoville.HOTween.Sequence"/>
            - Tweener target if <see cref="T:System.Object"/> (doesn't look inside sequence tweens)
            - Everything if null
            </summary>
        </member>
        <member name="M:Holoville.HOTween.HOTween.GetPlugins">
            <summary>
            Returns all the currently existing plugins involved in any tween, even if nested or paused,
            or <c>null</c> if there are none.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.HOTween.isUpdateLoop">
            <summary>
            TRUE while inside the update loop
            </summary>
        </member>
        <member name="P:Holoville.HOTween.HOTween.totTweens">
            <summary>
            Total number of tweeners/sequences (paused and delayed ones are included).
            Tweeners and sequences contained into other sequences don't count:
            for example, if there's only one sequence that contains 2 tweeners, <c>totTweens</c> will be 1.
            </summary>
        </member>
        <member name="T:Holoville.HOTween.Core.Easing.Quad">
            <summary>
            This class contains a C# port of the easing equations created by Robert Penner (http://robertpenner.com/easing).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.Easing.Quad.EaseIn(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Easing equation function for a quadratic (t^2) easing in: accelerating from zero velocity.
            </summary>
            <param name="time">
            Current time (in frames or seconds).
            </param>
            <param name="startValue">
            Starting value.
            </param>
            <param name="changeValue">
            Change needed in value.
            </param>
            <param name="duration">
            Expected easing duration (in frames or seconds).
            </param>
            <param name="unusedOvershootOrAmplitude">Unused: here to keep same delegate for all ease types.</param>
            <param name="unusedPeriod">Unused: here to keep same delegate for all ease types.</param>
            <returns>
            The eased value.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Core.Easing.Quad.EaseOut(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Easing equation function for a quadratic (t^2) easing out: decelerating to zero velocity.
            </summary>
            <param name="time">
            Current time (in frames or seconds).
            </param>
            <param name="startValue">
            Starting value.
            </param>
            <param name="changeValue">
            Change needed in value.
            </param>
            <param name="duration">
            Expected easing duration (in frames or seconds).
            </param>
            <param name="unusedOvershootOrAmplitude">Unused: here to keep same delegate for all ease types.</param>
            <param name="unusedPeriod">Unused: here to keep same delegate for all ease types.</param>
            <returns>
            The eased value.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Core.Easing.Quad.EaseInOut(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Easing equation function for a quadratic (t^2) easing in/out: acceleration until halfway, then deceleration.
            </summary>
            <param name="time">
            Current time (in frames or seconds).
            </param>
            <param name="startValue">
            Starting value.
            </param>
            <param name="changeValue">
            Change needed in value.
            </param>
            <param name="duration">
            Expected easing duration (in frames or seconds).
            </param>
            <param name="unusedOvershootOrAmplitude">Unused: here to keep same delegate for all ease types.</param>
            <param name="unusedPeriod">Unused: here to keep same delegate for all ease types.</param>
            <returns>
            The eased value.
            </returns>
        </member>
        <member name="T:Holoville.HOTween.Core.Easing.Linear">
            <summary>
            This class contains a C# port of the easing equations created by Robert Penner (http://robertpenner.com/easing).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.Easing.Linear.EaseNone(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Easing equation function for a simple linear tweening, with no easing.
            </summary>
            <param name="time">
            Current time (in frames or seconds).
            </param>
            <param name="startValue">
            Starting value.
            </param>
            <param name="changeValue">
            Change needed in value.
            </param>
            <param name="duration">
            Expected easing duration (in frames or seconds).
            </param>
            <param name="unusedOvershootOrAmplitude">Unused: here to keep same delegate for all ease types.</param>
            <param name="unusedPeriod">Unused: here to keep same delegate for all ease types.</param>
            <returns>
            The eased value.
            </returns>
        </member>
        <member name="T:Holoville.HOTween.Core.ABSTweenComponentParms">
            <summary>
            Base class for all HOTParms.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponentParms.id">
            <summary>
            ID.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponentParms.intId">
            <summary>
            Int ID.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponentParms.autoKillOnComplete">
            <summary>
            Auto kill on complete.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponentParms.updateType">
            <summary>
            Update type.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponentParms.timeScale">
            <summary>
            Time scale.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponentParms.loops">
            <summary>
            Loops
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponentParms.loopType">
            <summary>
            Loop type.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponentParms.isPaused">
            <summary>
            Paused.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponentParms.onStart">
            <summary>
            On start.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponentParms.onStartWParms">
            <summary>
            On start with parms.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponentParms.onStartParms">
            <summary>
            On start parameters.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponentParms.onUpdate">
            <summary>
            On update.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponentParms.onUpdateWParms">
            <summary>
            On update with parms.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponentParms.onUpdateParms">
            <summary>
            On update parameters.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponentParms.onPluginUpdated">
            <summary>
            On plugin results.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponentParms.onPluginUpdatedWParms">
            <summary>
            On plugin results with parms.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponentParms.onPluginUpdatedParms">
            <summary>
            On plugin results parameters.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponentParms.onPause">
            <summary>
            On pause.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponentParms.onPauseWParms">
            <summary>
            On pause with parms.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponentParms.onPauseParms">
            <summary>
            On pause parameters.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponentParms.onPlay">
            <summary>
            On play.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponentParms.onPlayWParms">
            <summary>
            On play with parms.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponentParms.onPlayParms">
            <summary>
            On play parameters.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponentParms.onRewinded">
            <summary>
            On rewinded.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponentParms.onRewindedWParms">
            <summary>
            On rewinded with parms.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponentParms.onRewindedParms">
            <summary>
            On rewinded parameters.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponentParms.onStepComplete">
            <summary>
            On step complete.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponentParms.onStepCompleteWParms">
            <summary>
            On step complete with parms.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponentParms.onStepCompleteParms">
            <summary>
            On step complete parameters.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponentParms.onComplete">
            <summary>
            On complete.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponentParms.onCompleteWParms">
            <summary>
            On complete with parms.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponentParms.onCompleteParms">
            <summary>
            On complete parameters.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponentParms.manageBehaviours">
            <summary>
            True if there are behaviours to manage
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponentParms.manageGameObjects">
            <summary>
            True if there are gameObject to manage
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponentParms.managedBehavioursOn">
            <summary>
            Behaviours to activate
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponentParms.managedBehavioursOff">
            <summary>
            Behaviours to deactivate
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponentParms.managedGameObjectsOn">
            <summary>
            GameObjects to activate
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.ABSTweenComponentParms.managedGameObjectsOff">
            <summary>
            GameObejcts to deactivate
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.ABSTweenComponentParms.InitializeOwner(Holoville.HOTween.Core.ABSTweenComponent)">
            <summary>
            Initializes the given owner with the stored parameters.
            </summary>
            <param name="p_owner">
            The <see cref="T:Holoville.HOTween.Core.ABSTweenComponent"/> to initialize.
            </param>
        </member>
        <member name="T:Holoville.HOTween.CallbackType">
            <summary>
            Only used with <see cref="T:Holoville.HOTween.Core.ABSTweenComponent"/> ApplyCallback method.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.CallbackType.OnStart">
            <summary>
            Called when the tween is starting
            </summary>
        </member>
        <member name="F:Holoville.HOTween.CallbackType.OnUpdate">
            <summary>
            Called each time the tween is updated
            </summary>
        </member>
        <member name="F:Holoville.HOTween.CallbackType.OnStepComplete">
            <summary>
            Called each time a single loop is completed
            </summary>
        </member>
        <member name="F:Holoville.HOTween.CallbackType.OnComplete">
            <summary>
            Called when the whole tween (loops included) is complete
            </summary>
        </member>
        <member name="F:Holoville.HOTween.CallbackType.OnPause">
            <summary>
            Called when the tween is paused
            </summary>
        </member>
        <member name="F:Holoville.HOTween.CallbackType.OnPlay">
            <summary>
            Called when the tween is played
            </summary>
        </member>
        <member name="F:Holoville.HOTween.CallbackType.OnRewinded">
            <summary>
            Called when the tween is rewinded
            </summary>
        </member>
        <member name="F:Holoville.HOTween.CallbackType.OnPluginOverwritten">
            <summary>
            Works only with Tweeners, and not with Sequences.
            Called when a plugin of the Tweens is overwritten by the OverwriteManager.
            </summary>
        </member>
        <member name="T:FastDynamicMemberAccessor.MemberAccessorCacher">
            <summary>
            Cache manager for James Nies' MemberAccessor classes
            </summary>
        </member>
        <member name="M:FastDynamicMemberAccessor.MemberAccessorCacher.Make(System.Type,System.String,System.Reflection.PropertyInfo,System.Reflection.FieldInfo)">
            <summary>
            Returns the cached memberAccessor if it alread exists,
            or calls MemberAccessor.Make and caches and returns the newly created MemberAccessor.
            </summary>
        </member>
        <member name="M:FastDynamicMemberAccessor.MemberAccessorCacher.Clear">
            <summary>
            Clears the cache.
            </summary>
        </member>
        <member name="T:FastDynamicMemberAccessor.FieldAccessor">
            <summary>
            The PropertyAccessor class provides fast dynamic access
            to a property of a specified target class.
            </summary>
        </member>
        <member name="M:FastDynamicMemberAccessor.FieldAccessor.#ctor(System.Reflection.FieldInfo)">
            <summary>
            Creates a new property accessor.
            </summary>
        </member>
        <member name="P:FastDynamicMemberAccessor.FieldAccessor.MemberType">
            <summary>
            The Type of the Property being accessed.
            </summary>
        </member>
        <member name="P:FastDynamicMemberAccessor.FieldAccessor.CanRead">
            <summary>
            Whether or not the Property supports read access.
            </summary>
        </member>
        <member name="P:FastDynamicMemberAccessor.FieldAccessor.CanWrite">
            <summary>
            Whether or not the Property supports write access.
            </summary>
        </member>
        <member name="T:Holoville.HOTween.Axis">
            <summary>
            Enumeration of axis.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Axis.None">
            <summary>
            No axis.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Axis.X">
            <summary>
            X axis.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Axis.Y">
            <summary>
            Y axis.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Axis.Z">
            <summary>
            Z axis.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Axis.W">
            <summary>
            W axis.
            </summary>
        </member>
        <member name="T:Holoville.HOTween.Plugins.PlugVector3Path">
            <summary>
            Plugin for the tweening of Vector3 objects along a Vector3 path.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3Path.#ctor(UnityEngine.Vector3[],Holoville.HOTween.PathType)">
            <summary>
            Creates a new instance of this plugin using the main ease type and an absolute path.
            </summary>
            <param name="p_path">
            The <see cref="T:UnityEngine.Vector3"/> path to tween through.
            </param>
            <param name="p_type">Type of path</param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3Path.#ctor(UnityEngine.Vector3[],Holoville.HOTween.EaseType,Holoville.HOTween.PathType)">
            <summary>
            Creates a new instance of this plugin using an absolute path.
            </summary>
            <param name="p_path">
            The <see cref="T:UnityEngine.Vector3"/> path to tween through.
            </param>
            <param name="p_easeType">
            The <see cref="T:Holoville.HOTween.EaseType"/> to use.
            </param>
            <param name="p_type">Type of path</param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3Path.#ctor(UnityEngine.Vector3[],System.Boolean,Holoville.HOTween.PathType)">
            <summary>
            Creates a new instance of this plugin using the main ease type.
            </summary>
            <param name="p_path">
            The <see cref="T:UnityEngine.Vector3"/> path to tween through.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the path is considered relative to the starting value of the property, instead than absolute.
            Not compatible with <c>HOTween.From</c>.
            </param>
            <param name="p_type">Type of path</param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3Path.#ctor(UnityEngine.Vector3[],Holoville.HOTween.EaseType,System.Boolean,Holoville.HOTween.PathType)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_path">
            The <see cref="T:UnityEngine.Vector3"/> path to tween through.
            </param>
            <param name="p_easeType">
            The <see cref="T:Holoville.HOTween.EaseType"/> to use.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the path is considered relative to the starting value of the property, instead than absolute.
            Not compatible with <c>HOTween.From</c>.
            </param>
            <param name="p_type">Type of path</param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3Path.#ctor(UnityEngine.Vector3[],UnityEngine.AnimationCurve,System.Boolean,Holoville.HOTween.PathType)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_path">
            The <see cref="T:UnityEngine.Vector3"/> path to tween through.
            </param>
            <param name="p_easeAnimCurve">
            The <see cref="T:UnityEngine.AnimationCurve"/> to use for easing.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
            <param name="p_type">Type of path</param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3Path.Init(Holoville.HOTween.Tweener,System.String,Holoville.HOTween.EaseType,System.Type,System.Reflection.PropertyInfo,System.Reflection.FieldInfo)">
            <summary>
            Init override.
            Used to check that isRelative is FALSE,
            and otherwise use the given parameters to send a decent warning message.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3Path.ClosePath">
            <summary>
            Parameter &gt; Smoothly closes the path, so that it can be used for cycling loops.
            </summary>
            <returns>
            A <see cref="T:Holoville.HOTween.Plugins.PlugVector3Path"/>
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3Path.ClosePath(System.Boolean)">
            <summary>
            Parameter > Choose whether to smoothly close the path, so that it can be used for cycling loops.
            </summary>
            <param name="p_close">
            Set to <c>true</c> to close the path.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3Path.OrientToPath">
            <summary>
            Parameter &gt; If the tween target is a <see cref="T:UnityEngine.Transform"/>, orients the tween target to the path.
            </summary>
            <returns>
            A <see cref="T:Holoville.HOTween.Plugins.PlugVector3Path"/>
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3Path.OrientToPath(System.Boolean)">
            <summary>
            Parameter &gt; Choose whether to orient the tween target to the path (only if it's a <see cref="T:UnityEngine.Transform"/>).
            </summary>
            <param name="p_orient">
            Set to <c>true</c> to orient the tween target to the path.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3Path.OrientToPath(System.Single)">
            <summary>
            Parameter &gt; If the tween target is a <see cref="T:UnityEngine.Transform"/>, orients the tween target to the path,
            using the given lookAhead percentage.
            </summary>
            <param name="p_lookAhead">
            The look ahead percentage (0 to 1).
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3Path.OrientToPath(Holoville.HOTween.Axis)">
            <summary>
            Parameter &gt; If the tween target is a <see cref="T:UnityEngine.Transform"/>, orients the tween target to the path,
            locking its rotation on the given axis.
            </summary>
            <param name="p_lockRotationAxis">
            Sets one or more axis to lock while rotating.
            To lock more than one axis, use the bitwise OR operator (ex: <c>Axis.X | Axis.Y</c>).
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3Path.OrientToPath(System.Single,Holoville.HOTween.Axis)">
            <summary>
            Parameter &gt; If the tween target is a <see cref="T:UnityEngine.Transform"/>, orients the tween target to the path,
            using the given lookAhead percentage and locking its rotation on the given axis.
            </summary>
            <param name="p_lookAhead">The look ahead percentage (0 to 1)</param>
            <param name="p_lockRotationAxis">
            Sets one or more axis to lock while rotating.
            To lock more than one axis, use the bitwise OR operator (ex: <c>Axis.X | Axis.Y</c>).
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3Path.OrientToPath(System.Boolean,System.Single,Holoville.HOTween.Axis)">
            <summary>
            Parameter &gt; Choose whether to orient the tween target to the path (only if it's a <see cref="T:UnityEngine.Transform"/>),
            and which lookAhead percentage ad lockRotation to use.
            </summary>
            <param name="p_orient">
            Set to <c>true</c> to orient the tween target to the path.
            </param>
            <param name="p_lookAhead">
            The look ahead percentage (0 to 1).
            </param>
            <param name="p_lockRotationAxis">
            Sets one or more axis to lock while rotating.
            To lock more than one axis, use the bitwise OR operator (ex: <c>Axis.X | Axis.Y</c>).
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3Path.LookAt(UnityEngine.Transform)">
            <summary>
            Parameter &gt; If the tween target is a <see cref="T:UnityEngine.Transform"/>, sets the tween so that the target will always look at the given transform.
            </summary>
            <param name="p_transform">
            The <see cref="T:UnityEngine.Transform"/> to look at.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3Path.LookAt(UnityEngine.Vector3)">
            <summary>
            Parameter &gt; If the tween target is a <see cref="T:UnityEngine.Transform"/>, sets the tween so that the target will always look at the given position.
            </summary>
            <param name="p_position">
            The <see cref="T:UnityEngine.Vector3"/> to look at.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3Path.LockPosition(Holoville.HOTween.Axis)">
            <summary>
            Parameter > locks the given position axis.
            </summary>
            <param name="p_lockAxis">Sets one or more axis to lock.
            To lock more than one axis, use the bitwise OR operator (ex: <c>Axis.X | Axis.Y</c>)</param>
            <returns></returns>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3Path.GetSpeedBasedDuration(System.Single)">
            <summary>
            Returns the speed-based duration based on the given speed x second.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3Path.SetChangeVal">
            <summary>
            Adds the correct starting and ending point so the path can be reached from the property's actual position.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3Path.SetIncremental(System.Int32)">
            <summary>
            Sets the correct values in case of Incremental loop type.
            </summary>
            <param name="p_diffIncr">
            The difference from the previous loop increment.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3Path.DoUpdate(System.Single)">
            <summary>
            Updates the tween.
            </summary>
            <param name="p_totElapsed">
            The total elapsed time since startup.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3Path.GetConstPointOnPath(System.Single)">
            <summary>
            Returns the point at the given percentage (0 to 1),
            considering the path at constant speed.
            Used by DoUpdate and by Tweener.GetPointOnPath.
            </summary>
            <param name="t">
            The percentage (0 to 1) at which to get the point.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3Path.GetConstPointOnPath(System.Single,System.Boolean,Holoville.HOTween.Core.Path,System.Int32@)">
            <summary>
            Returns the point at the given percentage (0 to 1),
            considering the path at constant speed.
            Used by DoUpdate and by Tweener.GetPointOnPath.
            </summary>
            <param name="t">
            The percentage (0 to 1) at which to get the point.
            </param>
            <param name="p_updatePathPerc">
            IF <c>true</c> updates also <see cref="F:Holoville.HOTween.Plugins.PlugVector3Path.pathPerc"/> value
            (necessary if this method is called for an update).
            </param>
            <param name="p_path">
            IF not NULL uses the given path instead than the default one.
            </param>
            <param name="out_waypointIndex">
            Index of waypoint we're moving to (or where we are). Only used for Linear paths.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugVector3Path.GetWaypointsLengthPercentage(System.Int32,System.Int32)">
            <summary>
            Returns the percentage of the path length occupied by the given path waypoints interval.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Plugins.PlugVector3Path.startVal">
            <summary>
            Gets the untyped start value,
            sets both the untyped and the typed start value.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Plugins.PlugVector3Path.endVal">
            <summary>
            Gets the untyped end value,
            sets both the untyped and the typed end value.
            </summary>
        </member>
        <member name="T:Holoville.HOTween.Core.OverwriteManager">
            <summary>
            Manager used for automatic control of eventual overwriting of tweens.
            It is disabled by default, you need to call <see cref="M:Holoville.HOTween.HOTween.EnableOverwriteManager(System.Boolean)"/> to enable it.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.Core.OverwriteManager.runningTweens">
            <summary>
            List of currently running Tweeners
            (meaning all Tweeners whose OnStart has been called, paused or not).
            </summary>
        </member>
        <member name="T:Holoville.HOTween.Core.Easing.Quint">
            <summary>
            This class contains a C# port of the easing equations created by Robert Penner (http://robertpenner.com/easing).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.Easing.Quint.EaseIn(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Easing equation function for a quintic (t^5) easing in: accelerating from zero velocity.
            </summary>
            <param name="time">
            Current time (in frames or seconds).
            </param>
            <param name="startValue">
            Starting value.
            </param>
            <param name="changeValue">
            Change needed in value.
            </param>
            <param name="duration">
            Expected easing duration (in frames or seconds).
            </param>
            <param name="unusedOvershootOrAmplitude">Unused: here to keep same delegate for all ease types.</param>
            <param name="unusedPeriod">Unused: here to keep same delegate for all ease types.</param>
            <returns>
            The eased value.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Core.Easing.Quint.EaseOut(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Easing equation function for a quintic (t^5) easing out: decelerating from zero velocity.
            </summary>
            <param name="time">
            Current time (in frames or seconds).
            </param>
            <param name="startValue">
            Starting value.
            </param>
            <param name="changeValue">
            Change needed in value.
            </param>
            <param name="duration">
            Expected easing duration (in frames or seconds).
            </param>
            <param name="unusedOvershootOrAmplitude">Unused: here to keep same delegate for all ease types.</param>
            <param name="unusedPeriod">Unused: here to keep same delegate for all ease types.</param>
            <returns>
            The eased value.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Core.Easing.Quint.EaseInOut(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Easing equation function for a quintic (t^5) easing in/out: acceleration until halfway, then deceleration.
            </summary>
            <param name="time">
            Current time (in frames or seconds).
            </param>
            <param name="startValue">
            Starting value.
            </param>
            <param name="changeValue">
            Change needed in value.
            </param>
            <param name="duration">
            Expected easing duration (in frames or seconds).
            </param>
            <param name="unusedOvershootOrAmplitude">Unused: here to keep same delegate for all ease types.</param>
            <param name="unusedPeriod">Unused: here to keep same delegate for all ease types.</param>
            <returns>
            The eased value.
            </returns>
        </member>
        <member name="T:Holoville.HOTween.Plugins.Core.PlugColor32">
            <summary>
            Default plugin for the tweening of Color32 objects.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugColor32.#ctor(UnityEngine.Color32)">
            <summary>
            Creates a new instance of this plugin using the main ease type.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Color32"/> value to tween to.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugColor32.#ctor(UnityEngine.Color32,Holoville.HOTween.EaseType)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Color32"/> value to tween to.
            </param>
            <param name="p_easeType">
            The <see cref="T:Holoville.HOTween.EaseType"/> to use.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugColor32.#ctor(UnityEngine.Color32,System.Boolean)">
            <summary>
            Creates a new instance of this plugin using the main ease type.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Color32"/> value to tween to.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugColor32.#ctor(UnityEngine.Color32,Holoville.HOTween.EaseType,System.Boolean)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Color32"/> value to tween to.
            </param>
            <param name="p_easeType">
            The <see cref="T:Holoville.HOTween.EaseType"/> to use.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugColor32.#ctor(UnityEngine.Color32,UnityEngine.AnimationCurve,System.Boolean)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Color32"/> value to tween to.
            </param>
            <param name="p_easeAnimCurve">
            The <see cref="T:UnityEngine.AnimationCurve"/> to use for easing.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugColor32.GetSpeedBasedDuration(System.Single)">
            <summary>
            Returns the speed-based duration based on the given speed x second.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugColor32.SetChangeVal">
            <summary>
            Sets the typed changeVal based on the current startVal and endVal.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugColor32.SetIncremental(System.Int32)">
            <summary>
            Sets the correct values in case of Incremental loop type.
            </summary>
            <param name="p_diffIncr">
            The difference from the previous loop increment.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.Core.PlugColor32.DoUpdate(System.Single)">
            <summary>
            Updates the tween.
            </summary>
            <param name="p_totElapsed">
            The total elapsed time since startup.
            </param>
        </member>
        <member name="P:Holoville.HOTween.Plugins.Core.PlugColor32.startVal">
            <summary>
            Gets the untyped start value,
            sets both the untyped and the typed start value.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Plugins.Core.PlugColor32.endVal">
            <summary>
            Gets the untyped end value,
            sets both the untyped and the typed end value.
            </summary>
        </member>
        <member name="T:Holoville.HOTween.Core.TweenWarning">
            <summary>
            Used internally to generate warnings that are managed without throwing exceptions.
            </summary>
        </member>
        <member name="T:Holoville.HOTween.Core.Path">
            <summary>
            Used to manage movement on a Cardinal spline (of Catmull-Rom type).
            Contains code from Andeeee's CRSpline (http://forum.unity3d.com/threads/32954-Waypoints-and-constant-variable-speed-problems).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.Path.#ctor(Holoville.HOTween.PathType,UnityEngine.Vector3[])">
            <summary>
            Creates a new <see cref="T:Holoville.HOTween.Core.Path"/> based on the given array of <see cref="T:UnityEngine.Vector3"/> points.
            </summary>
            <param name="p_type">Type of path</param>
            <param name="p_path">
            The <see cref="T:UnityEngine.Vector3"/> array used to create the path.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Core.Path.GetPoint(System.Single)">
            <summary>
            Gets the point on the path at the given percentage (0 to 1).
            </summary>
            <param name="t">
            The percentage (0 to 1) at which to get the point.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Core.Path.GetPoint(System.Single,System.Int32@)">
            <summary>
            Gets the point on the path at the given percentage (0 to 1).
            </summary>
            <param name="t">
            The percentage (0 to 1) at which to get the point.
            </param>
            <param name="out_waypointIndex">
            Index of waypoint we're moving to (or where we are). Only used for Linear paths.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Core.Path.Velocity(System.Single)">
            <summary>
            Gets the velocity at the given time position.
            OBSOLETE since path now uses constant velocity.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.Path.GizmoDraw">
            <summary>
            Draws the full path.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.Path.GizmoDraw(System.Single,System.Boolean)">
            <summary>
            Draws the full path, and if <c>t</c> is not -1 also draws the velocity at <c>t</c>.
            </summary>
            <param name="t">
            The point where to calculate velocity and eventual additional trigonometry.
            </param>
            <param name="p_drawTrig">
            If <c>true</c> also draws the normal, tangent, and binormal of t.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Core.Path.GetConstPoint(System.Single)">
            <summary>
            Returns the point at the given time percentage (0 to 1),
            considering the path at constant speed.
            </summary>
            <param name="t">The time percentage (0 to 1) at which to get the point </param>
        </member>
        <member name="M:Holoville.HOTween.Core.Path.GetConstPoint(System.Single,System.Single@,System.Int32@)">
            <summary>
            Returns the point at the given time percentage (0 to 1),
            considering the path at constant speed.
            </summary>
            <param name="t">The time percentage (0 to 1) at which to get the point </param>
            <param name="out_pathPerc">Outputs the calculated path percentage value</param>
            <param name="out_waypointIndex">
            Index of waypoint we're moving to (or where we are). Only used for Linear paths.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Core.Path.GetConstPathPercFromTimePerc(System.Single)">
            <summary>
            Gets the constant path percentage for the given time percentage
            that can be used with GetConstPoint.
            </summary>
            <param name="t">The time percentage (0 to 1) to use</param>
            <returns></returns>
        </member>
        <member name="T:Holoville.HOTween.TweenParms">
            <summary>
            Method chaining parameters for a <see cref="T:Holoville.HOTween.Tweener"/>.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.InitializeObject(Holoville.HOTween.Tweener,System.Object)">
            <summary>
            Initializes the given <see cref="T:Holoville.HOTween.Tweener"/> with the stored parameters.
            </summary>
            <param name="p_tweenObj">
            The <see cref="T:Holoville.HOTween.Tweener"/> to initialize.
            </param>
            <param name="p_target">
            The <see cref="T:Holoville.HOTween.Tweener"/> target.
            </param>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.PixelPerfect">
            <summary>
            Sets this tween so that it works with pixel perfect values.
            Only works with <see cref="T:UnityEngine.Vector3"/>, <see cref="T:UnityEngine.Vector2"/>, <see cref="T:System.Single"/>,
            <see cref="T:Holoville.HOTween.Plugins.PlugVector3X"/>, <see cref="T:Holoville.HOTween.Plugins.PlugVector3Y"/>, <see cref="T:Holoville.HOTween.Plugins.PlugVector3Z"/>
            plugins.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.SpeedBased">
            <summary>
            Sets this tween to work by speed instead than time.
            When a tween is based on speed instead than time,
            duration is considered as the amount that the property will change every second,
            and ease is automatically set to Linear.
            In case of Vectors, the amount represents the vector length x second;
            in case of Quaternions, the amount represents the full rotation (360°) speed x second;
            in case of strings, the amount represents the amount of changed letters x second.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.SpeedBased(System.Boolean)">
            <summary>
            Sets whether to tween by speed or not.
            When a tween is based on speed instead than time,
            duration is considered as the amount that the property will change every second,
            and ease is automatically set to Linear.
            In case of Vectors, the amount represents the vector length x second;
            in case of strings, the amount represents the amount of changed letters x second.
            </summary>
            <param name="p_speedBased">
            If <c>true</c> this tween will work by speed instead than by time.
            </param>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.Ease(Holoville.HOTween.EaseType)">
            <summary>
            Sets the ease type to use (default = <c>EaseType.easeOutQuad</c>).
            If you set this tween to use speed instead than time,
            this parameter becomes useless, because it will be managed internally.
            </summary>
            <param name="p_easeType">
            The <see cref="T:Holoville.HOTween.EaseType"/> to use.
            </param>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.Ease(Holoville.HOTween.EaseType,System.Single)">
            <summary>
            Sets the ease type to use (default = <c>EaseType.easeOutQuad</c>).
            If you set this tween to use speed instead than time,
            this parameter becomes useless, because it will be managed internally.
            </summary>
            <param name="p_easeType">
            The <see cref="T:Holoville.HOTween.EaseType"/> to use.
            </param>
            <param name="p_overshoot">
            Eventual overshoot to use with Back easeType (default is 1.70158).
            </param>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.Ease(Holoville.HOTween.EaseType,System.Single,System.Single)">
            <summary>
            Sets the ease type to use (default = <c>EaseType.easeOutQuad</c>).
            If you set this tween to use speed instead than time,
            this parameter becomes useless, because it will be managed internally.
            </summary>
            <param name="p_easeType">
            The <see cref="T:Holoville.HOTween.EaseType"/> to use.
            </param>
            <param name="p_amplitude">
            Eventual amplitude to use with Elastic easeType (default is 0).
            </param>
            <param name="p_period">
            Eventual period to use with Elastic easeType (default is 0).
            </param>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.Ease(UnityEngine.AnimationCurve)">
            <summary>
            Sets the ease to use the given AnimationCurve.
            If you set this tween to use speed instead than time,
            this parameter becomes useless, because it will be managed internally.
            </summary>
            <param name="p_easeAnimationCurve">
            The <see cref="T:UnityEngine.AnimationCurve"/> to use.
            </param>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.Delay(System.Single)">
            <summary>
            Sets the seconds of delay before the tween should start (default = <c>0</c>).
            </summary>
            <param name="p_delay">
            The seconds of delay.
            </param>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.Pause">
            <summary>
            Sets the Tweener in a paused state.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.Pause(System.Boolean)">
            <summary>
            Choose whether to set the Tweener in a paused state.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.NewProp(System.String,Holoville.HOTween.Plugins.Core.ABSTweenPlugin)">
            <summary>
            Sets a property or field to tween,
            directly assigning the given <c>TweenPlugin</c> to it.
            Behaves as <c>Prop()</c>, but removes any other property tween previously set in this <see cref="T:Holoville.HOTween.TweenParms"/>
            (useful if you want to reuse the same parameters with a new set of property tweens).
            </summary>
            <param name="p_propName">
            The name of the property.
            </param>
            <param name="p_plugin">
            The <see cref="T:Holoville.HOTween.Plugins.Core.ABSTweenPlugin"/> to use.
            </param>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.NewProp(System.String,System.Object)">
            <summary>
            Sets a property or field to tween.
            Behaves as <c>Prop()</c>, but removes any other property tween previously set in this <see cref="T:Holoville.HOTween.TweenParms"/>
            (useful if you want to reuse the same parameters with a new set of property tweens).
            </summary>
            <param name="p_propName">
            The name of the property.
            </param>
            <param name="p_endVal">
            The absolute end value the object should reach with the tween.
            </param>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.NewProp(System.String,System.Object,System.Boolean)">
            <summary>
            Sets a property or field to tween.
            Behaves as <c>Prop()</c>, but removes any other property tween previously set in this <see cref="T:Holoville.HOTween.TweenParms"/>
            (useful if you want to reuse the same parameters with a new set of property tweens).
            </summary>
            <param name="p_propName">
            The name of the property.
            </param>
            <param name="p_endVal">
            The end value the object should reach with the tween.
            </param>
            <param name="p_isRelative">
            If <c>true</c> treats the end value as relative, otherwise as absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.Prop(System.String,Holoville.HOTween.Plugins.Core.ABSTweenPlugin)">
            <summary>
            Sets a property or field to tween,
            directly assigning the given <c>TweenPlugin</c> to it.
            Behaves as <c>NewProp()</c>, but without removing the other property tweens that were set in this <see cref="T:Holoville.HOTween.TweenParms"/>.
            </summary>
            <param name="p_propName">
            The name of the property.
            </param>
            <param name="p_plugin">
            The <see cref="T:Holoville.HOTween.Plugins.Core.ABSTweenPlugin"/> to use.
            </param>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.Prop(System.String,System.Object)">
            <summary>
            Sets a property or field to tween.
            Behaves as <c>NewProp()</c>, but without removing the other property tweens that were set in this <see cref="T:Holoville.HOTween.TweenParms"/>.
            </summary>
            <param name="p_propName">
            The name of the property.
            </param>
            <param name="p_endVal">
            The absolute end value the object should reach with the tween.
            </param>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.Prop(System.String,System.Object,System.Boolean)">
            <summary>
            Sets a property or field to tween.
            Behaves as <c>NewProp()</c>, but without removing the other property tweens that were set in this <see cref="T:Holoville.HOTween.TweenParms"/>.
            </summary>
            <param name="p_propName">
            The name of the property.
            </param>
            <param name="p_endVal">
            The end value the object should reach with the tween.
            </param>
            <param name="p_isRelative">
            If <c>true</c> treats the end value as relative, otherwise as absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.Id(System.String)">
            <summary>
            Sets the ID of this Tweener (default = "").
            The same ID can be applied to multiple Tweeners, thus allowing for group operations.
            You can also use <c>IntId</c> instead of <c>Id</c> for faster operations.
            </summary>
            <param name="p_id">
            The ID for this Tweener.
            </param>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.IntId(System.Int32)">
            <summary>
            Sets the int ID of this Tweener (default = 0).
            The same intId can be applied to multiple Tweeners, thus allowing for group operations.
            The main difference from <c>Id</c> is that while <c>Id</c> is more legible, <c>IntId</c> allows for faster operations.
            </summary>
            <param name="p_intId">
            The int ID for this Tweener.
            </param>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.AutoKill(System.Boolean)">
            <summary>
            Sets auto-kill behaviour for when the Tweener reaches its end (default = <c>false</c>).
            </summary>
            <param name="p_active">
            If <c>true</c> the Tweener is killed and removed from HOTween as soon as it's completed.
            If <c>false</c> doesn't remove this Tweener from HOTween when it is completed,
            and you will need to call an <c>HOTween.Kill</c> to remove this Tweener.
            </param>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.UpdateType(Holoville.HOTween.UpdateType)">
            <summary>
            Sets the type of update to use for this Tweener (default = <see cref="M:Holoville.HOTween.TweenParms.UpdateType(Holoville.HOTween.UpdateType)"/><c>.Update</c>).
            </summary>
            <param name="p_updateType">
            The type of update to use.
            </param>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.TimeScale(System.Single)">
            <summary>
            Sets the time scale that will be used by this Tweener.
            </summary>
            <param name="p_timeScale">
            The time scale to use.
            </param>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.Loops(System.Int32)">
            <summary>
            Sets the number of times the Tweener will run (default = <c>1</c>, meaning only one go and no other loops).
            </summary>
            <param name="p_loops">
            Number of loops (set it to <c>-1</c> or <see cref="F:System.Single.PositiveInfinity"/> to apply infinite loops).
            </param>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.Loops(System.Int32,Holoville.HOTween.LoopType)">
            <summary>
            Sets the number of times the Tweener will run,
            and the type of loop behaviour to apply
            (default = <c>1</c>, <c>LoopType.Restart</c>).
            </summary>
            <param name="p_loops">
            Number of loops (set it to <c>-1</c> or <see cref="F:System.Single.PositiveInfinity"/> to apply infinite loops).
            </param>
            <param name="p_loopType">
            The <see cref="T:Holoville.HOTween.LoopType"/> behaviour to use.
            </param>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.OnStart(Holoville.HOTween.Core.TweenDelegate.TweenCallback)">
            <summary>
            Function to call when the Tweener is started for the very first time.
            </summary>
            <param name="p_function">
            The function to call, who must return <c>void</c> and accept no parameters.
            </param>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.OnStart(Holoville.HOTween.Core.TweenDelegate.TweenCallbackWParms,System.Object[])">
            <summary>
            Function to call when the Tweener is started for the very first time.
            </summary>
            <param name="p_function">
            The function to call.
            It must return <c>void</c> and has to accept a single parameter of type <see cref="T:Holoville.HOTween.TweenEvent"/>.
            </param>
            <param name="p_funcParms">
            Additional comma separated parameters to pass to the function.
            </param>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.OnUpdate(Holoville.HOTween.Core.TweenDelegate.TweenCallback)">
            <summary>
            Function to call each time the Tweener is updated.
            </summary>
            <param name="p_function">
            The function to call, who must return <c>void</c> and accept no parameters.
            </param>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.OnUpdate(Holoville.HOTween.Core.TweenDelegate.TweenCallbackWParms,System.Object[])">
            <summary>
            Function to call each time the Tweener is updated.
            </summary>
            <param name="p_function">
            The function to call.
            It must return <c>void</c> and has to accept a single parameter of type <see cref="T:Holoville.HOTween.TweenEvent"/>.
            </param>
            <param name="p_funcParms">
            Additional comma separated parameters to pass to the function.
            </param>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.OnPluginUpdated(Holoville.HOTween.Core.TweenDelegate.TweenCallbackWParms,System.Object[])">
            <summary>
            Function to call each time a plugin is updated.
            </summary>
            <param name="p_function">
            The function to call.
            It must return <c>void</c> and has to accept a single parameter of type <see cref="T:Holoville.HOTween.TweenEvent"/>.
            </param>
            <param name="p_funcParms">
            Additional comma separated parameters to pass to the function.
            </param>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.OnPause(Holoville.HOTween.Core.TweenDelegate.TweenCallback)">
            <summary>
            Function to call when the Tweener switches from a playing state to a paused state.
            </summary>
            <param name="p_function">
            The function to call, who must return <c>void</c> and accept no parameters.
            </param>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.OnPause(Holoville.HOTween.Core.TweenDelegate.TweenCallbackWParms,System.Object[])">
            <summary>
            Function to call when the Tweener switches from a playing state to a paused state.
            </summary>
            <param name="p_function">
            The function to call.
            It must return <c>void</c> and has to accept a single parameter of type <see cref="T:Holoville.HOTween.TweenEvent"/>.
            </param>
            <param name="p_funcParms">
            Additional comma separated parameters to pass to the function.
            </param>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.OnPlay(Holoville.HOTween.Core.TweenDelegate.TweenCallback)">
            <summary>
            Function to call when the Tweener switches from a paused state to a playing state.
            </summary>
            <param name="p_function">
            The function to call, who must return <c>void</c> and accept no parameters.
            </param>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.OnPlay(Holoville.HOTween.Core.TweenDelegate.TweenCallbackWParms,System.Object[])">
            <summary>
            Function to call when the Tweener switches from a paused state to a playing state.
            </summary>
            <param name="p_function">
            The function to call.
            It must return <c>void</c> and has to accept a single parameter of type <see cref="T:Holoville.HOTween.TweenEvent"/>.
            </param>
            <param name="p_funcParms">
            Additional comma separated parameters to pass to the function.
            </param>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.OnRewinded(Holoville.HOTween.Core.TweenDelegate.TweenCallback)">
            <summary>
            Function to call each time the Tweener is rewinded from a non-rewinded state
            (either because of a direct call to Rewind,
            or because the tween's virtual playehead reached the start due to a playing backwards behaviour).
            </summary>
            <param name="p_function">
            The function to call, who must return <c>void</c> and accept no parameters.
            </param>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.OnRewinded(Holoville.HOTween.Core.TweenDelegate.TweenCallbackWParms,System.Object[])">
            <summary>
            Function to call each time the Tweener is rewinded from a non-rewinded state
            (either because of a direct call to Rewind,
            or because the tween's virtual playehead reached the start due to a playing backwards behaviour).
            </summary>
            <param name="p_function">
            The function to call.
            It must return <c>void</c> and has to accept a single parameter of type <see cref="T:Holoville.HOTween.TweenEvent"/>.
            </param>
            <param name="p_funcParms">
            Additional comma separated parameters to pass to the function.
            </param>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.OnStepComplete(Holoville.HOTween.Core.TweenDelegate.TweenCallback)">
            <summary>
            Function to call each time a single loop of the Tweener is completed.
            </summary>
            <param name="p_function">
            The function to call, who must return <c>void</c> and accept no parameters.
            </param>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.OnStepComplete(Holoville.HOTween.Core.TweenDelegate.TweenCallbackWParms,System.Object[])">
            <summary>
            Function to call each time a single loop of the Tweener is completed.
            </summary>
            <param name="p_function">
            The function to call.
            It must return <c>void</c> and has to accept a single parameter of type <see cref="T:Holoville.HOTween.TweenEvent"/>.
            </param>
            <param name="p_funcParms">
            Additional comma separated parameters to pass to the function.
            </param>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.OnStepComplete(UnityEngine.GameObject,System.String,System.Object,UnityEngine.SendMessageOptions)">
            <summary>
            Uses sendMessage to call the method named p_methodName 
            on every MonoBehaviour in the p_sendMessageTarget GameObject.
            </summary>
            <param name="p_sendMessageTarget">GameObject to target for sendMessage</param>
            <param name="p_methodName">Name of the method to call</param>
            <param name="p_value">Eventual additional parameter</param>
            <param name="p_options">SendMessageOptions</param>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.OnComplete(Holoville.HOTween.Core.TweenDelegate.TweenCallback)">
            <summary>
            Function to call when the full Tweener, loops included, is completed.
            </summary>
            <param name="p_function">
            The function to call, who must return <c>void</c> and accept no parameters.
            </param>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.OnComplete(Holoville.HOTween.Core.TweenDelegate.TweenCallbackWParms,System.Object[])">
            <summary>
            Function to call when the full Tweener, loops included, is completed.
            </summary>
            <param name="p_function">
            The function to call.
            It must return <c>void</c> and has to accept a single parameter of type <see cref="T:Holoville.HOTween.TweenEvent"/>.
            </param>
            <param name="p_funcParms">
            Additional comma separated parameters to pass to the function.
            </param>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.OnComplete(UnityEngine.GameObject,System.String,System.Object,UnityEngine.SendMessageOptions)">
            <summary>
            Uses sendMessage to call the method named p_methodName 
            on every MonoBehaviour in the p_sendMessageTarget GameObject.
            </summary>
            <param name="p_sendMessageTarget">GameObject to target for sendMessage</param>
            <param name="p_methodName">Name of the method to call</param>
            <param name="p_value">Eventual additional parameter</param>
            <param name="p_options">SendMessageOptions</param>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.OnPluginOverwritten(Holoville.HOTween.Core.TweenDelegate.TweenCallback)">
            <summary>
            Function to call when one of the plugins used in the tween gets overwritten
            (available only if OverwriteManager is active).
            </summary>
            <param name="p_function">
            The function to call, who must return <c>void</c> and accept no parameters.
            </param>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.OnPluginOverwritten(Holoville.HOTween.Core.TweenDelegate.TweenCallbackWParms,System.Object[])">
            <summary>
            Function to call when one of the plugins used in the tween gets overwritten
            (available only if OverwriteManager is active).
            </summary>
            <param name="p_function">
            The function to call.
            It must return <c>void</c> and has to accept a single parameter of type <see cref="T:Holoville.HOTween.TweenEvent"/>.
            </param>
            <param name="p_funcParms">
            Additional comma separated parameters to pass to the function.
            </param>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.KeepEnabled(UnityEngine.Behaviour)">
            <summary>
            Keeps the given component enabled while the tween is playing
            </summary>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.KeepEnabled(UnityEngine.GameObject)">
            <summary>
            Keeps the given gameObject activated while the tween is playing
            </summary>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.KeepEnabled(UnityEngine.Behaviour[])">
            <summary>
            Keeps the given components enabled while the tween is playing
            </summary>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.KeepEnabled(UnityEngine.GameObject[])">
            <summary>
            Keeps the given GameObject activated while the tween is playing
            </summary>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.KeepDisabled(UnityEngine.Behaviour)">
            <summary>
            Keeps the given component disabled while the tween is playing
            </summary>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.KeepDisabled(UnityEngine.GameObject)">
            <summary>
            Keeps the given GameObject disabled while the tween is playing
            </summary>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.KeepDisabled(UnityEngine.Behaviour[])">
            <summary>
            Keeps the given components disabled while the tween is playing
            </summary>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.KeepDisabled(UnityEngine.GameObject[])">
            <summary>
            Keeps the given GameObject disabled while the tween is playing
            </summary>
        </member>
        <member name="M:Holoville.HOTween.TweenParms.IsFrom">
            <summary>
            Used by HOTween.From to set isFrom property.
            </summary>
            <returns>
            A <see cref="T:Holoville.HOTween.TweenParms"/>
            </returns>
        </member>
        <member name="P:Holoville.HOTween.TweenParms.hasProps">
            <summary>
            Returns <c>true</c> if at least one property tween was added to these parameters,
            either via <c>Prop()</c> or <c>NewProp()</c>.
            </summary>
        </member>
        <member name="T:Holoville.HOTween.LoopType">
            <summary>
            Enumeration of types of loops to apply.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.LoopType.Restart">
            <summary>
            When a tween completes, rewinds the animation and restarts (X to Y, repeat).
            </summary>
        </member>
        <member name="F:Holoville.HOTween.LoopType.Yoyo">
            <summary>
            Tweens to the end values then back to the original ones and so on (X to Y, Y to X, repeat).
            </summary>
        </member>
        <member name="F:Holoville.HOTween.LoopType.YoyoInverse">
            <summary>
            Like <see cref="F:Holoville.HOTween.LoopType.Yoyo"/>, but also inverts the easing (meaning if it was <c>easeInSomething</c>, it will become <c>easeOutSomething</c>, and viceversa).
            </summary>
        </member>
        <member name="F:Holoville.HOTween.LoopType.Incremental">
            <summary>
            Continuously increments the tween (X to Y, Y to Y+(Y-X), and so on),
            thus always moving "onward".
            </summary>
        </member>
        <member name="T:Holoville.HOTween.Core.Easing.Cubic">
            <summary>
            This class contains a C# port of the easing equations created by Robert Penner (http://robertpenner.com/easing).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.Easing.Cubic.EaseIn(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Easing equation function for a cubic (t^3) easing in: accelerating from zero velocity.
            </summary>
            <param name="time">
            Current time (in frames or seconds).
            </param>
            <param name="startValue">
            Starting value.
            </param>
            <param name="changeValue">
            Change needed in value.
            </param>
            <param name="duration">
            Expected easing duration (in frames or seconds).
            </param>
            <param name="unusedOvershootOrAmplitude">Unused: here to keep same delegate for all ease types.</param>
            <param name="unusedPeriod">Unused: here to keep same delegate for all ease types.</param>
            <returns>
            The eased value.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Core.Easing.Cubic.EaseOut(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Easing equation function for a cubic (t^3) easing out: decelerating from zero velocity.
            </summary>
            <param name="time">
            Current time (in frames or seconds).
            </param>
            <param name="startValue">
            Starting value.
            </param>
            <param name="changeValue">
            Change needed in value.
            </param>
            <param name="duration">
            Expected easing duration (in frames or seconds).
            </param>
            <param name="unusedOvershootOrAmplitude">Unused: here to keep same delegate for all ease types.</param>
            <param name="unusedPeriod">Unused: here to keep same delegate for all ease types.</param>
            <returns>
            The eased value.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Core.Easing.Cubic.EaseInOut(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Easing equation function for a cubic (t^3) easing in/out: acceleration until halfway, then deceleration.
            </summary>
            <param name="time">
            Current time (in frames or seconds).
            </param>
            <param name="startValue">
            Starting value.
            </param>
            <param name="changeValue">
            Change needed in value.
            </param>
            <param name="duration">
            Expected easing duration (in frames or seconds).
            </param>
            <param name="unusedOvershootOrAmplitude">Unused: here to keep same delegate for all ease types.</param>
            <param name="unusedPeriod">Unused: here to keep same delegate for all ease types.</param>
            <returns>
            The eased value.
            </returns>
        </member>
        <member name="T:Holoville.HOTween.Core.Easing.Circ">
            <summary>
            This class contains a C# port of the easing equations created by Robert Penner (http://robertpenner.com/easing).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.Easing.Circ.EaseIn(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Easing equation function for a circular (sqrt(1-t^2)) easing in: accelerating from zero velocity.
            </summary>
            <param name="time">
            Current time (in frames or seconds).
            </param>
            <param name="startValue">
            Starting value.
            </param>
            <param name="changeValue">
            Change needed in value.
            </param>
            <param name="duration">
            Expected easing duration (in frames or seconds).
            </param>
            <param name="unusedOvershootOrAmplitude">Unused: here to keep same delegate for all ease types.</param>
            <param name="unusedPeriod">Unused: here to keep same delegate for all ease types.</param>
            <returns>
            The eased value.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Core.Easing.Circ.EaseOut(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Easing equation function for a circular (sqrt(1-t^2)) easing out: decelerating from zero velocity.
            </summary>
            <param name="time">
            Current time (in frames or seconds).
            </param>
            <param name="startValue">
            Starting value.
            </param>
            <param name="changeValue">
            Change needed in value.
            </param>
            <param name="duration">
            Expected easing duration (in frames or seconds).
            </param>
            <param name="unusedOvershootOrAmplitude">Unused: here to keep same delegate for all ease types.</param>
            <param name="unusedPeriod">Unused: here to keep same delegate for all ease types.</param>
            <returns>
            The eased value.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Core.Easing.Circ.EaseInOut(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Easing equation function for a circular (sqrt(1-t^2)) easing in/out: acceleration until halfway, then deceleration.
            </summary>
            <param name="time">
            Current time (in frames or seconds).
            </param>
            <param name="startValue">
            Starting value.
            </param>
            <param name="changeValue">
            Change needed in value.
            </param>
            <param name="duration">
            Expected easing duration (in frames or seconds).
            </param>
            <param name="unusedOvershootOrAmplitude">Unused: here to keep same delegate for all ease types.</param>
            <param name="unusedPeriod">Unused: here to keep same delegate for all ease types.</param>
            <returns>
            The eased value.
            </returns>
        </member>
        <member name="T:Holoville.HOTween.Core.Easing.Back">
            <summary>
            This class contains a C# port of the easing equations created by Robert Penner (http://robertpenner.com/easing).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Core.Easing.Back.EaseIn(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Easing equation function for a back (overshooting cubic easing: (s+1)*t^3 - s*t^2) easing in: accelerating from zero velocity.
            </summary>
            <param name="time">
            Current time (in frames or seconds).
            </param>
            <param name="startValue">
            Starting value.
            </param>
            <param name="changeValue">
            Change needed in value.
            </param>
            <param name="duration">
            Expected easing duration (in frames or seconds).
            </param>
            <param name="overshoot">
            Overshoot ammount: higher means greater overshoot (0 produces cubic easing with no overshoot, and the default value of 1.70158 produces an overshoot of 10 percent).
            </param>
            <param name="unusedPeriod">Unused: here to keep same delegate for all ease types.</param>
            <returns>
            The eased value.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Core.Easing.Back.EaseOut(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Easing equation function for a back (overshooting cubic easing: (s+1)*t^3 - s*t^2) easing out: decelerating from zero velocity.
            </summary>
            <param name="time">
            Current time (in frames or seconds).
            </param>
            <param name="startValue">
            Starting value.
            </param>
            <param name="changeValue">
            Change needed in value.
            </param>
            <param name="duration">
            Expected easing duration (in frames or seconds).
            </param>
            <param name="overshoot">
            Overshoot ammount: higher means greater overshoot (0 produces cubic easing with no overshoot, and the default value of 1.70158 produces an overshoot of 10 percent).
            </param>
            <param name="unusedPeriod">Unused: here to keep same delegate for all ease types.</param>
            <returns>
            The eased value.
            </returns>
        </member>
        <member name="M:Holoville.HOTween.Core.Easing.Back.EaseInOut(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Easing equation function for a back (overshooting cubic easing: (s+1)*t^3 - s*t^2) easing in/out: acceleration until halfway, then deceleration.
            </summary>
            <param name="time">
            Current time (in frames or seconds).
            </param>
            <param name="startValue">
            Starting value.
            </param>
            <param name="changeValue">
            Change needed in value.
            </param>
            <param name="duration">
            Expected easing duration (in frames or seconds).
            </param>
            <param name="overshoot">
            Overshoot ammount: higher means greater overshoot (0 produces cubic easing with no overshoot, and the default value of 1.70158 produces an overshoot of 10 percent).
            </param>
            <param name="unusedPeriod">Unused: here to keep same delegate for all ease types.</param>
            <returns>
            The eased value.
            </returns>
        </member>
        <member name="T:Holoville.HOTween.Plugins.PlugSetFloat">
            <summary>
            Plugin for the tweening of the float of your choice.
            Used for changing material floats.
            Target for this tween must be of type <see cref="T:UnityEngine.Material"/>.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugSetFloat.#ctor(System.Single)">
            <summary>
            Creates a new instance of this plugin using the main ease type.
            </summary>
            <param name="p_endVal">
            The <see cref="T:System.Single"/> value to tween to.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugSetFloat.#ctor(System.Single,Holoville.HOTween.EaseType)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:System.Single"/> value to tween to.
            </param>
            <param name="p_easeType">
            The <see cref="T:Holoville.HOTween.EaseType"/> to use.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugSetFloat.#ctor(System.Single,System.Boolean)">
            <summary>
            Creates a new instance of this plugin using the main ease type.
            </summary>
            <param name="p_endVal">
            The <see cref="T:System.Single"/> value to tween to.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugSetFloat.#ctor(System.Single,Holoville.HOTween.EaseType,System.Boolean)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:System.Single"/> value to tween to.
            </param>
            <param name="p_easeType">
            The <see cref="T:Holoville.HOTween.EaseType"/> to use.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugSetFloat.#ctor(System.Single,UnityEngine.AnimationCurve,System.Boolean)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:System.Single"/> value to tween to.
            </param>
            <param name="p_easeAnimCurve">
            The <see cref="T:UnityEngine.AnimationCurve"/> to use for easing.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugSetFloat.Property(System.String)">
            <summary>
            Selects the color property to change.
            </summary>
            <param name="p_propertyName">
            The propertyName/floatName to change (see Unity's <see cref="M:UnityEngine.Material.SetFloat(System.String,System.Single)"/> if you don't know how it works).
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugSetFloat.ValidateTarget(System.Object)">
            <summary>
            Overridden by plugins that need a specific type of target, to check it and validate it.
            Returns <c>true</c> if the tween target is valid.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugSetFloat.DoUpdate(System.Single)">
            <summary>
            Updates the tween.
            </summary>
            <param name="p_totElapsed">
            The total elapsed time since startup.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugSetFloat.GetSpeedBasedDuration(System.Single)">
            <summary>
            Returns the speed-based duration based on the given speed x second.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugSetFloat.SetChangeVal">
            <summary>
            Sets the typed changeVal based on the current startVal and endVal.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugSetFloat.SetIncremental(System.Int32)">
            <summary>
            Sets the correct values in case of Incremental loop type.
            </summary>
            <param name="p_diffIncr">
            The difference from the previous loop increment.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugSetFloat.SetValue(System.Object)">
            <summary>
            Sets the value of the controlled property.
            Some plugins (like PlugSetColor) might override this to get values from different properties.
            </summary>
            <param name="p_value">
            The new value.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugSetFloat.GetValue">
            <summary>
            Gets the current value of the controlled property.
            Some plugins (like PlugSetColor) might override this to set values on different properties.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Plugins.PlugSetFloat.startVal">
            <summary>
            Gets the untyped start value,
            sets both the untyped and the typed start value.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Plugins.PlugSetFloat.endVal">
            <summary>
            Gets the untyped end value,
            sets both the untyped and the typed end value.
            </summary>
        </member>
        <member name="T:Holoville.HOTween.Plugins.PlugQuaternion">
            <summary>
            Default plugin for the tweening of Quaternion objects.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugQuaternion.#ctor(UnityEngine.Quaternion)">
            <summary>
            Creates a new instance of this plugin using the main ease type.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Quaternion"/> value to tween to.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugQuaternion.#ctor(UnityEngine.Quaternion,Holoville.HOTween.EaseType)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Quaternion"/> value to tween to.
            </param>
            <param name="p_easeType">
            The <see cref="T:Holoville.HOTween.EaseType"/> to use.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugQuaternion.#ctor(UnityEngine.Quaternion,System.Boolean)">
            <summary>
            Creates a new instance of this plugin using the main ease type.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Quaternion"/> value to tween to.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugQuaternion.#ctor(UnityEngine.Quaternion,Holoville.HOTween.EaseType,System.Boolean)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Quaternion"/> value to tween to.
            </param>
            <param name="p_easeType">
            The <see cref="T:Holoville.HOTween.EaseType"/> to use.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugQuaternion.#ctor(UnityEngine.Vector3)">
            <summary>
            Creates a new instance of this plugin using the main ease type.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Vector3"/> euler angles to tween to.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugQuaternion.#ctor(UnityEngine.Vector3,Holoville.HOTween.EaseType)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Vector3"/> euler angles to tween to.
            </param>
            <param name="p_easeType">
            The <see cref="T:Holoville.HOTween.EaseType"/> to use.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugQuaternion.#ctor(UnityEngine.Vector3,System.Boolean)">
            <summary>
            Creates a new instance of this plugin using the main ease type.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Vector3"/> euler angles to tween to.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugQuaternion.#ctor(UnityEngine.Vector3,Holoville.HOTween.EaseType,System.Boolean)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Vector3"/> euler angles to tween to.
            </param>
            <param name="p_easeType">
            The <see cref="T:Holoville.HOTween.EaseType"/> to use.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugQuaternion.#ctor(UnityEngine.Vector3,UnityEngine.AnimationCurve,System.Boolean)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Vector3"/> value to tween to.
            </param>
            <param name="p_easeAnimCurve">
            The <see cref="T:UnityEngine.AnimationCurve"/> to use for easing.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugQuaternion.#ctor(UnityEngine.Quaternion,UnityEngine.AnimationCurve,System.Boolean)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:UnityEngine.Quaternion"/> value to tween to.
            </param>
            <param name="p_easeAnimCurve">
            The <see cref="T:UnityEngine.AnimationCurve"/> to use for easing.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugQuaternion.Beyond360">
            <summary>
            Parameter > Sets rotations to be calculated fully,
            and the end value will be reached using the full degrees of the given rotation, even if beyond 360 degrees.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugQuaternion.Beyond360(System.Boolean)">
            <summary>
            Parameter > Choose whether you want to calculate angles bigger than 360 degrees or not.
            In the first case, the end value will be reached using the full degrees of the given rotation.
            In the second case, the end value will be reached from the shortest direction.
            If the endValue is set as <c>relative</c>, this option will have no effect, and full beyond 360 rotations will always be used.
            </summary>
            <param name="p_beyond360">
            Set to <c>true</c> to use angles bigger than 360 degrees.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugQuaternion.GetSpeedBasedDuration(System.Single)">
            <summary>
            Returns the speed-based duration based on the given speed x second.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugQuaternion.SetChangeVal">
            <summary>
            Sets the typed changeVal based on the current startVal and endVal.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugQuaternion.SetIncremental(System.Int32)">
            <summary>
            Sets the correct values in case of Incremental loop type.
            </summary>
            <param name="p_diffIncr">
            The difference from the previous loop increment.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugQuaternion.DoUpdate(System.Single)">
            <summary>
            Updates the tween.
            </summary>
            <param name="p_totElapsed">
            The total elapsed time since startup.
            </param>
        </member>
        <member name="P:Holoville.HOTween.Plugins.PlugQuaternion.startVal">
            <summary>
            Gets the untyped start value,
            sets both the untyped and the typed start value.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Plugins.PlugQuaternion.endVal">
            <summary>
            Gets the untyped end value,
            sets both the untyped and the typed end value.
            </summary>
        </member>
        <member name="T:Holoville.HOTween.Core.TweenDelegate">
            <summary>
            Enum of delegates used by HOTween.
            </summary>
        </member>
        <member name="T:Holoville.HOTween.Core.TweenDelegate.TweenCallbackWParms">
            <summary>
            Delegate used to store OnEvent (OnStart, OnComplete, etc) functions that will accept a <see cref="T:Holoville.HOTween.TweenEvent"/> parameter.
            </summary>
        </member>
        <member name="T:Holoville.HOTween.Core.TweenDelegate.TweenCallback">
            <summary>
            Delegate used to store OnEvent (OnStart, OnComplete, etc) functions without parameters.
            </summary>
        </member>
        <member name="T:Holoville.HOTween.Core.TweenDelegate.EaseFunc">
            <summary>
            Delegate used internally for ease functions.
            </summary>
        </member>
        <member name="T:Holoville.HOTween.Core.TweenDelegate.HOFunc`1">
            <summary>
            Used in place of <c>System.Func</c>, which is not available in mscorlib.
            </summary>
        </member>
        <member name="T:Holoville.HOTween.Core.TweenDelegate.HOAction`1">
            <summary>
            Used in place of <c>System.Action</c>.
            </summary>
        </member>
        <member name="T:Holoville.HOTween.TweenVar">
            <summary>
            A special class used to setup a "virtual" tween,
            which will not actually be tweened nor updated,
            but will just set and return a value when you call Update.
            </summary>
        </member>
        <member name="F:Holoville.HOTween.TweenVar.duration">
            <summary>
            Virtual duration
            (you could also set it to 1 or 100 to treat it as a percentage).
            </summary>
        </member>
        <member name="M:Holoville.HOTween.TweenVar.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Creates a new TweenVar instance using Linear ease.
            </summary>
            <param name="p_startVal">
            Start value (FROM).
            </param>
            <param name="p_endVal">
            End value (TO).
            </param>
            <param name="p_duration">
            Virtual duration.
            (you could also set it to 1 or 100 to treat it as a percentage).
            </param>
        </member>
        <member name="M:Holoville.HOTween.TweenVar.#ctor(System.Single,System.Single,System.Single,Holoville.HOTween.EaseType)">
            <summary>
            Creates a new TweenVar instance.
            </summary>
            <param name="p_startVal">
            Start value (FROM).
            </param>
            <param name="p_endVal">
            End value (TO).
            </param>
            <param name="p_duration">
            Virtual duration.
            (you could also set it to 1 or 100 to treat it as a percentage).
            </param>
            <param name="p_easeType">
            Ease type.
            </param>
        </member>
        <member name="M:Holoville.HOTween.TweenVar.Update(System.Single)">
            <summary>
            Sets and returns the value at which this <see cref="T:Holoville.HOTween.TweenVar"/>
            would be after the given absolute time.
            </summary>
            <param name="p_elapsed">
            The elapsed time to calculate.
            </param>
        </member>
        <member name="M:Holoville.HOTween.TweenVar.Update(System.Single,System.Boolean)">
            <summary>
            Sets and returns the value at which this <see cref="T:Holoville.HOTween.TweenVar"/>
            would be after the given time.
            </summary>
            <param name="p_elapsed">
            The elapsed time to calculate.
            </param>
            <param name="p_relative">
            If <c>true</c> consideres p_elapsed as relative,
            meaning it will be added to the previous elapsed time,
            otherwise it is considered absolute.
            </param>
        </member>
        <member name="P:Holoville.HOTween.TweenVar.startVal">
            <summary>
            Start value (FROM).
            </summary>
        </member>
        <member name="P:Holoville.HOTween.TweenVar.endVal">
            <summary>
            End value (TO).
            </summary>
        </member>
        <member name="P:Holoville.HOTween.TweenVar.easeType">
            <summary>
            Ease type.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.TweenVar.value">
            <summary>
            The current value of this <see cref="T:Holoville.HOTween.TweenVar"/>
            </summary>
        </member>
        <member name="P:Holoville.HOTween.TweenVar.elapsed">
            <summary>
            The current elapsed time.
            </summary>
        </member>
        <member name="T:Holoville.HOTween.SequenceParms">
            <summary>
            Method chaining parameters for a <see cref="T:Holoville.HOTween.Sequence"/>.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.SequenceParms.InitializeSequence(Holoville.HOTween.Sequence)">
            <summary>
            Initializes the given <see cref="T:Holoville.HOTween.Sequence"/> with the stored parameters.
            </summary>
            <param name="p_sequence">
            The <see cref="T:Holoville.HOTween.Sequence"/> to initialize.
            </param>
        </member>
        <member name="M:Holoville.HOTween.SequenceParms.Id(System.String)">
            <summary>
            Sets the ID of this Sequence (default = "").
            The same ID can be applied to multiple Sequences, thus allowing for group operations.
            You can also use <c>IntId</c> instead of <c>Id</c> for faster operations.
            </summary>
            <param name="p_id">
            The ID for this Sequence.
            </param>
        </member>
        <member name="M:Holoville.HOTween.SequenceParms.IntId(System.Int32)">
            <summary>
            Sets the int ID of this Tweener (default = 0).
            The same intId can be applied to multiple Tweeners, thus allowing for group operations.
            The main difference from <c>Id</c> is that while <c>Id</c> is more legible, <c>IntId</c> allows for faster operations.
            </summary>
            <param name="p_intId">
            The int ID for this Tweener.
            </param>
        </member>
        <member name="M:Holoville.HOTween.SequenceParms.AutoKill(System.Boolean)">
            <summary>
            Sets auto-kill behaviour for when the Sequence reaches its end (default = <c>false</c>).
            </summary>
            <param name="p_active">
            If <c>true</c> the Sequence is killed and removed from HOTween as soon as it's completed.
            If <c>false</c> doesn't remove this Sequence from HOTween when it is completed,
            and you will need to call an <c>HOTween.Kill</c> to remove this Sequence.
            </param>
        </member>
        <member name="M:Holoville.HOTween.SequenceParms.UpdateType(Holoville.HOTween.UpdateType)">
            <summary>
            Sets the type of update to use for this Sequence (default = <see cref="M:Holoville.HOTween.SequenceParms.UpdateType(Holoville.HOTween.UpdateType)"/><c>.Update</c>).
            </summary>
            <param name="p_updateType">
            The type of update to use.
            </param>
        </member>
        <member name="M:Holoville.HOTween.SequenceParms.TimeScale(System.Single)">
            <summary>
            Sets the time scale that will be used by this Sequence.
            </summary>
            <param name="p_timeScale">
            The time scale to use.
            </param>
        </member>
        <member name="M:Holoville.HOTween.SequenceParms.Loops(System.Int32)">
            <summary>
            Sets the number of times the Sequence will run (default = <c>1</c>, meaning only one go and no other loops).
            </summary>
            <param name="p_loops">
            Number of loops (set it to <c>-1</c> or <see cref="F:System.Single.PositiveInfinity"/> to apply infinite loops).
            </param>
        </member>
        <member name="M:Holoville.HOTween.SequenceParms.Loops(System.Int32,Holoville.HOTween.LoopType)">
            <summary>
            Sets the number of times the Sequence will run,
            and the type of loop behaviour to apply
            (default = <c>1</c>, <c>LoopType.Restart</c>).
            </summary>
            <param name="p_loops">
            Number of loops (set it to <c>-1</c> or <see cref="F:System.Single.PositiveInfinity"/> to apply infinite loops).
            </param>
            <param name="p_loopType">
            The <see cref="T:Holoville.HOTween.LoopType"/> behaviour to use.
            Note the <see cref="F:Holoville.HOTween.LoopType.Incremental"/> is available, but as an experimental feature.
            It works with simple Sequences, but you should check that your animation
            works as intended with more complex Sequences.
            </param>
        </member>
        <member name="M:Holoville.HOTween.SequenceParms.OnStart(Holoville.HOTween.Core.TweenDelegate.TweenCallback)">
            <summary>
            Function to call when the Sequence is started for the very first time.
            </summary>
            <param name="p_function">
            The function to call, who must return <c>void</c> and accept no parameters.
            </param>
        </member>
        <member name="M:Holoville.HOTween.SequenceParms.OnStart(Holoville.HOTween.Core.TweenDelegate.TweenCallbackWParms,System.Object[])">
            <summary>
            Function to call when the Sequence is started for the very first time.
            </summary>
            <param name="p_function">
            The function to call.
            It must return <c>void</c> and has to accept a single parameter of type <see cref="T:Holoville.HOTween.TweenEvent"/>.
            </param>
            <param name="p_funcParms">
            Additional comma separated parameters to pass to the function.
            </param>
        </member>
        <member name="M:Holoville.HOTween.SequenceParms.OnUpdate(Holoville.HOTween.Core.TweenDelegate.TweenCallback)">
            <summary>
            Function to call each time the Sequence is updated.
            </summary>
            <param name="p_function">
            The function to call, who must return <c>void</c> and accept no parameters.
            </param>
        </member>
        <member name="M:Holoville.HOTween.SequenceParms.OnUpdate(Holoville.HOTween.Core.TweenDelegate.TweenCallbackWParms,System.Object[])">
            <summary>
            Function to call each time the Sequence is updated.
            </summary>
            <param name="p_function">
            The function to call.
            It must return <c>void</c> and has to accept a single parameter of type <see cref="T:Holoville.HOTween.TweenEvent"/>.
            </param>
            <param name="p_funcParms">
            Additional comma separated parameters to pass to the function.
            </param>
        </member>
        <member name="M:Holoville.HOTween.SequenceParms.OnPause(Holoville.HOTween.Core.TweenDelegate.TweenCallback)">
            <summary>
            Function to call when the Sequence switches from a playing state to a paused state.
            </summary>
            <param name="p_function">
            The function to call, who must return <c>void</c> and accept no parameters.
            </param>
        </member>
        <member name="M:Holoville.HOTween.SequenceParms.OnPause(Holoville.HOTween.Core.TweenDelegate.TweenCallbackWParms,System.Object[])">
            <summary>
            Function to call when the Sequence switches from a playing state to a paused state.
            </summary>
            <param name="p_function">
            The function to call.
            It must return <c>void</c> and has to accept a single parameter of type <see cref="T:Holoville.HOTween.TweenEvent"/>.
            </param>
            <param name="p_funcParms">
            Additional comma separated parameters to pass to the function.
            </param>
        </member>
        <member name="M:Holoville.HOTween.SequenceParms.OnPlay(Holoville.HOTween.Core.TweenDelegate.TweenCallback)">
            <summary>
            Function to call when the Sequence switches from a paused state to a playing state.
            </summary>
            <param name="p_function">
            The function to call, who must return <c>void</c> and accept no parameters.
            </param>
        </member>
        <member name="M:Holoville.HOTween.SequenceParms.OnPlay(Holoville.HOTween.Core.TweenDelegate.TweenCallbackWParms,System.Object[])">
            <summary>
            Function to call when the Sequence switches from a paused state to a playing state.
            </summary>
            <param name="p_function">
            The function to call.
            It must return <c>void</c> and has to accept a single parameter of type <see cref="T:Holoville.HOTween.TweenEvent"/>.
            </param>
            <param name="p_funcParms">
            Additional comma separated parameters to pass to the function.
            </param>
        </member>
        <member name="M:Holoville.HOTween.SequenceParms.OnRewinded(Holoville.HOTween.Core.TweenDelegate.TweenCallback)">
            <summary>
            Function to call each time the sequence is rewinded from a non-rewinded state
            (either because of a direct call to Rewind,
            or because the tween's virtual playehead reached the start due to a playing backwards behaviour).
            </summary>
            <param name="p_function">
            The function to call, who must return <c>void</c> and accept no parameters.
            </param>
        </member>
        <member name="M:Holoville.HOTween.SequenceParms.OnRewinded(Holoville.HOTween.Core.TweenDelegate.TweenCallbackWParms,System.Object[])">
            <summary>
            Function to call each time the sequence is rewinded from a non-rewinded state
            (either because of a direct call to Rewind,
            or because the tween's virtual playehead reached the start due to a playing backwards behaviour).
            </summary>
            <param name="p_function">
            The function to call.
            It must return <c>void</c> and has to accept a single parameter of type <see cref="T:Holoville.HOTween.TweenEvent"/>.
            </param>
            <param name="p_funcParms">
            Additional comma separated parameters to pass to the function.
            </param>
        </member>
        <member name="M:Holoville.HOTween.SequenceParms.OnStepComplete(Holoville.HOTween.Core.TweenDelegate.TweenCallback)">
            <summary>
            Function to call each time a single loop of the Sequence is completed.
            </summary>
            <param name="p_function">
            The function to call, who must return <c>void</c> and accept no parameters.
            </param>
        </member>
        <member name="M:Holoville.HOTween.SequenceParms.OnStepComplete(Holoville.HOTween.Core.TweenDelegate.TweenCallbackWParms,System.Object[])">
            <summary>
            Function to call each time a single loop of the Sequence is completed.
            </summary>
            <param name="p_function">
            The function to call.
            It must return <c>void</c> and has to accept a single parameter of type <see cref="T:Holoville.HOTween.TweenEvent"/>.
            </param>
            <param name="p_funcParms">
            Additional comma separated parameters to pass to the function.
            </param>
        </member>
        <member name="M:Holoville.HOTween.SequenceParms.OnStepComplete(UnityEngine.GameObject,System.String,System.Object,UnityEngine.SendMessageOptions)">
            <summary>
            Uses sendMessage to call the method named p_methodName 
            on every MonoBehaviour in the p_sendMessageTarget GameObject.
            </summary>
            <param name="p_sendMessageTarget">GameObject to target for sendMessage</param>
            <param name="p_methodName">Name of the method to call</param>
            <param name="p_value">Eventual additional parameter</param>
            <param name="p_options">SendMessageOptions</param>
        </member>
        <member name="M:Holoville.HOTween.SequenceParms.OnComplete(Holoville.HOTween.Core.TweenDelegate.TweenCallback)">
            <summary>
            Function to call when the full Sequence, loops included, is completed.
            </summary>
            <param name="p_function">
            The function to call, who must return <c>void</c> and accept no parameters.
            </param>
        </member>
        <member name="M:Holoville.HOTween.SequenceParms.OnComplete(Holoville.HOTween.Core.TweenDelegate.TweenCallbackWParms,System.Object[])">
            <summary>
            Function to call when the full Sequence, loops included, is completed.
            </summary>
            <param name="p_function">
            The function to call.
            It must return <c>void</c> and has to accept a single parameter of type <see cref="T:Holoville.HOTween.TweenEvent"/>.
            </param>
            <param name="p_funcParms">
            Additional comma separated parameters to pass to the function.
            </param>
        </member>
        <member name="M:Holoville.HOTween.SequenceParms.OnComplete(UnityEngine.GameObject,System.String,System.Object,UnityEngine.SendMessageOptions)">
            <summary>
            Uses sendMessage to call the method named p_methodName 
            on every MonoBehaviour in the p_sendMessageTarget GameObject.
            </summary>
            <param name="p_sendMessageTarget">GameObject to target for sendMessage</param>
            <param name="p_methodName">Name of the method to call</param>
            <param name="p_value">Eventual additional parameter</param>
            <param name="p_options">SendMessageOptions</param>
        </member>
        <member name="M:Holoville.HOTween.SequenceParms.KeepEnabled(UnityEngine.Behaviour)">
            <summary>
            Keeps the given component enabled while the tween is playing
            </summary>
        </member>
        <member name="M:Holoville.HOTween.SequenceParms.KeepEnabled(UnityEngine.GameObject)">
            <summary>
            Keeps the given gameObject activated while the tween is playing
            </summary>
        </member>
        <member name="M:Holoville.HOTween.SequenceParms.KeepEnabled(UnityEngine.Behaviour[])">
            <summary>
            Keeps the given components enabled while the tween is playing
            </summary>
        </member>
        <member name="M:Holoville.HOTween.SequenceParms.KeepEnabled(UnityEngine.GameObject[])">
            <summary>
            Keeps the given GameObject activated while the tween is playing
            </summary>
        </member>
        <member name="M:Holoville.HOTween.SequenceParms.KeepDisabled(UnityEngine.Behaviour)">
            <summary>
            Keeps the given component disabled while the tween is playing
            </summary>
        </member>
        <member name="M:Holoville.HOTween.SequenceParms.KeepDisabled(UnityEngine.GameObject)">
            <summary>
            Keeps the given GameObject disabled while the tween is playing
            </summary>
        </member>
        <member name="M:Holoville.HOTween.SequenceParms.KeepDisabled(UnityEngine.Behaviour[])">
            <summary>
            Keeps the given components disabled while the tween is playing
            </summary>
        </member>
        <member name="M:Holoville.HOTween.SequenceParms.KeepDisabled(UnityEngine.GameObject[])">
            <summary>
            Keeps the given GameObject disabled while the tween is playing
            </summary>
        </member>
        <member name="T:Holoville.HOTween.Plugins.PlugInt">
            <summary>
            Plugin for the tweening of number values only through integers.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugInt.#ctor(System.Single)">
            <summary>
            Creates a new instance of this plugin using the main ease type.
            </summary>
            <param name="p_endVal">
            The <see cref="T:System.Single"/> value to tween to.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugInt.#ctor(System.Single,Holoville.HOTween.EaseType)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:System.Single"/> value to tween to.
            </param>
            <param name="p_easeType">
            The <see cref="T:Holoville.HOTween.EaseType"/> to use.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugInt.#ctor(System.Single,System.Boolean)">
            <summary>
            Creates a new instance of this plugin using the main ease type.
            </summary>
            <param name="p_endVal">
            The <see cref="T:System.Single"/> value to tween to.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugInt.#ctor(System.Single,Holoville.HOTween.EaseType,System.Boolean)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:System.Single"/> value to tween to.
            </param>
            <param name="p_easeType">
            The <see cref="T:Holoville.HOTween.EaseType"/> to use.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugInt.#ctor(System.Single,UnityEngine.AnimationCurve,System.Boolean)">
            <summary>
            Creates a new instance of this plugin.
            </summary>
            <param name="p_endVal">
            The <see cref="T:System.Single"/> value to tween to.
            </param>
            <param name="p_easeAnimCurve">
            The <see cref="T:UnityEngine.AnimationCurve"/> to use for easing.
            </param>
            <param name="p_isRelative">
            If <c>true</c>, the given end value is considered relative instead than absolute.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugInt.GetSpeedBasedDuration(System.Single)">
            <summary>
            Returns the speed-based duration based on the given speed x second.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugInt.SetChangeVal">
            <summary>
            Sets the typed changeVal based on the current startVal and endVal.
            </summary>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugInt.SetIncremental(System.Int32)">
            <summary>
            Sets the correct values in case of Incremental loop type.
            </summary>
            <param name="p_diffIncr">
            The difference from the previous loop increment.
            </param>
        </member>
        <member name="M:Holoville.HOTween.Plugins.PlugInt.DoUpdate(System.Single)">
            <summary>
            Updates the tween.
            </summary>
            <param name="p_totElapsed">
            The total elapsed time since startup.
            </param>
        </member>
        <member name="P:Holoville.HOTween.Plugins.PlugInt.startVal">
            <summary>
            Gets the untyped start value,
            sets both the untyped and the typed start value.
            </summary>
        </member>
        <member name="P:Holoville.HOTween.Plugins.PlugInt.endVal">
            <summary>
            Gets the untyped end value,
            sets both the untyped and the typed end value.
            </summary>
        </member>
    </members>
</doc>
